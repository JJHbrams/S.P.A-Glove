
AVRASM ver. 2.1.30  C:\Users\MrJohd\Desktop\Task\Á¹¾÷ÀÛÇ°\AVR_code\SPAglove\List\SPAglove.asm Mon Jun 18 16:30:04 2018

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 16.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : Off
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0135 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0168 	JMP  _timer1_compa_isr
00001a 940c 0000 	JMP  0x00
00001c 940c 017a 	JMP  _timer1_ovf_isr
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0192 	JMP  _adc_isr
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 017b 	JMP  _timer3_compa_isr
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 018d 	JMP  _timer3_ovf_isr
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
00004f ffff
000050 ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x4:
000051 5250
000052 414b      	.DB  0x50,0x52,0x4B,0x41
                 _0x5:
000053 0000
000054 428c      	.DB  0x0,0x0,0x8C,0x42
                 _0x6:
000055 0000
000056 41f0      	.DB  0x0,0x0,0xF0,0x41
                 _0x7:
000057 0000
000058 41a0      	.DB  0x0,0x0,0xA0,0x41
                 _0x99:
000059 0000
00005a 0000
00005b 0000
00005c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005d 0000
00005e 0000
00005f 0000
000060 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0xB5:
000061 0000
000062 0000
000063 0000
000064 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000065 0000
000066 0000
000067 0000
000068 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0xD7:
000069 0000
00006a 0000
00006b 0000
00006c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006d 0000
00006e 0000
00006f 0000
000070 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000071 0000
000072 0000
000073 0000
000074 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0xEC:
000075 0000
000076 0000
000077 0000
000078 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000079 0000
00007a 0000
00007b 0000
00007c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007d 0000
00007e 0000
00007f 0000
000080 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x0:
000081 6554
000082 7473
000083 6e69
000084 0067      	.DB  0x54,0x65,0x73,0x74,0x69,0x6E,0x67,0x0
000085 6425
000086 5400
000087 6e75
000088 696e      	.DB  0x25,0x64,0x0,0x54,0x75,0x6E,0x6E,0x69
000089 676e
00008a 4400
00008b 7475
00008c 0079      	.DB  0x6E,0x67,0x0,0x44,0x75,0x74,0x79,0x0
00008d 6425
00008e 2520
00008f 4500
000090 4600      	.DB  0x25,0x64,0x20,0x25,0x0,0x45,0x0,0x46
000091 2d00
000092 5400
000093 4900
000094 4d00      	.DB  0x0,0x2D,0x0,0x54,0x0,0x49,0x0,0x4D
000095 5200
000096 5600
000097 6c61
000098 6576      	.DB  0x0,0x52,0x0,0x56,0x61,0x6C,0x76,0x65
000099 0021
00009a 7544
00009b 7974
00009c 3a20      	.DB  0x21,0x0,0x44,0x75,0x74,0x79,0x20,0x3A
00009d 0020
00009e 3225
00009f 2064
0000a0 0025      	.DB  0x20,0x0,0x25,0x32,0x64,0x20,0x25,0x0
0000a1 4c46
0000a2 5845
0000a3 5000
0000a4 4552      	.DB  0x46,0x4C,0x45,0x58,0x0,0x50,0x52,0x45
0000a5 0053
0000a6 6144
0000a7 6c69
0000a8 0079      	.DB  0x53,0x0,0x44,0x61,0x69,0x6C,0x79,0x0
0000a9 6552
0000aa 6168
0000ab 6962
0000ac 696c      	.DB  0x52,0x65,0x68,0x61,0x62,0x69,0x6C,0x69
0000ad 6174
0000ae 6974
0000af 6e6f
0000b0 4900      	.DB  0x74,0x61,0x74,0x69,0x6F,0x6E,0x0,0x49
0000b1 6c6e
0000b2 7465
0000b3 0021
0000b4 754f      	.DB  0x6E,0x6C,0x65,0x74,0x21,0x0,0x4F,0x75
0000b5 6c74
0000b6 7465
0000b7 0021
0000b8 3425      	.DB  0x74,0x6C,0x65,0x74,0x21,0x0,0x25,0x34
0000b9 2064
0000ba 0025
0000bb 2e31
0000bc 7250      	.DB  0x64,0x20,0x25,0x0,0x31,0x2E,0x50,0x72
0000bd 7365
0000be 7573
0000bf 6572
0000c0 5420      	.DB  0x65,0x73,0x73,0x75,0x72,0x65,0x20,0x54
0000c1 5345
0000c2 0054
0000c3 2e32
0000c4 7250      	.DB  0x45,0x53,0x54,0x0,0x32,0x2E,0x50,0x72
0000c5 7365
0000c6 7573
0000c7 6572
0000c8 5420      	.DB  0x65,0x73,0x73,0x75,0x72,0x65,0x20,0x54
0000c9 6e75
0000ca 696e
0000cb 676e
0000cc 3300      	.DB  0x75,0x6E,0x6E,0x69,0x6E,0x67,0x0,0x33
0000cd 462e
0000ce 656c
0000cf 2078
0000d0 4554      	.DB  0x2E,0x46,0x6C,0x65,0x78,0x20,0x54,0x45
0000d1 5453
0000d2 3400
0000d3 462e
0000d4 656c      	.DB  0x53,0x54,0x0,0x34,0x2E,0x46,0x6C,0x65
0000d5 2078
0000d6 7554
0000d7 6e6e
0000d8 6e69      	.DB  0x78,0x20,0x54,0x75,0x6E,0x6E,0x69,0x6E
0000d9 0067
0000da 2e35
0000db 5750
0000dc 204d      	.DB  0x67,0x0,0x35,0x2E,0x50,0x57,0x4D,0x20
0000dd 4554
0000de 5453
0000df 3600
0000e0 502e      	.DB  0x54,0x45,0x53,0x54,0x0,0x36,0x2E,0x50
0000e1 4d55
0000e2 2050
0000e3 4554
0000e4 5453      	.DB  0x55,0x4D,0x50,0x20,0x54,0x45,0x53,0x54
0000e5 3700
0000e6 4f2e
0000e7 6472
0000e8 7265      	.DB  0x0,0x37,0x2E,0x4F,0x72,0x64,0x65,0x72
0000e9 5420
0000ea 5345
0000eb 0054
0000ec 2e38      	.DB  0x20,0x54,0x45,0x53,0x54,0x0,0x38,0x2E
0000ed 6156
0000ee 766c
0000ef 2065
0000f0 724f      	.DB  0x56,0x61,0x6C,0x76,0x65,0x20,0x4F,0x72
0000f1 6564
0000f2 0072
0000f3 2e39
0000f4 6854      	.DB  0x64,0x65,0x72,0x0,0x39,0x2E,0x54,0x68
0000f5 6572
0000f6 6873
0000f7 6c6f
0000f8 3f64      	.DB  0x72,0x65,0x73,0x68,0x6F,0x6C,0x64,0x3F
0000f9 3100
0000fa 2e30
0000fb 5550
0000fc 504d      	.DB  0x0,0x31,0x30,0x2E,0x50,0x55,0x4D,0x50
0000fd 5620
0000fe 4c41
0000ff 4556
000100 3100      	.DB  0x20,0x56,0x41,0x4C,0x56,0x45,0x0,0x31
000101 2e31
000102 6144
000103 6c69
000104 2079      	.DB  0x31,0x2E,0x44,0x61,0x69,0x6C,0x79,0x20
000105 6574
000106 7473
000107 3100
000108 2e32      	.DB  0x74,0x65,0x73,0x74,0x0,0x31,0x32,0x2E
000109 6552
00010a 6168
00010b 2062
00010c 6574      	.DB  0x52,0x65,0x68,0x61,0x62,0x20,0x74,0x65
00010d 7473
00010e 3100
00010f 2e33
000110 4554      	.DB  0x73,0x74,0x0,0x31,0x33,0x2E,0x54,0x45
000111 5453
000112 3100
000113 2e34
000114 4554      	.DB  0x53,0x54,0x0,0x31,0x34,0x2E,0x54,0x45
000115 5453
000116 0032
000117 3531
000118 542e      	.DB  0x53,0x54,0x32,0x0,0x31,0x35,0x2E,0x54
000119 5345
00011a 3354
00011b 2a00
00011c 422a      	.DB  0x45,0x53,0x54,0x33,0x0,0x2A,0x2A,0x42
00011d 4552
00011e 4b41
00011f 2a21
000120 002a      	.DB  0x52,0x45,0x41,0x4B,0x21,0x2A,0x2A,0x0
                 _0x2020003:
000121 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000122 0004      	.DW  0x04
000123 06d9      	.DW  _flex_min
000124 009e      	.DW  _0x3*2
                 
000125 0004      	.DW  0x04
000126 06dd      	.DW  _pressure_max
000127 00a2      	.DW  _0x4*2
                 
000128 0004      	.DW  0x04
000129 06f6      	.DW  _kp
00012a 00a6      	.DW  _0x5*2
                 
00012b 0004      	.DW  0x04
00012c 06fa      	.DW  _ki
00012d 00aa      	.DW  _0x6*2
                 
00012e 0004      	.DW  0x04
00012f 06fe      	.DW  _kd
000130 00ae      	.DW  _0x7*2
                 
000131 0002      	.DW  0x02
000132 0726      	.DW  __base_y_G101
000133 0242      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
000134 0000      	.DW  0
                 
                 __RESET:
000135 94f8      	CLI
000136 27ee      	CLR  R30
000137 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000138 e0f1      	LDI  R31,1
000139 bff5      	OUT  MCUCR,R31
00013a bfe5      	OUT  MCUCR,R30
00013b 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
00013d e1f8      	LDI  R31,0x18
00013e bdf1      	OUT  WDTCR,R31
00013f bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000140 e08d      	LDI  R24,(14-2)+1
000141 e0a2      	LDI  R26,2
000142 27bb      	CLR  R27
                 __CLEAR_REG:
000143 93ed      	ST   X+,R30
000144 958a      	DEC  R24
000145 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000146 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000147 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000148 e0a0      	LDI  R26,LOW(__SRAM_START)
000149 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00014a 93ed      	ST   X+,R30
00014b 9701      	SBIW R24,1
00014c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00014d e4e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00014e e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00014f 9185      	LPM  R24,Z+
000150 9195      	LPM  R25,Z+
000151 9700      	SBIW R24,0
000152 f061      	BREQ __GLOBAL_INI_END
000153 91a5      	LPM  R26,Z+
000154 91b5      	LPM  R27,Z+
000155 9005      	LPM  R0,Z+
000156 9015      	LPM  R1,Z+
000157 01bf      	MOVW R22,R30
000158 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000159 9005      	LPM  R0,Z+
00015a 920d      	ST   X+,R0
00015b 9701      	SBIW R24,1
00015c f7e1      	BRNE __GLOBAL_INI_LOOP
00015d 01fb      	MOVW R30,R22
00015e cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
00015f bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000160 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000161 bfed      	OUT  SPL,R30
000162 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000163 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000164 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000165 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000166 940c 0b82 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*****************************************************
                 ;This program was produced by the JJH, KYY and Johnadan
                 ;CodeWizardAVR V2.05.0 Professional
                 ;Automatic Program Generator
                 ;ï¿½ Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 ;
                 ;Project : 2018 ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ç° 12ï¿½ï¿½ - S.P.A glove
                 ;Version : 2.2.0
                 ;Date    : 2018-05-03
                 ;Author  : JJH
                 ;Company : Chungnam National University
                 ;Comments: Holy Fucking Shit...
                 ;
                 ;
                 ;Chip type               : Atmega128
                 ;AVR Core Clock frequency: 16.000000 MHz
                 ;*****************************************************/
                 ;
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;/* Alphanumeric LCD Module functions */
                 ;#include <lcd.h>
                 ;#asm
                  .equ __lcd_port = 0x12 //PORTD 8
                 ; 0000 001C #endasm
                 ;
                 ;/* About ADC */
                 ;#define ADC_VREF_TYPE 0x60
                 ;#define NUM_SAMP  50  //MUST be Under 255
                 ;
                 ;/*About Switch*/
                 ;#define Left_switch_on    (!PINE.1)
                 ;#define Middle_switch_on  (!PINE.2)
                 ;#define Right_switch_on   (!PINE.3)
                 ;#define Left_switch_off   (PINE.1)
                 ;#define Middle_switch_off (PINE.2)
                 ;#define Right_switch_off  (PINE.3)
                 ;
                 ;/*About order*/
                 ;// Actual signal
                 ;#define Up_thumb          (!PINE.5)
                 ;#define Down_thumb        (!PINA.1)
                 ;#define Up_index          (!PINA.2)
                 ;#define Down_index        (!PINA.3)
                 ;#define Up_middle         (!PINA.4)
                 ;#define Down_middle       (!PINA.5)
                 ;#define Up_rest           (!PINA.6)
                 ;#define Down_rest         (!PINA.7)
                 ;// No signal
                 ;#define NO_SIGNAL_tu      (PINE.5)
                 ;#define NO_SIGNAL_td      (PINA.1)
                 ;#define NO_SIGNAL_iu      (PINA.2)
                 ;#define NO_SIGNAL_id      (PINA.3)
                 ;#define NO_SIGNAL_mu      (PINA.4)
                 ;#define NO_SIGNAL_md      (PINA.5)
                 ;#define NO_SIGNAL_ru      (PINA.6)
                 ;#define NO_SIGNAL_rd      (PINA.7)
                 ;
                 ;/*About u saturation*/
                 ;#define UPPER   3500 //90%  duty
                 ;#define LOWER   800 //10% duty
                 ;
                 ;/*About RUN*/
                 ;#define NORMAL_SPEED  500 //Only relates to reaction speed...
                 ;#define ANG_th 1
                 ;#define MAX_ANG 60
                 ;//Timer on/off
                 ;#define INITIATE  TIMSK = 0x14, ETIMSK = 0x14   //TIM1_COMPA interrupt on, TIM1_OVF interrupt on (Inlet Valve control)
                 ;                                                //TIM3_COMPA interrupt on, TIM3_OVF interrupt on (Outlet Valve control)
                 ;
                 ;#define TERMINATE TIMSK = 0x00, ETIMSK = 0x00   //TIM1_COMPA interrupt off, TIM1_OVF interrupt off (Inlet Valve control)
                 ;                                                //TIM3_COMPA interrupt off, TIM3_OVF interrupt off (Outlet Valve control)
                 ;/* Rehabilitation */
                 ;//Flextion or Extension
                 ;#define FLEX   1
                 ;#define EXTD   0
                 ;//Finger type
                 ;#define THUMB  0
                 ;#define INDEX  1
                 ;#define MIDDLE 2
                 ;#define REST   3
                 ;// Flextion/Extension speed
                 ;// Top : 4999¿¡ ´ëÇÑ duty ratio = (duty)*(4999/100) => (duty)*50
                 ;#define REHAB_SPEED 3000
                 ;
                 ;//*****************************************************************************************************************
                 ;// ****** Declare your global variables here  ******
                 ;unsigned char sam_num = 0; // counting variable for ADC interrupt
                 ;int i,j,k;
                 ;//*****************************************************************************************************************
                 ;// LCD
                 ;unsigned char lcd_data[40];
                 ;//*****************************************************************************************************************
                 ;// ADC
                 ;//unsigned char adc_data[4][100] = {0};
                 ;unsigned char mux = 0;
                 ;//unsigned char NUM_SAMP = 50;
                 ;unsigned char d_flag = 0;
                 ;
                 ;// * Pressure
                 ;unsigned char pressure_data[4][NUM_SAMP] = {0};
                 ;unsigned int  pressure_sum[4] = {0};
                 ;unsigned char pressure_mean[4] = {0};
                 ;
                 ;// * Flex
                 ;unsigned char flex_data[4][NUM_SAMP] = {0};
                 ;unsigned int  flex_sum[4] = {0};
                 ;unsigned char flex_mean[4] = {0};
                 ;
                 ;//tuning
                 ;//unsigned char flex_max[4] = {90, 130, 105, 135};
                 ;//unsigned char flex_min[4] = {65, 100, 79, 107};
                 ;unsigned char flex_max[4] = {0, 0, 0, 0};
                 ;unsigned char flex_min[4] = {255, 255, 255, 255};
                 
                 	.DSEG
                 ;unsigned char pressure_max[4] = {80, 82, 75, 65};
                 ;unsigned char pressure_min[4] = {0};
                 ;
                 ;// Moving
                 ;unsigned char E_flag[4]={0}; //EXTENSION : 1
                 ;unsigned char F_flag[4]={0}; //FLEXTION : 1
                 ;unsigned char Global_Sequence=0;
                 ;int arrived[4] = {0};    // ¾ÆÁ÷ ¸ñÇ¥°ª¿¡ µµ´ÞÇÏÁö ¸øÇÑ °æ¿ì(¸ñÇ¥°ªº¸´Ù Å­) : -1
                 ;                    // ¸ñÇ¥°ª¿¡µµ´ÞÇÑ °æ¿ì : 0
                 ;                    // ¾ÆÁ÷ ¸ñÇ¥°ª¿¡ µµ´ÞÇÏÁö ¸øÇÑ °æ¿ì(¸ñÇ¥°ªº¸´Ù ÀÛÀ½) : 1
                 ;
                 ;// PID
                 ;float kp=70.0000;
                 ;float ki=30.0000;
                 ;float kd=20.0000;
                 ;double error_old[4]={0};
                 ;double error_sum[4]={0};
                 ;unsigned char ang_old[4]={0};//Initial angle : 0 degrees
                 ;unsigned const char delta_ang=2;//5 degrees per each sequence(EXPERIMENT NEED!)
                 ;unsigned const char Ts=60; //Control sequence term in [ms]
                 ;//*****************************************************************************************************************
                 ;// Timer 1 Controls INLET!!
                 ;// Timer1 output compare A interrupt service routine
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
                 ; 0000 008E {
                 
                 	.CSEG
                 _timer1_compa_isr:
000168 940e 0f7d 	CALL SUBOPT_0x0
                 ; 0000 008F     if(arrived[Global_Sequence] == 1)   PORTC |= 0x01<<Global_Sequence;//INLET Valve on
00016a 30e1      	CPI  R30,LOW(0x1)
00016b e0a0      	LDI  R26,HIGH(0x1)
00016c 07fa      	CPC  R31,R26
00016d f441      	BRNE _0x8
00016e b215      	IN   R1,21
00016f 91e0 06ed 	LDS  R30,_Global_Sequence
000171 e0a1      	LDI  R26,LOW(1)
000172 940e 155f 	CALL __LSLB12
000174 29e1      	OR   R30,R1
000175 c002      	RJMP _0x135
                 ; 0000 0090     else                                PORTC &= 0x00;
                 _0x8:
000176 b3e5      	IN   R30,0x15
000177 70e0      	ANDI R30,LOW(0x0)
                 _0x135:
000178 bbe5      	OUT  0x15,R30
                 ; 0000 0091 }
000179 c05a      	RJMP _0x13C
                 ;// Timer1 overflow A interrupt service routine
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 0094 {
                 _timer1_ovf_isr:
00017a c012      	RJMP _0x13D
                 ; 0000 0095     PORTC=0x00;//INLET Valve off
                 ; 0000 0096 }
                 ;// Timer 3 Controls OUTLET!!
                 ;// Timer3 comparematch A interrupt service routine
                 ;interrupt [TIM3_COMPA] void timer3_compa_isr(void)
                 ; 0000 009A {
                 _timer3_compa_isr:
00017b 940e 0f7d 	CALL SUBOPT_0x0
                 ; 0000 009B     if(arrived[Global_Sequence] == -1)  PORTC |= 0x10<<Global_Sequence;//OUTLET Valve on
00017d 3fef      	CPI  R30,LOW(0xFFFF)
00017e efaf      	LDI  R26,HIGH(0xFFFF)
00017f 07fa      	CPC  R31,R26
000180 f441      	BRNE _0xA
000181 b215      	IN   R1,21
000182 91e0 06ed 	LDS  R30,_Global_Sequence
000184 e1a0      	LDI  R26,LOW(16)
000185 940e 155f 	CALL __LSLB12
000187 29e1      	OR   R30,R1
000188 c002      	RJMP _0x136
                 ; 0000 009C     else                                PORTC &= 0x00;
                 _0xA:
000189 b3e5      	IN   R30,0x15
00018a 70e0      	ANDI R30,LOW(0x0)
                 _0x136:
00018b bbe5      	OUT  0x15,R30
                 ; 0000 009D }
00018c c047      	RJMP _0x13C
                 ;// Timer1 output compare A interrupt service routine
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void)
                 ; 0000 00A0 {
                 _timer3_ovf_isr:
                 _0x13D:
00018d 93ea      	ST   -Y,R30
                 ; 0000 00A1     PORTC=0x00;//OUTLET Valve off
00018e e0e0      	LDI  R30,LOW(0)
00018f bbe5      	OUT  0x15,R30
                 ; 0000 00A2 }
000190 91e9      	LD   R30,Y+
000191 9518      	RETI
                 ;// ********************************* ADC interrupt service routine ************************************************
                 ;interrupt [ADC_INT] void adc_isr(void)
                 ; 0000 00A5 {
                 _adc_isr:
000192 920a      	ST   -Y,R0
000193 921a      	ST   -Y,R1
000194 93aa      	ST   -Y,R26
000195 93ba      	ST   -Y,R27
000196 93ea      	ST   -Y,R30
000197 93fa      	ST   -Y,R31
000198 b7ef      	IN   R30,SREG
000199 93ea      	ST   -Y,R30
                 ; 0000 00A6     // Read the AD conversion result
                 ; 0000 00A7     //for (h = 0; h<=6; h++);
                 ; 0000 00A8     if(mux>4)           flex_data[mux-4][sam_num] = ADCH;   // 4, 5, 6, 7
00019a 91a0 052b 	LDS  R26,_mux
00019c 30a5      	CPI  R26,LOW(0x5)
00019d f058      	BRLO _0xC
00019e 91e0 052b 	LDS  R30,_mux
0001a0 e0f0      	LDI  R31,0
0001a1 9734      	SBIW R30,4
0001a2 e3a2      	LDI  R26,LOW(50)
0001a3 e0b0      	LDI  R27,HIGH(50)
0001a4 940e 1585 	CALL __MULW12U
0001a6 5fef      	SUBI R30,LOW(-_flex_data)
0001a7 4ff9      	SBCI R31,HIGH(-_flex_data)
0001a8 c007      	RJMP _0x137
                 ; 0000 00A9     else                pressure_data[mux][sam_num] = ADCH;     // 0, 1, 2, 3
                 _0xC:
0001a9 91e0 052b 	LDS  R30,_mux
0001ab e3a2      	LDI  R26,LOW(50)
0001ac 9fea      	MUL  R30,R26
0001ad 01f0      	MOVW R30,R0
0001ae 5de3      	SUBI R30,LOW(-_pressure_data)
0001af 4ffa      	SBCI R31,HIGH(-_pressure_data)
                 _0x137:
0001b0 01df      	MOVW R26,R30
0001b1 91e0 0500 	LDS  R30,_sam_num
0001b3 e0f0      	LDI  R31,0
0001b4 0fae      	ADD  R26,R30
0001b5 1fbf      	ADC  R27,R31
0001b6 b1e5      	IN   R30,0x5
0001b7 93ec      	ST   X,R30
                 ; 0000 00AA     //ADC sampling
                 ; 0000 00AB     if(sam_num == NUM_SAMP)
0001b8 91a0 0500 	LDS  R26,_sam_num
0001ba 33a2      	CPI  R26,LOW(0x32)
0001bb f459      	BRNE _0xE
                 ; 0000 00AC     {
                 ; 0000 00AD         mux++;
0001bc 91e0 052b 	LDS  R30,_mux
0001be 5fef      	SUBI R30,-LOW(1)
0001bf 93e0 052b 	STS  _mux,R30
                 ; 0000 00AE         sam_num=0;
0001c1 e0e0      	LDI  R30,LOW(0)
0001c2 93e0 0500 	STS  _sam_num,R30
                 ; 0000 00AF         d_flag=1;
0001c4 e0e1      	LDI  R30,LOW(1)
0001c5 93e0 052c 	STS  _d_flag,R30
                 ; 0000 00B0     }
                 ; 0000 00B1 
                 ; 0000 00B2     mux &= 0x07;  //mux : 0~7
                 _0xE:
0001c7 91e0 052b 	LDS  R30,_mux
0001c9 70e7      	ANDI R30,LOW(0x7)
0001ca 93e0 052b 	STS  _mux,R30
                 ; 0000 00B3     ADMUX = mux | 0x60;
0001cc 66e0      	ORI  R30,LOW(0x60)
0001cd b9e7      	OUT  0x7,R30
                 ; 0000 00B4     ADCSRA |= 0x40;
0001ce 9a36      	SBI  0x6,6
                 ; 0000 00B5     sam_num++;
0001cf 91e0 0500 	LDS  R30,_sam_num
0001d1 5fef      	SUBI R30,-LOW(1)
0001d2 93e0 0500 	STS  _sam_num,R30
                 ; 0000 00B6 }
                 _0x13C:
0001d4 91e9      	LD   R30,Y+
0001d5 bfef      	OUT  SREG,R30
0001d6 91f9      	LD   R31,Y+
0001d7 91e9      	LD   R30,Y+
0001d8 91b9      	LD   R27,Y+
0001d9 91a9      	LD   R26,Y+
0001da 9019      	LD   R1,Y+
0001db 9009      	LD   R0,Y+
0001dc 9518      	RETI
                 ;
                 ;// ******************************** About Pressure Sensor *******************************************************
                 ;void mean_pressure(unsigned char sequence, unsigned char tunned)
                 ; 0000 00BA {
                 _mean_pressure:
                 ; 0000 00BB     unsigned char num = 0; // counting variable for function
                 ; 0000 00BC     while(!d_flag);
0001dd 931a      	ST   -Y,R17
                 ;	sequence -> Y+2
                 ;	tunned -> Y+1
                 ;	num -> R17
0001de e010      	LDI  R17,0
                 _0xF:
0001df 91e0 052c 	LDS  R30,_d_flag
0001e1 30e0      	CPI  R30,0
0001e2 f3e1      	BREQ _0xF
                 ; 0000 00BD     for(num = 0; num < NUM_SAMP; num++)
0001e3 e010      	LDI  R17,LOW(0)
                 _0x13:
0001e4 3312      	CPI  R17,50
0001e5 f450      	BRSH _0x14
                 ; 0000 00BE         pressure_sum[sequence] += pressure_data[sequence][num];
0001e6 940e 0f91 	CALL SUBOPT_0x1
0001e8 940e 0f98 	CALL SUBOPT_0x2
0001ea 5de3      	SUBI R30,LOW(-_pressure_data)
0001eb 4ffa      	SBCI R31,HIGH(-_pressure_data)
0001ec 940e 0fa2 	CALL SUBOPT_0x3
0001ee 5f1f      	SUBI R17,-1
0001ef cff4      	RJMP _0x13
                 _0x14:
                 ; 0000 00BF pressure_mean[sequence] = pressure_sum[sequence]/50  ;
0001f0 940e 0fae 	CALL SUBOPT_0x4
0001f2 01bf      	MOVW R22,R30
0001f3 940e 0f91 	CALL SUBOPT_0x1
0001f5 940e 0fb3 	CALL SUBOPT_0x5
                 ; 0000 00C0     pressure_sum[sequence] = 0;
0001f7 940e 0f91 	CALL SUBOPT_0x1
0001f9 940e 0fbf 	CALL SUBOPT_0x6
                 ; 0000 00C1     d_flag=0;
                 ; 0000 00C2 
                 ; 0000 00C3     if(pressure_mean[sequence]>190)  pressure_mean[sequence]=0;
0001fb 940e 0fae 	CALL SUBOPT_0x4
0001fd 81a0      	LD   R26,Z
0001fe 3baf      	CPI  R26,LOW(0xBF)
0001ff f020      	BRLO _0x15
000200 940e 0fae 	CALL SUBOPT_0x4
000202 e0a0      	LDI  R26,LOW(0)
000203 83a0      	STD  Z+0,R26
                 ; 0000 00C4 
                 ; 0000 00C5     if(tunned)
                 _0x15:
000204 81e9      	LDD  R30,Y+1
000205 30e0      	CPI  R30,0
000206 f0f1      	BREQ _0x16
                 ; 0000 00C6     {
                 ; 0000 00C7       if(pressure_mean[sequence]>pressure_max[sequence])  pressure_mean[sequence]=pressure_max[sequence];
000207 940e 0fc8 	CALL SUBOPT_0x7
000209 940e 0fcb 	CALL SUBOPT_0x8
00020b 52e3      	SUBI R30,LOW(-_pressure_max)
00020c 4ff9      	SBCI R31,HIGH(-_pressure_max)
00020d 81e0      	LD   R30,Z
00020e 17ea      	CP   R30,R26
00020f f430      	BRSH _0x17
000210 940e 0fd1 	CALL SUBOPT_0x9
000212 52e3      	SUBI R30,LOW(-_pressure_max)
000213 4ff9      	SBCI R31,HIGH(-_pressure_max)
000214 81e0      	LD   R30,Z
000215 93ec      	ST   X,R30
                 ; 0000 00C8       if(pressure_mean[sequence]<pressure_min[sequence])  pressure_mean[sequence]=pressure_min[sequence];
                 _0x17:
000216 940e 0fc8 	CALL SUBOPT_0x7
000218 940e 0fcb 	CALL SUBOPT_0x8
00021a 51ef      	SUBI R30,LOW(-_pressure_min)
00021b 4ff9      	SBCI R31,HIGH(-_pressure_min)
00021c 81e0      	LD   R30,Z
00021d 17ae      	CP   R26,R30
00021e f430      	BRSH _0x18
00021f 940e 0fd1 	CALL SUBOPT_0x9
000221 51ef      	SUBI R30,LOW(-_pressure_min)
000222 4ff9      	SBCI R31,HIGH(-_pressure_min)
000223 81e0      	LD   R30,Z
000224 93ec      	ST   X,R30
                 ; 0000 00C9     }
                 _0x18:
                 ; 0000 00CA }
                 _0x16:
000225 c0b1      	RJMP _0x2080008
                 ;//Pressure test
                 ;void pressure_test(void)
                 ; 0000 00CD {
                 _pressure_test:
                 ; 0000 00CE     unsigned char num = 0;
                 ; 0000 00CF     delay_ms(50);
000226 940e 0fd6 	CALL SUBOPT_0xA
                 ;	num -> R17
                 ; 0000 00D0 
                 ; 0000 00D1     while(Middle_switch_off)
                 _0x19:
000228 9b0a      	SBIS 0x1,2
000229 c01d      	RJMP _0x1B
                 ; 0000 00D2     {
                 ; 0000 00D3         lcd_clear();
00022a 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 00D4         lcd_gotoxy(0, 0);
                 ; 0000 00D5         lcd_putsf("Testing");
00022c 940e 0fe5 	CALL SUBOPT_0xC
                 ; 0000 00D6 
                 ; 0000 00D7         if(Left_switch_on)  num--;
00022e 9b09      	SBIS 0x1,1
00022f 5011      	SUBI R17,1
                 ; 0000 00D8         if(Right_switch_on) num++;
000230 9b0b      	SBIS 0x1,3
000231 5f1f      	SUBI R17,-1
                 ; 0000 00D9         if(num>3) num=3;
000232 3014      	CPI  R17,4
000233 f008      	BRLO _0x1E
000234 e013      	LDI  R17,LOW(3)
                 ; 0000 00DA         mean_pressure((unsigned char)num,0);
                 _0x1E:
000235 931a      	ST   -Y,R17
000236 e0e0      	LDI  R30,LOW(0)
000237 93ea      	ST   -Y,R30
000238 dfa4      	RCALL _mean_pressure
                 ; 0000 00DB 
                 ; 0000 00DC         lcd_gotoxy(0, 1);
000239 940e 0feb 	CALL SUBOPT_0xD
                 ; 0000 00DD         sprintf(lcd_data, "%d", num);
00023b 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 00DE         lcd_puts(lcd_data);
                 ; 0000 00DF         lcd_gotoxy(4, 1);
00023d 940e 100a 	CALL SUBOPT_0xF
                 ; 0000 00E0         sprintf(lcd_data, "%d", pressure_mean[num]);
00023f 50e3      	SUBI R30,LOW(-_pressure_mean)
000240 4ffa      	SBCI R31,HIGH(-_pressure_mean)
000241 81e0      	LD   R30,Z
000242 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 00E1         lcd_puts(lcd_data);
                 ; 0000 00E2 
                 ; 0000 00E3         delay_ms(200);
000244 940e 101b 	CALL SUBOPT_0x10
                 ; 0000 00E4     }
000246 cfe1      	RJMP _0x19
                 _0x1B:
                 ; 0000 00E5 }
000247 c2b9      	RJMP _0x2080007
                 ;
                 ;// Pressure tuning
                 ;void pressure_tuning(void)
                 ; 0000 00E9 {
                 _pressure_tuning:
                 ; 0000 00EA     unsigned char num = 0;
                 ; 0000 00EB     delay_ms(50);
000248 940e 0fd6 	CALL SUBOPT_0xA
                 ;	num -> R17
                 ; 0000 00EC 
                 ; 0000 00ED     while(Middle_switch_off)
                 _0x1F:
00024a 9b0a      	SBIS 0x1,2
00024b c049      	RJMP _0x21
                 ; 0000 00EE     {
                 ; 0000 00EF         lcd_clear();
00024c 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 00F0         lcd_gotoxy(0, 0);
                 ; 0000 00F1         lcd_putsf("Tunning");
00024e 940e 1021 	CALL SUBOPT_0x11
                 ; 0000 00F2 
                 ; 0000 00F3         if(Left_switch_on)  num--;
000250 9b09      	SBIS 0x1,1
000251 5011      	SUBI R17,1
                 ; 0000 00F4         if(Right_switch_on) num++;
000252 9b0b      	SBIS 0x1,3
000253 5f1f      	SUBI R17,-1
                 ; 0000 00F5         if(num>3) num=3;
000254 3014      	CPI  R17,4
000255 f008      	BRLO _0x24
000256 e013      	LDI  R17,LOW(3)
                 ; 0000 00F6 
                 ; 0000 00F7         mean_pressure((unsigned char)num,0);
                 _0x24:
000257 931a      	ST   -Y,R17
000258 e0e0      	LDI  R30,LOW(0)
000259 93ea      	ST   -Y,R30
00025a df82      	RCALL _mean_pressure
                 ; 0000 00F8 
                 ; 0000 00F9         if(pressure_mean[num]>pressure_max[num])  pressure_max[num]=pressure_mean[num];
00025b 940e 1027 	CALL SUBOPT_0x12
00025d 940e 0fcb 	CALL SUBOPT_0x8
00025f 52e3      	SUBI R30,LOW(-_pressure_max)
000260 4ff9      	SBCI R31,HIGH(-_pressure_max)
000261 81e0      	LD   R30,Z
000262 17ea      	CP   R30,R26
000263 f450      	BRSH _0x25
000264 940e 102a 	CALL SUBOPT_0x13
000266 52a3      	SUBI R26,LOW(-_pressure_max)
000267 4fb9      	SBCI R27,HIGH(-_pressure_max)
000268 940e 1027 	CALL SUBOPT_0x12
00026a 50e3      	SUBI R30,LOW(-_pressure_mean)
00026b 4ffa      	SBCI R31,HIGH(-_pressure_mean)
00026c 81e0      	LD   R30,Z
00026d 93ec      	ST   X,R30
                 ; 0000 00FA         if(pressure_mean[num]<pressure_min[num])  pressure_min[num]=pressure_mean[num];
                 _0x25:
00026e 940e 1027 	CALL SUBOPT_0x12
000270 940e 0fcb 	CALL SUBOPT_0x8
000272 51ef      	SUBI R30,LOW(-_pressure_min)
000273 4ff9      	SBCI R31,HIGH(-_pressure_min)
000274 81e0      	LD   R30,Z
000275 17ae      	CP   R26,R30
000276 f450      	BRSH _0x26
000277 940e 102a 	CALL SUBOPT_0x13
000279 51af      	SUBI R26,LOW(-_pressure_min)
00027a 4fb9      	SBCI R27,HIGH(-_pressure_min)
00027b 940e 1027 	CALL SUBOPT_0x12
00027d 50e3      	SUBI R30,LOW(-_pressure_mean)
00027e 4ffa      	SBCI R31,HIGH(-_pressure_mean)
00027f 81e0      	LD   R30,Z
000280 93ec      	ST   X,R30
                 ; 0000 00FB 
                 ; 0000 00FC         lcd_gotoxy(7, 0);
                 _0x26:
000281 940e 102d 	CALL SUBOPT_0x14
                 ; 0000 00FD         sprintf(lcd_data, "%d", num);
                 ; 0000 00FE         lcd_puts(lcd_data);
                 ; 0000 00FF         lcd_gotoxy(0, 1);
000283 940e 0feb 	CALL SUBOPT_0xD
                 ; 0000 0100         sprintf(lcd_data, "%d", pressure_min[num]);
000285 e0f0      	LDI  R31,0
000286 51ef      	SUBI R30,LOW(-_pressure_min)
000287 4ff9      	SBCI R31,HIGH(-_pressure_min)
000288 81e0      	LD   R30,Z
000289 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 0101         lcd_puts(lcd_data);
                 ; 0000 0102         lcd_gotoxy(4, 1);
00028b 940e 100a 	CALL SUBOPT_0xF
                 ; 0000 0103         sprintf(lcd_data, "%d", pressure_max[num]);
00028d 52e3      	SUBI R30,LOW(-_pressure_max)
00028e 4ff9      	SBCI R31,HIGH(-_pressure_max)
00028f 81e0      	LD   R30,Z
000290 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 0104         lcd_puts(lcd_data);
                 ; 0000 0105         delay_ms(100);
000292 940e 103d 	CALL SUBOPT_0x15
                 ; 0000 0106     }
000294 cfb5      	RJMP _0x1F
                 _0x21:
                 ; 0000 0107 }
000295 c26b      	RJMP _0x2080007
                 ;
                 ;// ******************************** About Flex Sensor *******************************************************
                 ;void mean_flex(unsigned char sequence, unsigned char tunned)
                 ; 0000 010B {
                 _mean_flex:
                 ; 0000 010C     unsigned char num = 0; // counting variable for function
                 ; 0000 010D     while(!d_flag);
000296 931a      	ST   -Y,R17
                 ;	sequence -> Y+2
                 ;	tunned -> Y+1
                 ;	num -> R17
000297 e010      	LDI  R17,0
                 _0x27:
000298 91e0 052c 	LDS  R30,_d_flag
00029a 30e0      	CPI  R30,0
00029b f3e1      	BREQ _0x27
                 ; 0000 010E     for(num = 0; num < NUM_SAMP; num++)
00029c e010      	LDI  R17,LOW(0)
                 _0x2B:
00029d 3312      	CPI  R17,50
00029e f450      	BRSH _0x2C
                 ; 0000 010F         flex_sum[sequence] += flex_data[sequence][num];
00029f 940e 1043 	CALL SUBOPT_0x16
0002a1 940e 0f98 	CALL SUBOPT_0x2
0002a3 5fef      	SUBI R30,LOW(-_flex_data)
0002a4 4ff9      	SBCI R31,HIGH(-_flex_data)
0002a5 940e 0fa2 	CALL SUBOPT_0x3
0002a7 5f1f      	SUBI R17,-1
0002a8 cff4      	RJMP _0x2B
                 _0x2C:
                 ; 0000 0110 flex_mean[sequence] = flex_sum[sequence]/50  ;
0002a9 940e 0fc8 	CALL SUBOPT_0x7
0002ab 52ef      	SUBI R30,LOW(-_flex_mean)
0002ac 4ff9      	SBCI R31,HIGH(-_flex_mean)
0002ad 01bf      	MOVW R22,R30
0002ae 940e 1043 	CALL SUBOPT_0x16
0002b0 940e 0fb3 	CALL SUBOPT_0x5
                 ; 0000 0111     flex_sum[sequence] = 0;
0002b2 940e 1043 	CALL SUBOPT_0x16
0002b4 940e 0fbf 	CALL SUBOPT_0x6
                 ; 0000 0112     d_flag=0;
                 ; 0000 0113     if(tunned)
0002b6 81e9      	LDD  R30,Y+1
0002b7 30e0      	CPI  R30,0
0002b8 f0f1      	BREQ _0x2D
                 ; 0000 0114     {
                 ; 0000 0115       if(flex_mean[sequence]>flex_max[sequence])  flex_mean[sequence]=flex_max[sequence];
0002b9 940e 0fc8 	CALL SUBOPT_0x7
0002bb 940e 104a 	CALL SUBOPT_0x17
0002bd 52eb      	SUBI R30,LOW(-_flex_max)
0002be 4ff9      	SBCI R31,HIGH(-_flex_max)
0002bf 81e0      	LD   R30,Z
0002c0 17ea      	CP   R30,R26
0002c1 f430      	BRSH _0x2E
0002c2 940e 1050 	CALL SUBOPT_0x18
0002c4 52eb      	SUBI R30,LOW(-_flex_max)
0002c5 4ff9      	SBCI R31,HIGH(-_flex_max)
0002c6 81e0      	LD   R30,Z
0002c7 93ec      	ST   X,R30
                 ; 0000 0116       if(flex_mean[sequence]<flex_min[sequence])  flex_mean[sequence]=flex_min[sequence];
                 _0x2E:
0002c8 940e 0fc8 	CALL SUBOPT_0x7
0002ca 940e 104a 	CALL SUBOPT_0x17
0002cc 52e7      	SUBI R30,LOW(-_flex_min)
0002cd 4ff9      	SBCI R31,HIGH(-_flex_min)
0002ce 81e0      	LD   R30,Z
0002cf 17ae      	CP   R26,R30
0002d0 f430      	BRSH _0x2F
0002d1 940e 1050 	CALL SUBOPT_0x18
0002d3 52e7      	SUBI R30,LOW(-_flex_min)
0002d4 4ff9      	SBCI R31,HIGH(-_flex_min)
0002d5 81e0      	LD   R30,Z
0002d6 93ec      	ST   X,R30
                 ; 0000 0117     }
                 _0x2F:
                 ; 0000 0118 }
                 _0x2D:
                 _0x2080008:
0002d7 8118      	LDD  R17,Y+0
0002d8 9623      	ADIW R28,3
0002d9 9508      	RET
                 ;//Pressure test
                 ;void flex_test(void)
                 ; 0000 011B {
                 _flex_test:
                 ; 0000 011C     unsigned char num = 0;
                 ; 0000 011D     delay_ms(50);
0002da 940e 0fd6 	CALL SUBOPT_0xA
                 ;	num -> R17
                 ; 0000 011E 
                 ; 0000 011F     while(Middle_switch_off)
                 _0x30:
0002dc 9b0a      	SBIS 0x1,2
0002dd c01d      	RJMP _0x32
                 ; 0000 0120     {
                 ; 0000 0121         lcd_clear();
0002de 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 0122         lcd_gotoxy(0, 0);
                 ; 0000 0123         lcd_putsf("Testing");
0002e0 940e 0fe5 	CALL SUBOPT_0xC
                 ; 0000 0124 
                 ; 0000 0125         if(Left_switch_on)  num--;
0002e2 9b09      	SBIS 0x1,1
0002e3 5011      	SUBI R17,1
                 ; 0000 0126         if(Right_switch_on) num++;
0002e4 9b0b      	SBIS 0x1,3
0002e5 5f1f      	SUBI R17,-1
                 ; 0000 0127         if(num>3) num=3;
0002e6 3014      	CPI  R17,4
0002e7 f008      	BRLO _0x35
0002e8 e013      	LDI  R17,LOW(3)
                 ; 0000 0128         mean_flex((unsigned char)num,0);
                 _0x35:
0002e9 931a      	ST   -Y,R17
0002ea e0e0      	LDI  R30,LOW(0)
0002eb 93ea      	ST   -Y,R30
0002ec dfa9      	RCALL _mean_flex
                 ; 0000 0129 
                 ; 0000 012A         lcd_gotoxy(0, 1);
0002ed 940e 0feb 	CALL SUBOPT_0xD
                 ; 0000 012B         sprintf(lcd_data, "%d", num);
0002ef 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 012C         lcd_puts(lcd_data);
                 ; 0000 012D         lcd_gotoxy(4, 1);
0002f1 940e 100a 	CALL SUBOPT_0xF
                 ; 0000 012E         sprintf(lcd_data, "%d", flex_mean[num]);
0002f3 52ef      	SUBI R30,LOW(-_flex_mean)
0002f4 4ff9      	SBCI R31,HIGH(-_flex_mean)
0002f5 81e0      	LD   R30,Z
0002f6 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 012F         lcd_puts(lcd_data);
                 ; 0000 0130 
                 ; 0000 0131         delay_ms(200);
0002f8 940e 101b 	CALL SUBOPT_0x10
                 ; 0000 0132     }
0002fa cfe1      	RJMP _0x30
                 _0x32:
                 ; 0000 0133 }
0002fb c205      	RJMP _0x2080007
                 ;
                 ;// flex tuning
                 ;void flex_tuning(void)
                 ; 0000 0137 {
                 _flex_tuning:
                 ; 0000 0138     unsigned char num = 0;
                 ; 0000 0139     delay_ms(50);
0002fc 940e 0fd6 	CALL SUBOPT_0xA
                 ;	num -> R17
                 ; 0000 013A 
                 ; 0000 013B     while(Middle_switch_off)
                 _0x36:
0002fe 9b0a      	SBIS 0x1,2
0002ff c045      	RJMP _0x38
                 ; 0000 013C     {
                 ; 0000 013D         lcd_clear();
000300 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 013E         lcd_gotoxy(0, 0);
                 ; 0000 013F         lcd_putsf("Tunning");
000302 940e 1021 	CALL SUBOPT_0x11
                 ; 0000 0140 
                 ; 0000 0141         if(Left_switch_on)  num--;
000304 9b09      	SBIS 0x1,1
000305 5011      	SUBI R17,1
                 ; 0000 0142         if(Right_switch_on) num++;
000306 9b0b      	SBIS 0x1,3
000307 5f1f      	SUBI R17,-1
                 ; 0000 0143         if(num>3) num=3;
000308 3014      	CPI  R17,4
000309 f008      	BRLO _0x3B
00030a e013      	LDI  R17,LOW(3)
                 ; 0000 0144         mean_flex((unsigned char)num,0);
                 _0x3B:
00030b 931a      	ST   -Y,R17
00030c e0e0      	LDI  R30,LOW(0)
00030d 940e 1055 	CALL SUBOPT_0x19
                 ; 0000 0145 
                 ; 0000 0146         if(flex_mean[num]>flex_max[num])  flex_max[num]=flex_mean[num];
00030f 940e 104a 	CALL SUBOPT_0x17
000311 52eb      	SUBI R30,LOW(-_flex_max)
000312 4ff9      	SBCI R31,HIGH(-_flex_max)
000313 81e0      	LD   R30,Z
000314 17ea      	CP   R30,R26
000315 f450      	BRSH _0x3C
000316 940e 102a 	CALL SUBOPT_0x13
000318 52ab      	SUBI R26,LOW(-_flex_max)
000319 4fb9      	SBCI R27,HIGH(-_flex_max)
00031a 940e 1027 	CALL SUBOPT_0x12
00031c 52ef      	SUBI R30,LOW(-_flex_mean)
00031d 4ff9      	SBCI R31,HIGH(-_flex_mean)
00031e 81e0      	LD   R30,Z
00031f 93ec      	ST   X,R30
                 ; 0000 0147         if(flex_mean[num]<flex_min[num])  flex_min[num]=flex_mean[num];
                 _0x3C:
000320 940e 1027 	CALL SUBOPT_0x12
000322 940e 104a 	CALL SUBOPT_0x17
000324 52e7      	SUBI R30,LOW(-_flex_min)
000325 4ff9      	SBCI R31,HIGH(-_flex_min)
000326 81e0      	LD   R30,Z
000327 17ae      	CP   R26,R30
000328 f450      	BRSH _0x3D
000329 940e 102a 	CALL SUBOPT_0x13
00032b 52a7      	SUBI R26,LOW(-_flex_min)
00032c 4fb9      	SBCI R27,HIGH(-_flex_min)
00032d 940e 1027 	CALL SUBOPT_0x12
00032f 52ef      	SUBI R30,LOW(-_flex_mean)
000330 4ff9      	SBCI R31,HIGH(-_flex_mean)
000331 81e0      	LD   R30,Z
000332 93ec      	ST   X,R30
                 ; 0000 0148 
                 ; 0000 0149         lcd_gotoxy(7, 0);
                 _0x3D:
000333 940e 102d 	CALL SUBOPT_0x14
                 ; 0000 014A         sprintf(lcd_data, "%d", num);
                 ; 0000 014B         lcd_puts(lcd_data);
                 ; 0000 014C         lcd_gotoxy(0, 1);
000335 940e 0feb 	CALL SUBOPT_0xD
                 ; 0000 014D         sprintf(lcd_data, "%d", flex_min[num]);
000337 940e 1059 	CALL SUBOPT_0x1A
000339 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 014E         lcd_puts(lcd_data);
                 ; 0000 014F         lcd_gotoxy(4, 1);
00033b 940e 100a 	CALL SUBOPT_0xF
                 ; 0000 0150         sprintf(lcd_data, "%d", flex_max[num]);
00033d 52eb      	SUBI R30,LOW(-_flex_max)
00033e 4ff9      	SBCI R31,HIGH(-_flex_max)
00033f 81e0      	LD   R30,Z
000340 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 0151         lcd_puts(lcd_data);
                 ; 0000 0152 
                 ; 0000 0153         delay_ms(100);
000342 940e 103d 	CALL SUBOPT_0x15
                 ; 0000 0154     }
000344 cfb9      	RJMP _0x36
                 _0x38:
                 ; 0000 0155 }
000345 c1bb      	RJMP _0x2080007
                 ;
                 ;// ******************************** About PWM control *******************************************************
                 ;void check_pwm(void)
                 ; 0000 0159 {
                 _check_pwm:
                 ; 0000 015A     char temp = 50;//PWM interrupt control, 50% duty
                 ; 0000 015B     delay_ms(50);
000346 931a      	ST   -Y,R17
                 ;	temp -> R17
000347 e312      	LDI  R17,50
000348 940e 105e 	CALL SUBOPT_0x1B
                 ; 0000 015C 
                 ; 0000 015D     INITIATE; //Timer interrupts on
00034a 940e 1064 	CALL SUBOPT_0x1C
                 ; 0000 015E     while(Middle_switch_off)
                 _0x3E:
00034c 9b0a      	SBIS 0x1,2
00034d c01e      	RJMP _0x40
                 ; 0000 015F     {
                 ; 0000 0160         if(Left_switch_on)  temp--;
00034e 9b09      	SBIS 0x1,1
00034f 5011      	SUBI R17,1
                 ; 0000 0161         if(Right_switch_on)  temp++;
000350 9b0b      	SBIS 0x1,3
000351 5f1f      	SUBI R17,-1
                 ; 0000 0162         if(temp<1) temp=1;
000352 3011      	CPI  R17,1
000353 f408      	BRSH _0x43
000354 e011      	LDI  R17,LOW(1)
                 ; 0000 0163         if(temp>99)  temp=99;
                 _0x43:
000355 3614      	CPI  R17,100
000356 f008      	BRLO _0x44
000357 e613      	LDI  R17,LOW(99)
                 ; 0000 0164         // TEST by LED berfore Valve delivered...
                 ; 0000 0165         OCR1AH = temp*50>>8;
                 _0x44:
000358 e3e2      	LDI  R30,LOW(50)
000359 9fe1      	MUL  R30,R17
00035a 01f0      	MOVW R30,R0
00035b 940e 1575 	CALL __ASRW8
00035d bdeb      	OUT  0x2B,R30
                 ; 0000 0166         OCR1AL = temp*50;   //duty ratioÅ¬¼ö·Ï ¼¼±â°¡ ¾àÇØÁü(Compare Match Interrupt¿¡¼­ ON)
00035e e3a2      	LDI  R26,LOW(50)
00035f 021a      	MULS R17,R26
000360 01f0      	MOVW R30,R0
000361 bdea      	OUT  0x2A,R30
                 ; 0000 0167 
                 ; 0000 0168         lcd_clear();
000362 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 0169         lcd_gotoxy(0, 0);
                 ; 0000 016A         lcd_putsf("Duty");
000364 940e 1069 	CALL SUBOPT_0x1D
                 ; 0000 016B         lcd_gotoxy(0, 1);
                 ; 0000 016C         sprintf(lcd_data, "%d %", temp);
000366 2fe1      	MOV  R30,R17
000367 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 016D         lcd_puts(lcd_data);
                 ; 0000 016E 
                 ; 0000 016F         delay_ms(100);
000369 940e 103d 	CALL SUBOPT_0x15
                 ; 0000 0170     }
00036b cfe0      	RJMP _0x3E
                 _0x40:
                 ; 0000 0171     TERMINATE; //Timer interrupts off
00036c 940e 107e 	CALL SUBOPT_0x1E
                 ; 0000 0172     PORTC=0x00;
00036e bbe5      	OUT  0x15,R30
                 ; 0000 0173     OCR1AH = 0;
00036f 940e 1083 	CALL SUBOPT_0x1F
                 ; 0000 0174     OCR1AL = 0;//0% duty
                 ; 0000 0175 }
000371 c18f      	RJMP _0x2080007
                 ;
                 ;// ******************************** About PWM control *******************************************************
                 ;void PUMP_test()
                 ; 0000 0179 {
                 _PUMP_test:
                 ; 0000 017A     int temp = 50;//50% duty
                 ; 0000 017B     delay_ms(50);
000372 931a      	ST   -Y,R17
000373 930a      	ST   -Y,R16
                 ;	temp -> R16,R17
                +
000374 e302     +LDI R16 , LOW ( 50 )
000375 e010     +LDI R17 , HIGH ( 50 )
                 	__GETWRN 16,17,50
000376 940e 105e 	CALL SUBOPT_0x1B
                 ; 0000 017C 
                 ; 0000 017D     while(Middle_switch_off)
                 _0x45:
000378 9b0a      	SBIS 0x1,2
000379 c025      	RJMP _0x47
                 ; 0000 017E     {
                 ; 0000 017F         if(Left_switch_on)  temp--;
00037a 9909      	SBIC 0x1,1
00037b c002      	RJMP _0x48
                +
00037c 5001     +SUBI R16 , LOW ( 1 )
00037d 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 0180         if(Right_switch_on)  temp++;
                 _0x48:
00037e 990b      	SBIC 0x1,3
00037f c002      	RJMP _0x49
                +
000380 5f0f     +SUBI R16 , LOW ( - 1 )
000381 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0181         if(temp<1) temp=1;
                 _0x49:
                +
000382 3001     +CPI R16 , LOW ( 1 )
000383 e0e0     +LDI R30 , HIGH ( 1 )
000384 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1
000385 f414      	BRGE _0x4A
                +
000386 e001     +LDI R16 , LOW ( 1 )
000387 e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
                 ; 0000 0182         if(temp>99)  temp=99;
                 _0x4A:
                +
000388 3604     +CPI R16 , LOW ( 100 )
000389 e0e0     +LDI R30 , HIGH ( 100 )
00038a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,100
00038b f014      	BRLT _0x4B
                +
00038c e603     +LDI R16 , LOW ( 99 )
00038d e010     +LDI R17 , HIGH ( 99 )
                 	__GETWRN 16,17,99
                 ; 0000 0183         // TEST by LED berfore Valve delivered...
                 ; 0000 0184         OCR1BH = temp*50 >>8;
                 _0x4B:
00038e 01f8      	MOVW R30,R16
00038f e3a2      	LDI  R26,LOW(50)
000390 e0b0      	LDI  R27,HIGH(50)
000391 940e 158d 	CALL __MULW12
000393 940e 1087 	CALL SUBOPT_0x20
                 ; 0000 0185         OCR1BL = temp*50;
                 ; 0000 0186 
                 ; 0000 0187         lcd_clear();
000395 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 0188         lcd_gotoxy(0, 0);
                 ; 0000 0189         lcd_putsf("Duty");
000397 940e 1069 	CALL SUBOPT_0x1D
                 ; 0000 018A         lcd_gotoxy(0, 1);
                 ; 0000 018B         sprintf(lcd_data, "%d %", temp);
000399 01f8      	MOVW R30,R16
00039a 940e 108f 	CALL SUBOPT_0x21
                 ; 0000 018C         lcd_puts(lcd_data);
                 ; 0000 018D 
                 ; 0000 018E         delay_ms(100);
00039c 940e 103d 	CALL SUBOPT_0x15
                 ; 0000 018F     }
00039e cfd9      	RJMP _0x45
                 _0x47:
                 ; 0000 0190     OCR1BH=0x00;
00039f 940e 109d 	CALL SUBOPT_0x22
                 ; 0000 0191     OCR1BL=0x00; //0% duty
                 ; 0000 0192     PORTB=0x00;
0003a1 bbe8      	OUT  0x18,R30
                 ; 0000 0193 }
0003a2 c271      	RJMP _0x2080006
                 ;
                 ;// ******************************** About Order *******************************************************
                 ;void order(unsigned char * sequence)
                 ; 0000 0197 {
                 _order:
                 ; 0000 0198     unsigned char seq=*sequence;
                 ; 0000 0199     unsigned char Order=0x00;
                 ; 0000 019A 
                 ; 0000 019B     if(Up_thumb)    Order|=0x01;
0003a3 931a      	ST   -Y,R17
0003a4 930a      	ST   -Y,R16
                 ;	*sequence -> Y+2
                 ;	seq -> R17
                 ;	Order -> R16
0003a5 81aa      	LDD  R26,Y+2
0003a6 81bb      	LDD  R27,Y+2+1
0003a7 91ec      	LD   R30,X
0003a8 2f1e      	MOV  R17,R30
0003a9 e000      	LDI  R16,0
0003aa 9b0d      	SBIS 0x1,5
0003ab 6001      	ORI  R16,LOW(1)
                 ; 0000 019C     if(Up_index)    Order|=0x02;
0003ac 9bca      	SBIS 0x19,2
0003ad 6002      	ORI  R16,LOW(2)
                 ; 0000 019D     if(Up_middle)   Order|=0x04;
0003ae 9bcc      	SBIS 0x19,4
0003af 6004      	ORI  R16,LOW(4)
                 ; 0000 019E     if(Up_rest)     Order|=0x08;
0003b0 9bce      	SBIS 0x19,6
0003b1 6008      	ORI  R16,LOW(8)
                 ; 0000 019F     if(Down_thumb)  Order|=0x10;
0003b2 9bc9      	SBIS 0x19,1
0003b3 6100      	ORI  R16,LOW(16)
                 ; 0000 01A0     if(Down_index)  Order|=0x20;
0003b4 9bcb      	SBIS 0x19,3
0003b5 6200      	ORI  R16,LOW(32)
                 ; 0000 01A1     if(Down_middle) Order|=0x40;
0003b6 9bcd      	SBIS 0x19,5
0003b7 6400      	ORI  R16,LOW(64)
                 ; 0000 01A2     if(Down_rest)   Order|=0x80;
0003b8 9bcf      	SBIS 0x19,7
0003b9 6800      	ORI  R16,LOW(128)
                 ; 0000 01A3     if(NO_SIGNAL_tu&&NO_SIGNAL_td) Order&=0xEE;
0003ba 9b0d      	SBIS 0x1,5
0003bb c002      	RJMP _0x55
0003bc 99c9      	SBIC 0x19,1
0003bd c001      	RJMP _0x56
                 _0x55:
0003be c001      	RJMP _0x54
                 _0x56:
0003bf 7e0e      	ANDI R16,LOW(238)
                 ; 0000 01A4     if(NO_SIGNAL_iu&&NO_SIGNAL_id) Order&=0xDD;
                 _0x54:
0003c0 9bca      	SBIS 0x19,2
0003c1 c002      	RJMP _0x58
0003c2 99cb      	SBIC 0x19,3
0003c3 c001      	RJMP _0x59
                 _0x58:
0003c4 c001      	RJMP _0x57
                 _0x59:
0003c5 7d0d      	ANDI R16,LOW(221)
                 ; 0000 01A5     if(NO_SIGNAL_mu&&NO_SIGNAL_md) Order&=0xBB;
                 _0x57:
0003c6 9bcc      	SBIS 0x19,4
0003c7 c002      	RJMP _0x5B
0003c8 99cd      	SBIC 0x19,5
0003c9 c001      	RJMP _0x5C
                 _0x5B:
0003ca c001      	RJMP _0x5A
                 _0x5C:
0003cb 7b0b      	ANDI R16,LOW(187)
                 ; 0000 01A6     if(NO_SIGNAL_ru&&NO_SIGNAL_rd) Order&=0x77;
                 _0x5A:
0003cc 9bce      	SBIS 0x19,6
0003cd c002      	RJMP _0x5E
0003ce 99cf      	SBIC 0x19,7
0003cf c001      	RJMP _0x5F
                 _0x5E:
0003d0 c001      	RJMP _0x5D
                 _0x5F:
0003d1 7707      	ANDI R16,LOW(119)
                 ; 0000 01A7     /*
                 ; 0000 01A8     lcd_clear();
                 ; 0000 01A9     lcd_gotoxy(0, 0);
                 ; 0000 01AA     sprintf(lcd_data, "%2x", Order);
                 ; 0000 01AB     lcd_puts(lcd_data);
                 ; 0000 01AC     */
                 ; 0000 01AD 
                 ; 0000 01AE     if(Order&(0x01<<seq))
                 _0x5D:
0003d2 940e 10a1 	CALL SUBOPT_0x23
0003d4 f051      	BREQ _0x60
                 ; 0000 01AF     {
                 ; 0000 01B0         E_flag[seq]=1;
0003d5 940e 1027 	CALL SUBOPT_0x12
0003d7 51eb      	SUBI R30,LOW(-_E_flag)
0003d8 4ff9      	SBCI R31,HIGH(-_E_flag)
0003d9 e0a1      	LDI  R26,LOW(1)
0003da 83a0      	STD  Z+0,R26
                 ; 0000 01B1         F_flag[seq]=0;
0003db 940e 1027 	CALL SUBOPT_0x12
0003dd 940e 10ac 	CALL SUBOPT_0x24
                 ; 0000 01B2     }
                 ; 0000 01B3     if(Order&(0x10<<seq))
                 _0x60:
0003df 940e 10b1 	CALL SUBOPT_0x25
0003e1 f041      	BREQ _0x61
                 ; 0000 01B4     {
                 ; 0000 01B5         E_flag[seq]=0;
0003e2 940e 1027 	CALL SUBOPT_0x12
0003e4 940e 10bc 	CALL SUBOPT_0x26
                 ; 0000 01B6         F_flag[seq]=1;
0003e6 51e7      	SUBI R30,LOW(-_F_flag)
0003e7 4ff9      	SBCI R31,HIGH(-_F_flag)
0003e8 e0a1      	LDI  R26,LOW(1)
0003e9 83a0      	STD  Z+0,R26
                 ; 0000 01B7     }
                 ; 0000 01B8     if(!(Order&(0x01<<seq))&&!(Order&(0x10<<seq)))
                 _0x61:
0003ea 940e 10a1 	CALL SUBOPT_0x23
0003ec f419      	BRNE _0x63
0003ed 940e 10b1 	CALL SUBOPT_0x25
0003ef f009      	BREQ _0x64
                 _0x63:
0003f0 c006      	RJMP _0x62
                 _0x64:
                 ; 0000 01B9     {
                 ; 0000 01BA         E_flag[seq]=0;
0003f1 940e 1027 	CALL SUBOPT_0x12
0003f3 940e 10bc 	CALL SUBOPT_0x26
                 ; 0000 01BB         F_flag[seq]=0;
0003f5 940e 10ac 	CALL SUBOPT_0x24
                 ; 0000 01BC     }
                 ; 0000 01BD 
                 ; 0000 01BE     // sequence 0 : Thumb   PC0, PC4 on, PORTC = 0x11
                 ; 0000 01BF     // sequence 1 : Index   PC1, PC5 on, PORTC = 0x22
                 ; 0000 01C0     // sequence 2 : Middle  PC2, PC6 on, PORTC = 0x44
                 ; 0000 01C1     // sequence 3 : Rest    PC3, PC7 on, PORTC = 0x88
                 ; 0000 01C2     //PORTC = 0x11<<sequence;
                 ; 0000 01C3     seq++;
                 _0x62:
0003f7 5f1f      	SUBI R17,-1
                 ; 0000 01C4     if(seq>3) seq=0;
0003f8 3014      	CPI  R17,4
0003f9 f008      	BRLO _0x65
0003fa e010      	LDI  R17,LOW(0)
                 ; 0000 01C5     *sequence=seq;
                 _0x65:
0003fb 81aa      	LDD  R26,Y+2
0003fc 81bb      	LDD  R27,Y+2+1
0003fd 931c      	ST   X,R17
                 ; 0000 01C6 }
0003fe 8119      	LDD  R17,Y+1
0003ff 8108      	LDD  R16,Y+0
000400 9624      	ADIW R28,4
000401 9508      	RET
                 ;
                 ;void disp(unsigned char x, unsigned char seq)
                 ; 0000 01C9 {
                 _disp:
                 ; 0000 01CA     lcd_gotoxy(x, 1);
                 ;	x -> Y+1
                 ;	seq -> Y+0
000402 81e9      	LDD  R30,Y+1
000403 940e 10c1 	CALL SUBOPT_0x27
                 ; 0000 01CB     if(E_flag[seq])                     lcd_putsf("E");
000405 940e 10c6 	CALL SUBOPT_0x28
000407 51eb      	SUBI R30,LOW(-_E_flag)
000408 4ff9      	SBCI R31,HIGH(-_E_flag)
000409 81e0      	LD   R30,Z
00040a 30e0      	CPI  R30,0
00040b f011      	BREQ _0x66
00040c 940e 10c9 	CALL SUBOPT_0x29
                 ; 0000 01CC     if(F_flag[seq])                     lcd_putsf("F");
                 _0x66:
00040e 940e 10c6 	CALL SUBOPT_0x28
000410 51e7      	SUBI R30,LOW(-_F_flag)
000411 4ff9      	SBCI R31,HIGH(-_F_flag)
000412 81e0      	LD   R30,Z
000413 30e0      	CPI  R30,0
000414 f011      	BREQ _0x67
000415 940e 10cf 	CALL SUBOPT_0x2A
                 ; 0000 01CD     if((E_flag[seq]==0)&&(F_flag[seq]==0))  lcd_putsf("-");
                 _0x67:
000417 940e 10c6 	CALL SUBOPT_0x28
000419 940e 10d5 	CALL SUBOPT_0x2B
00041b f419      	BRNE _0x69
00041c 940e 10db 	CALL SUBOPT_0x2C
00041e f009      	BREQ _0x6A
                 _0x69:
00041f c002      	RJMP _0x68
                 _0x6A:
000420 940e 10e1 	CALL SUBOPT_0x2D
                 ; 0000 01CE }
                 _0x68:
000422 9622      	ADIW R28,2
000423 9508      	RET
                 ;
                 ;void test_order()
                 ; 0000 01D1 {
                 _test_order:
                 ; 0000 01D2     unsigned char sequence=0;
                 ; 0000 01D3 
                 ; 0000 01D4     delay_ms(50);
000424 940e 0fd6 	CALL SUBOPT_0xA
                 ;	sequence -> R17
                 ; 0000 01D5     while(Middle_switch_off)
                 _0x6B:
000426 9b0a      	SBIS 0x1,2
000427 c034      	RJMP _0x6D
                 ; 0000 01D6     {
                 ; 0000 01D7         order(&sequence);
000428 b7ed      	IN   R30,SPL
000429 b7fe      	IN   R31,SPH
00042a 93fa      	ST   -Y,R31
00042b 93ea      	ST   -Y,R30
00042c 931f      	PUSH R17
00042d df75      	RCALL _order
00042e 911f      	POP  R17
                 ; 0000 01D8 
                 ; 0000 01D9         lcd_clear();
00042f 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 01DA 
                 ; 0000 01DB         lcd_gotoxy(0, 0);lcd_putsf("T");
                +
000431 e2e5     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
000432 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
                 	__POINTW1FN _0x0,35
000433 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 01DC         lcd_gotoxy(2, 0);lcd_putsf("I");
000435 940e 10eb 	CALL SUBOPT_0x2F
000437 940e 0eb2 	CALL _lcd_gotoxy
                +
000439 e2e7     +LDI R30 , LOW ( 2 * _0x0 + ( 37 ) )
00043a e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 37 ) )
                 	__POINTW1FN _0x0,37
00043b 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 01DD         lcd_gotoxy(4, 0);lcd_putsf("M");
00043d 940e 10f0 	CALL SUBOPT_0x30
                +
00043f e2e9     +LDI R30 , LOW ( 2 * _0x0 + ( 39 ) )
000440 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 39 ) )
                 	__POINTW1FN _0x0,39
000441 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 01DE         lcd_gotoxy(6, 0);lcd_putsf("R");
000443 940e 10f6 	CALL SUBOPT_0x31
                +
000445 e2eb     +LDI R30 , LOW ( 2 * _0x0 + ( 41 ) )
000446 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 41 ) )
                 	__POINTW1FN _0x0,41
000447 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 01DF 
                 ; 0000 01E0         disp(0,0);
000449 940e 10fc 	CALL SUBOPT_0x32
00044b dfb6      	RCALL _disp
                 ; 0000 01E1         disp(2,1);
00044c 940e 1100 	CALL SUBOPT_0x33
00044e dfb3      	RCALL _disp
                 ; 0000 01E2         disp(4,2);
00044f e0e4      	LDI  R30,LOW(4)
000450 93ea      	ST   -Y,R30
000451 e0e2      	LDI  R30,LOW(2)
000452 93ea      	ST   -Y,R30
000453 dfae      	RCALL _disp
                 ; 0000 01E3         disp(6,3);
000454 e0e6      	LDI  R30,LOW(6)
000455 93ea      	ST   -Y,R30
000456 e0e3      	LDI  R30,LOW(3)
000457 93ea      	ST   -Y,R30
000458 dfa9      	RCALL _disp
                 ; 0000 01E4 
                 ; 0000 01E5 
                 ; 0000 01E6         /*
                 ; 0000 01E7         lcd_gotoxy(0, 1);
                 ; 0000 01E8         sprintf(lcd_data, "%d", sequence);
                 ; 0000 01E9         lcd_puts(lcd_data);
                 ; 0000 01EA         */
                 ; 0000 01EB         delay_ms(100);//Sequence term
000459 940e 103d 	CALL SUBOPT_0x15
                 ; 0000 01EC     }
00045b cfca      	RJMP _0x6B
                 _0x6D:
                 ; 0000 01ED }
00045c c0a4      	RJMP _0x2080007
                 ;
                 ;void valve_order()
                 ; 0000 01F0 {
                 _valve_order:
                 ; 0000 01F1     unsigned char seq=0;
                 ; 0000 01F2 
                 ; 0000 01F3     delay_ms(50);
00045d 940e 0fd6 	CALL SUBOPT_0xA
                 ;	seq -> R17
                 ; 0000 01F4     INITIATE;
00045f 940e 1064 	CALL SUBOPT_0x1C
                 ; 0000 01F5     while(Middle_switch_off)
                 _0x6E:
000461 9b0a      	SBIS 0x1,2
000462 c086      	RJMP _0x70
                 ; 0000 01F6     {
                 ; 0000 01F7         order(&seq);
000463 b7ed      	IN   R30,SPL
000464 b7fe      	IN   R31,SPH
000465 93fa      	ST   -Y,R31
000466 93ea      	ST   -Y,R30
000467 931f      	PUSH R17
000468 df3a      	RCALL _order
000469 911f      	POP  R17
                 ; 0000 01F8         //Global_Sequence=seq;
                 ; 0000 01F9 
                 ; 0000 01FA         lcd_clear();
00046a 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 01FB         lcd_gotoxy(0, 0);lcd_putsf("Valve!");
                +
00046c e2ed     +LDI R30 , LOW ( 2 * _0x0 + ( 43 ) )
00046d e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 43 ) )
                 	__POINTW1FN _0x0,43
00046e 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 01FC 
                 ; 0000 01FD         if(Left_switch_on)  Global_Sequence--;
000470 9909      	SBIC 0x1,1
000471 c005      	RJMP _0x71
000472 91e0 06ed 	LDS  R30,_Global_Sequence
000474 50e1      	SUBI R30,LOW(1)
000475 93e0 06ed 	STS  _Global_Sequence,R30
                 ; 0000 01FE         if(Right_switch_on)  Global_Sequence++;
                 _0x71:
000477 990b      	SBIC 0x1,3
000478 c005      	RJMP _0x72
000479 91e0 06ed 	LDS  R30,_Global_Sequence
00047b 5fef      	SUBI R30,-LOW(1)
00047c 93e0 06ed 	STS  _Global_Sequence,R30
                 ; 0000 01FF         if(Global_Sequence>3)   Global_Sequence=0;
                 _0x72:
00047e 91a0 06ed 	LDS  R26,_Global_Sequence
000480 30a4      	CPI  R26,LOW(0x4)
000481 f018      	BRLO _0x73
000482 e0e0      	LDI  R30,LOW(0)
000483 93e0 06ed 	STS  _Global_Sequence,R30
                 ; 0000 0200         if(Global_Sequence==0 && Right_switch_on)   Global_Sequence=3;
                 _0x73:
000485 91a0 06ed 	LDS  R26,_Global_Sequence
000487 30a0      	CPI  R26,LOW(0x0)
000488 f411      	BRNE _0x75
000489 9b0b      	SBIS 0x1,3
00048a c001      	RJMP _0x76
                 _0x75:
00048b c003      	RJMP _0x74
                 _0x76:
00048c e0e3      	LDI  R30,LOW(3)
00048d 93e0 06ed 	STS  _Global_Sequence,R30
                 ; 0000 0201 
                 ; 0000 0202         lcd_gotoxy(7, 0);
                 _0x74:
00048f e0e7      	LDI  R30,LOW(7)
000490 940e 1105 	CALL SUBOPT_0x34
                 ; 0000 0203         sprintf(lcd_data, "%d", Global_Sequence);
000492 91e0 06ed 	LDS  R30,_Global_Sequence
000494 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 0204         lcd_puts(lcd_data);
                 ; 0000 0205 
                 ; 0000 0206         disp(0,Global_Sequence);
000496 940e 1113 	CALL SUBOPT_0x35
                 ; 0000 0207 
                 ; 0000 0208         lcd_gotoxy(5, 1);
                 ; 0000 0209         sprintf(lcd_data, "%d", E_flag[Global_Sequence]);
000498 940e 111c 	CALL SUBOPT_0x36
00049a 51eb      	SUBI R30,LOW(-_E_flag)
00049b 4ff9      	SBCI R31,HIGH(-_E_flag)
00049c 81e0      	LD   R30,Z
00049d 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 020A         lcd_puts(lcd_data);
                 ; 0000 020B         lcd_gotoxy(7, 1);
00049f e0e7      	LDI  R30,LOW(7)
0004a0 940e 10c1 	CALL SUBOPT_0x27
                 ; 0000 020C         sprintf(lcd_data, "%d", F_flag[Global_Sequence]);
0004a2 940e 111c 	CALL SUBOPT_0x36
0004a4 51e7      	SUBI R30,LOW(-_F_flag)
0004a5 4ff9      	SBCI R31,HIGH(-_F_flag)
0004a6 81e0      	LD   R30,Z
0004a7 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 020D         lcd_puts(lcd_data);
                 ; 0000 020E 
                 ; 0000 020F 
                 ; 0000 0210         if((E_flag[Global_Sequence]==0)&&(F_flag[Global_Sequence]==0))
0004a9 940e 1128 	CALL SUBOPT_0x37
0004ab 940e 10d5 	CALL SUBOPT_0x2B
0004ad f419      	BRNE _0x78
0004ae 940e 10db 	CALL SUBOPT_0x2C
0004b0 f009      	BREQ _0x79
                 _0x78:
0004b1 c00a      	RJMP _0x77
                 _0x79:
                 ; 0000 0211         {
                 ; 0000 0212             OCR1AH=500>>8;
0004b2 e0e1      	LDI  R30,LOW(1)
0004b3 bdeb      	OUT  0x2B,R30
                 ; 0000 0213             OCR1AL=500;
0004b4 efe4      	LDI  R30,LOW(244)
0004b5 bdea      	OUT  0x2A,R30
                 ; 0000 0214             OCR3AH=500>>8;
0004b6 e0e1      	LDI  R30,LOW(1)
0004b7 93e0 0087 	STS  135,R30
                 ; 0000 0215             OCR3AL=500;
0004b9 efe4      	LDI  R30,LOW(244)
0004ba 93e0 0086 	STS  134,R30
                 ; 0000 0216         }
                 ; 0000 0217         if((E_flag[Global_Sequence]==1)&&(F_flag[Global_Sequence]==0))
                 _0x77:
0004bc 940e 1128 	CALL SUBOPT_0x37
0004be 010f      	MOVW R0,R30
0004bf 51eb      	SUBI R30,LOW(-_E_flag)
0004c0 4ff9      	SBCI R31,HIGH(-_E_flag)
0004c1 81a0      	LD   R26,Z
0004c2 30a1      	CPI  R26,LOW(0x1)
0004c3 f419      	BRNE _0x7B
0004c4 940e 10db 	CALL SUBOPT_0x2C
0004c6 f009      	BREQ _0x7C
                 _0x7B:
0004c7 c008      	RJMP _0x7A
                 _0x7C:
                 ; 0000 0218         {
                 ; 0000 0219             OCR1AH=800>>8;
0004c8 940e 112c 	CALL SUBOPT_0x38
                 ; 0000 021A             OCR1AL=800;
                 ; 0000 021B             OCR3AH=200>>8;
0004ca e0e0      	LDI  R30,LOW(0)
0004cb 93e0 0087 	STS  135,R30
                 ; 0000 021C             OCR3AL=200;
0004cd ece8      	LDI  R30,LOW(200)
0004ce 93e0 0086 	STS  134,R30
                 ; 0000 021D         }
                 ; 0000 021E         if((E_flag[Global_Sequence]==0)&&(F_flag[Global_Sequence]==1))
                 _0x7A:
0004d0 940e 1128 	CALL SUBOPT_0x37
0004d2 940e 10d5 	CALL SUBOPT_0x2B
0004d4 f431      	BRNE _0x7E
0004d5 01f0      	MOVW R30,R0
0004d6 51e7      	SUBI R30,LOW(-_F_flag)
0004d7 4ff9      	SBCI R31,HIGH(-_F_flag)
0004d8 81a0      	LD   R26,Z
0004d9 30a1      	CPI  R26,LOW(0x1)
0004da f009      	BREQ _0x7F
                 _0x7E:
0004db c00a      	RJMP _0x7D
                 _0x7F:
                 ; 0000 021F         {
                 ; 0000 0220             OCR1AH=200>>8;
0004dc e0e0      	LDI  R30,LOW(0)
0004dd bdeb      	OUT  0x2B,R30
                 ; 0000 0221             OCR1AL=200;
0004de ece8      	LDI  R30,LOW(200)
0004df bdea      	OUT  0x2A,R30
                 ; 0000 0222             OCR3AH=800>>8;
0004e0 e0e3      	LDI  R30,LOW(3)
0004e1 93e0 0087 	STS  135,R30
                 ; 0000 0223             OCR3AL=800;
0004e3 e2e0      	LDI  R30,LOW(32)
0004e4 93e0 0086 	STS  134,R30
                 ; 0000 0224         }
                 ; 0000 0225         delay_ms(100);
                 _0x7D:
0004e6 940e 103d 	CALL SUBOPT_0x15
                 ; 0000 0226     }
0004e8 cf78      	RJMP _0x6E
                 _0x70:
                 ; 0000 0227     TERMINATE;
0004e9 940e 107e 	CALL SUBOPT_0x1E
                 ; 0000 0228     Global_Sequence=0;
0004eb 93e0 06ed 	STS  _Global_Sequence,R30
                 ; 0000 0229     OCR1A =0x00;
0004ed e0e0      	LDI  R30,LOW(0)
0004ee e0f0      	LDI  R31,HIGH(0)
0004ef bdfb      	OUT  0x2A+1,R31
0004f0 bdea      	OUT  0x2A,R30
                 ; 0000 022A     OCR3BH=0x00;
0004f1 940e 1131 	CALL SUBOPT_0x39
                 ; 0000 022B     OCR3BL=0x00;
                 ; 0000 022C     for(i=0;i<4;i++)
0004f3 940e 1137 	CALL SUBOPT_0x3A
                 _0x81:
0004f5 940e 113c 	CALL SUBOPT_0x3B
0004f7 f43c      	BRGE _0x82
                 ; 0000 022D     {
                 ; 0000 022E         E_flag[i]=0;
0004f8 940e 1142 	CALL SUBOPT_0x3C
0004fa 940e 1147 	CALL SUBOPT_0x3D
                 ; 0000 022F         F_flag[i]=0;
                 ; 0000 0230     }
0004fc 940e 114d 	CALL SUBOPT_0x3E
0004fe cff6      	RJMP _0x81
                 _0x82:
                 ; 0000 0231     PORTB=0x00;
0004ff 940e 1155 	CALL SUBOPT_0x3F
                 ; 0000 0232     PORTC=0x00;
                 ; 0000 0233 }
                 _0x2080007:
000501 9119      	LD   R17,Y+
000502 9508      	RET
                 ;
                 ;void pump_valve()
                 ; 0000 0236 {
                 _pump_valve:
                 ; 0000 0237     unsigned char seq=0;
                 ; 0000 0238     unsigned char temp=50;
                 ; 0000 0239 
                 ; 0000 023A     delay_ms(50);
000503 931a      	ST   -Y,R17
000504 930a      	ST   -Y,R16
                 ;	seq -> R17
                 ;	temp -> R16
000505 e010      	LDI  R17,0
000506 e302      	LDI  R16,50
000507 940e 105e 	CALL SUBOPT_0x1B
                 ; 0000 023B     INITIATE;
000509 940e 1064 	CALL SUBOPT_0x1C
                 ; 0000 023C     while(Middle_switch_off)
                 _0x83:
00050b 9b0a      	SBIS 0x1,2
00050c c079      	RJMP _0x85
                 ; 0000 023D     {
                 ; 0000 023E         order(&seq);
00050d b7ed      	IN   R30,SPL
00050e b7fe      	IN   R31,SPH
00050f 93fa      	ST   -Y,R31
000510 93ea      	ST   -Y,R30
000511 931f      	PUSH R17
000512 de90      	RCALL _order
000513 911f      	POP  R17
                 ; 0000 023F         Global_Sequence=seq;
000514 9310 06ed 	STS  _Global_Sequence,R17
                 ; 0000 0240 
                 ; 0000 0241         lcd_clear();
000516 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 0242         lcd_gotoxy(0, 0);lcd_putsf("Duty : ");
                +
000518 e3e4     +LDI R30 , LOW ( 2 * _0x0 + ( 50 ) )
000519 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 50 ) )
                 	__POINTW1FN _0x0,50
00051a 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 0243         lcd_gotoxy(6, 0);sprintf(lcd_data, "%2d %", temp);
00051c 940e 10f6 	CALL SUBOPT_0x31
00051e 940e 1159 	CALL SUBOPT_0x40
000520 940e 115e 	CALL SUBOPT_0x41
                 ; 0000 0244         lcd_puts(lcd_data);
                 ; 0000 0245 
                 ; 0000 0246         disp(0,Global_Sequence);
000522 940e 1113 	CALL SUBOPT_0x35
                 ; 0000 0247 
                 ; 0000 0248         lcd_gotoxy(5, 1);
                 ; 0000 0249         sprintf(lcd_data, "%d", E_flag[Global_Sequence]);
000524 940e 111c 	CALL SUBOPT_0x36
000526 51eb      	SUBI R30,LOW(-_E_flag)
000527 4ff9      	SBCI R31,HIGH(-_E_flag)
000528 81e0      	LD   R30,Z
000529 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 024A         lcd_puts(lcd_data);
                 ; 0000 024B         lcd_gotoxy(7, 1);
00052b e0e7      	LDI  R30,LOW(7)
00052c 940e 10c1 	CALL SUBOPT_0x27
                 ; 0000 024C         sprintf(lcd_data, "%d", F_flag[Global_Sequence]);
00052e 940e 111c 	CALL SUBOPT_0x36
000530 51e7      	SUBI R30,LOW(-_F_flag)
000531 4ff9      	SBCI R31,HIGH(-_F_flag)
000532 81e0      	LD   R30,Z
000533 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 024D         lcd_puts(lcd_data);
                 ; 0000 024E 
                 ; 0000 024F 
                 ; 0000 0250         if((E_flag[Global_Sequence]==0)&&(F_flag[Global_Sequence]==0))
000535 940e 1128 	CALL SUBOPT_0x37
000537 940e 10d5 	CALL SUBOPT_0x2B
000539 f419      	BRNE _0x87
00053a 940e 10db 	CALL SUBOPT_0x2C
00053c f009      	BREQ _0x88
                 _0x87:
00053d c00a      	RJMP _0x86
                 _0x88:
                 ; 0000 0251         {
                 ; 0000 0252             OCR1AH=50*50>>8;
00053e e0e9      	LDI  R30,LOW(9)
00053f bdeb      	OUT  0x2B,R30
                 ; 0000 0253             OCR1AL=50*50;
000540 ece4      	LDI  R30,LOW(196)
000541 bdea      	OUT  0x2A,R30
                 ; 0000 0254             OCR3AH=50*50>>8;
000542 e0e9      	LDI  R30,LOW(9)
000543 93e0 0087 	STS  135,R30
                 ; 0000 0255             OCR3AL=50*50;
000545 ece4      	LDI  R30,LOW(196)
000546 93e0 0086 	STS  134,R30
                 ; 0000 0256         }
                 ; 0000 0257         if((E_flag[Global_Sequence]==1)&&(F_flag[Global_Sequence]==0))
                 _0x86:
000548 940e 1128 	CALL SUBOPT_0x37
00054a 010f      	MOVW R0,R30
00054b 51eb      	SUBI R30,LOW(-_E_flag)
00054c 4ff9      	SBCI R31,HIGH(-_E_flag)
00054d 81a0      	LD   R26,Z
00054e 30a1      	CPI  R26,LOW(0x1)
00054f f419      	BRNE _0x8A
000550 940e 10db 	CALL SUBOPT_0x2C
000552 f009      	BREQ _0x8B
                 _0x8A:
000553 c00a      	RJMP _0x89
                 _0x8B:
                 ; 0000 0258         {
                 ; 0000 0259             OCR1AH=70*50>>8;
000554 e0ed      	LDI  R30,LOW(13)
000555 bdeb      	OUT  0x2B,R30
                 ; 0000 025A             OCR1AL=70*50;
000556 eaec      	LDI  R30,LOW(172)
000557 bdea      	OUT  0x2A,R30
                 ; 0000 025B             OCR3AH=30*50>>8;
000558 e0e5      	LDI  R30,LOW(5)
000559 93e0 0087 	STS  135,R30
                 ; 0000 025C             OCR3AL=30*50;
00055b edec      	LDI  R30,LOW(220)
00055c 93e0 0086 	STS  134,R30
                 ; 0000 025D         }
                 ; 0000 025E         if((E_flag[Global_Sequence]==0)&&(F_flag[Global_Sequence]==1))
                 _0x89:
00055e 940e 1128 	CALL SUBOPT_0x37
000560 940e 10d5 	CALL SUBOPT_0x2B
000562 f431      	BRNE _0x8D
000563 01f0      	MOVW R30,R0
000564 51e7      	SUBI R30,LOW(-_F_flag)
000565 4ff9      	SBCI R31,HIGH(-_F_flag)
000566 81a0      	LD   R26,Z
000567 30a1      	CPI  R26,LOW(0x1)
000568 f009      	BREQ _0x8E
                 _0x8D:
000569 c00a      	RJMP _0x8C
                 _0x8E:
                 ; 0000 025F         {
                 ; 0000 0260             OCR1AH=30*50>>8;
00056a e0e5      	LDI  R30,LOW(5)
00056b bdeb      	OUT  0x2B,R30
                 ; 0000 0261             OCR1AL=30*50;
00056c edec      	LDI  R30,LOW(220)
00056d bdea      	OUT  0x2A,R30
                 ; 0000 0262             OCR3AH=70*50>>8;
00056e e0ed      	LDI  R30,LOW(13)
00056f 93e0 0087 	STS  135,R30
                 ; 0000 0263             OCR3AL=70*50;
000571 eaec      	LDI  R30,LOW(172)
000572 93e0 0086 	STS  134,R30
                 ; 0000 0264         }
                 ; 0000 0265 
                 ; 0000 0266         if(Left_switch_on)  temp--;
                 _0x8C:
000574 9b09      	SBIS 0x1,1
000575 5001      	SUBI R16,1
                 ; 0000 0267         if(Right_switch_on)  temp++;
000576 9b0b      	SBIS 0x1,3
000577 5f0f      	SUBI R16,-1
                 ; 0000 0268         if(temp<1) temp=1;
000578 3001      	CPI  R16,1
000579 f408      	BRSH _0x91
00057a e001      	LDI  R16,LOW(1)
                 ; 0000 0269         if(temp>99)  temp=99;
                 _0x91:
00057b 3604      	CPI  R16,100
00057c f008      	BRLO _0x92
00057d e603      	LDI  R16,LOW(99)
                 ; 0000 026A         // TEST by LED berfore Valve delivered...
                 ; 0000 026B         OCR1BH = temp*50 >>8;
                 _0x92:
00057e e3e2      	LDI  R30,LOW(50)
00057f 9fe0      	MUL  R30,R16
000580 01f0      	MOVW R30,R0
000581 940e 1087 	CALL SUBOPT_0x20
                 ; 0000 026C         OCR1BL = temp*50;
                 ; 0000 026D 
                 ; 0000 026E         delay_ms(Ts);
000583 940e 1164 	CALL SUBOPT_0x42
                 ; 0000 026F     }
000585 cf85      	RJMP _0x83
                 _0x85:
                 ; 0000 0270     TERMINATE;
000586 940e 107e 	CALL SUBOPT_0x1E
                 ; 0000 0271     Global_Sequence=0;
000588 940e 116a 	CALL SUBOPT_0x43
                 ; 0000 0272     OCR1AH=0x00;
                 ; 0000 0273     OCR1AL=0x00;
                 ; 0000 0274     OCR1BH=0x00;
00058a 940e 109d 	CALL SUBOPT_0x22
                 ; 0000 0275     OCR1BL=0x00;
                 ; 0000 0276     OCR1BH=0x00;
00058c bde9      	OUT  0x29,R30
                 ; 0000 0277     OCR1BL=0x00;
00058d e0e0      	LDI  R30,LOW(0)
00058e bde8      	OUT  0x28,R30
                 ; 0000 0278     for(i=0;i<4;i++)
00058f 940e 1137 	CALL SUBOPT_0x3A
                 _0x94:
000591 940e 113c 	CALL SUBOPT_0x3B
000593 f43c      	BRGE _0x95
                 ; 0000 0279     {
                 ; 0000 027A         E_flag[i]=0;
000594 940e 1142 	CALL SUBOPT_0x3C
000596 940e 1147 	CALL SUBOPT_0x3D
                 ; 0000 027B         F_flag[i]=0;
                 ; 0000 027C     }
000598 940e 114d 	CALL SUBOPT_0x3E
00059a cff6      	RJMP _0x94
                 _0x95:
                 ; 0000 027D     PORTB=0x00;
00059b 940e 1155 	CALL SUBOPT_0x3F
                 ; 0000 027E     PORTC=0x00;
                 ; 0000 027F }
00059d c076      	RJMP _0x2080006
                 ;
                 ;//**************************************%%%&&&&&&&&&&&&&&&&&&&&&&&%%%********************************************
                 ;//**************************************%%% About Actual Movement %%%********************************************
                 ;//**************************************%%%%%%%%%%%%%%%%%%%%%%%%%%%%%********************************************
                 ;//Measuring Grab threshold
                 ;void measure_threshold()
                 ; 0000 0286 {
                 _measure_threshold:
                 ; 0000 0287     int seq = 0;//50% duty
                 ; 0000 0288     delay_ms(50);
00059e 931a      	ST   -Y,R17
00059f 930a      	ST   -Y,R16
                 ;	seq -> R16,R17
                +
0005a0 e000     +LDI R16 , LOW ( 0 )
0005a1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0005a2 940e 105e 	CALL SUBOPT_0x1B
                 ; 0000 0289 
                 ; 0000 028A     while(Middle_switch_off)
                 _0x96:
0005a4 9b0a      	SBIS 0x1,2
0005a5 c06e      	RJMP _0x98
                 ; 0000 028B     {
                 ; 0000 028C         float ANG[4]={0};
                 ; 0000 028D 
                 ; 0000 028E         if(Left_switch_on)  seq--;
0005a6 9760      	SBIW R28,16
0005a7 e180      	LDI  R24,16
0005a8 e0a0      	LDI  R26,LOW(0)
0005a9 e0b0      	LDI  R27,HIGH(0)
0005aa ebe2      	LDI  R30,LOW(_0x99*2)
0005ab e0f0      	LDI  R31,HIGH(_0x99*2)
0005ac 940e 15fa 	CALL __INITLOCB
                 ;	ANG -> Y+0
0005ae 9909      	SBIC 0x1,1
0005af c002      	RJMP _0x9A
                +
0005b0 5001     +SUBI R16 , LOW ( 1 )
0005b1 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 028F         if(Right_switch_on)  seq++;
                 _0x9A:
0005b2 990b      	SBIC 0x1,3
0005b3 c002      	RJMP _0x9B
                +
0005b4 5f0f     +SUBI R16 , LOW ( - 1 )
0005b5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0290         if(seq>3)  seq=0;
                 _0x9B:
                +
0005b6 3004     +CPI R16 , LOW ( 4 )
0005b7 e0e0     +LDI R30 , HIGH ( 4 )
0005b8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
0005b9 f014      	BRLT _0x9C
                +
0005ba e000     +LDI R16 , LOW ( 0 )
0005bb e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0000 0291         if(seq==0 && Right_switch_on)  seq=3;
                 _0x9C:
0005bc 2400      	CLR  R0
0005bd 1600      	CP   R0,R16
0005be 0601      	CPC  R0,R17
0005bf f411      	BRNE _0x9E
0005c0 9b0b      	SBIS 0x1,3
0005c1 c001      	RJMP _0x9F
                 _0x9E:
0005c2 c002      	RJMP _0x9D
                 _0x9F:
                +
0005c3 e003     +LDI R16 , LOW ( 3 )
0005c4 e010     +LDI R17 , HIGH ( 3 )
                 	__GETWRN 16,17,3
                 ; 0000 0292 
                 ; 0000 0293         mean_flex(seq,1);
                 _0x9D:
0005c5 930a      	ST   -Y,R16
0005c6 e0e1      	LDI  R30,LOW(1)
0005c7 93ea      	ST   -Y,R30
0005c8 dccd      	RCALL _mean_flex
                 ; 0000 0294         mean_pressure(seq,1);
0005c9 930a      	ST   -Y,R16
0005ca e0e1      	LDI  R30,LOW(1)
0005cb 93ea      	ST   -Y,R30
0005cc dc10      	RCALL _mean_pressure
                 ; 0000 0295 
                 ; 0000 0296         ANG[seq] = (float)(flex_max[seq]-flex_mean[seq])/((float)(flex_max[seq]-flex_min[seq]))*MAX_ANG;
0005cd 01f8      	MOVW R30,R16
0005ce 01de      	MOVW R26,R28
0005cf 940e 116d 	CALL SUBOPT_0x44
0005d1 93ff      	PUSH R31
0005d2 93ef      	PUSH R30
0005d3 940e 1172 	CALL SUBOPT_0x45
0005d5 eda1      	LDI  R26,LOW(_flex_mean)
0005d6 e0b6      	LDI  R27,HIGH(_flex_mean)
0005d7 940e 1179 	CALL SUBOPT_0x46
0005d9 937f      	PUSH R23
0005da 936f      	PUSH R22
0005db 93ff      	PUSH R31
0005dc 93ef      	PUSH R30
0005dd 940e 1172 	CALL SUBOPT_0x45
0005df eda9      	LDI  R26,LOW(_flex_min)
0005e0 e0b6      	LDI  R27,HIGH(_flex_min)
0005e1 940e 1179 	CALL SUBOPT_0x46
0005e3 91af      	POP  R26
0005e4 91bf      	POP  R27
0005e5 918f      	POP  R24
0005e6 919f      	POP  R25
0005e7 940e 1185 	CALL SUBOPT_0x47
0005e9 91af      	POP  R26
0005ea 91bf      	POP  R27
0005eb 940e 15c2 	CALL __PUTDP1
                 ; 0000 0297 
                 ; 0000 0298         lcd_clear();
0005ed 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 0299         lcd_gotoxy(0, 0);
                 ; 0000 029A         lcd_putsf("FLEX");
                +
0005ef e4e2     +LDI R30 , LOW ( 2 * _0x0 + ( 64 ) )
0005f0 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 64 ) )
                 	__POINTW1FN _0x0,64
0005f1 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 029B         lcd_gotoxy(5, 0);
0005f3 e0e5      	LDI  R30,LOW(5)
0005f4 940e 1105 	CALL SUBOPT_0x34
                 ; 0000 029C         sprintf(lcd_data, "%d", (int)ANG[seq]);
0005f6 01f8      	MOVW R30,R16
0005f7 940e 118e 	CALL SUBOPT_0x48
0005f9 940e 1197 	CALL SUBOPT_0x49
                 ; 0000 029D         lcd_puts(lcd_data);
                 ; 0000 029E 
                 ; 0000 029F         lcd_gotoxy(0, 1);
0005fb e0e0      	LDI  R30,LOW(0)
0005fc 940e 10c1 	CALL SUBOPT_0x27
                 ; 0000 02A0         lcd_putsf("PRES");
                +
0005fe e4e7     +LDI R30 , LOW ( 2 * _0x0 + ( 69 ) )
0005ff e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 69 ) )
                 	__POINTW1FN _0x0,69
000600 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 02A1         lcd_gotoxy(5, 1);
000602 e0e5      	LDI  R30,LOW(5)
000603 940e 10c1 	CALL SUBOPT_0x27
                 ; 0000 02A2         sprintf(lcd_data, "%d %", pressure_mean[seq]);
000605 940e 1159 	CALL SUBOPT_0x40
000607 940e 119a 	CALL SUBOPT_0x4A
000609 efad      	LDI  R26,LOW(_pressure_mean)
00060a e0b5      	LDI  R27,HIGH(_pressure_mean)
00060b 0fa0      	ADD  R26,R16
00060c 1fb1      	ADC  R27,R17
00060d 91ec      	LD   R30,X
00060e 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 02A3         lcd_puts(lcd_data);
                 ; 0000 02A4 
                 ; 0000 02A5         delay_ms(100);
000610 940e 103d 	CALL SUBOPT_0x15
                 ; 0000 02A6     }
000612 9660      	ADIW R28,16
000613 cf90      	RJMP _0x96
                 _0x98:
                 ; 0000 02A7 }
                 _0x2080006:
000614 9109      	LD   R16,Y+
000615 9119      	LD   R17,Y+
000616 9508      	RET
                 ;
                 ;// Moving fingers
                 ;void Move_finger(unsigned char seq, unsigned char P, float Bend)
                 ; 0000 02AB {
                 _Move_finger:
                 ; 0000 02AC     unsigned char threshold;  //Actively changing by Bend
                 ; 0000 02AD     unsigned char Grab=0;     //if 1, no more Grab (NO FLEXTION)
                 ; 0000 02AE     int ang_desired=0;
                 ; 0000 02AF     int E_OR_F;
                 ; 0000 02B0     float u=0;
                 ; 0000 02B1     float error=0;
                 ; 0000 02B2 
                 ; 0000 02B3     /*** INSERT TERM OF 'threshold' IN TERMS OF 'Bend'!!! ***/
                 ; 0000 02B4     threshold = 100;
000617 9728      	SBIW R28,8
000618 e0e0      	LDI  R30,LOW(0)
000619 83e8      	ST   Y,R30
00061a 83e9      	STD  Y+1,R30
00061b 83ea      	STD  Y+2,R30
00061c 83eb      	STD  Y+3,R30
00061d 83ec      	STD  Y+4,R30
00061e 83ed      	STD  Y+5,R30
00061f 83ee      	STD  Y+6,R30
000620 83ef      	STD  Y+7,R30
000621 940e 15ec 	CALL __SAVELOCR6
                 ;	seq -> Y+19
                 ;	P -> Y+18
                 ;	Bend -> Y+14
                 ;	threshold -> R17
                 ;	Grab -> R16
                 ;	ang_desired -> R18,R19
                 ;	E_OR_F -> R20,R21
                 ;	u -> Y+10
                 ;	error -> Y+6
000623 e000      	LDI  R16,0
                +
000624 e020     +LDI R18 , LOW ( 0 )
000625 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000626 e614      	LDI  R17,LOW(100)
                 ; 0000 02B5     // Grab or not?
                 ; 0000 02B6     /*
                 ; 0000 02B7     if(P>=threshold)  Grab=1;//Over the threshold : no more grab
                 ; 0000 02B8     else Grab=0;//Under the threshold : Keep moving
                 ; 0000 02B9     */
                 ; 0000 02BA 
                 ; 0000 02BB     //Update angle (PID)
                 ; 0000 02BC     E_OR_F = (Grab&&F_flag[seq])?0:(((E_flag[seq]?-1:1)+(F_flag[seq]?1:-1))/2);//Extension:-1, Flextion:1, Do noting:0
000627 940e 119f 	CALL SUBOPT_0x4B
000629 9730      	SBIW R30,0
00062a f029      	BREQ _0xA0
00062b 940e 11a2 	CALL SUBOPT_0x4C
00062d 940e 11a5 	CALL SUBOPT_0x4D
00062f f409      	BRNE _0xA1
                 _0xA0:
000630 c003      	RJMP _0xA2
                 _0xA1:
000631 e0e0      	LDI  R30,LOW(0)
000632 e0f0      	LDI  R31,HIGH(0)
000633 c01a      	RJMP _0xA3
                 _0xA2:
000634 940e 11a2 	CALL SUBOPT_0x4C
000636 51eb      	SUBI R30,LOW(-_E_flag)
000637 4ff9      	SBCI R31,HIGH(-_E_flag)
000638 940e 11ab 	CALL SUBOPT_0x4E
00063a 9730      	SBIW R30,0
00063b f019      	BREQ _0xA5
00063c efef      	LDI  R30,LOW(65535)
00063d efff      	LDI  R31,HIGH(65535)
00063e c002      	RJMP _0xA6
                 _0xA5:
00063f e0e1      	LDI  R30,LOW(1)
000640 e0f0      	LDI  R31,HIGH(1)
                 _0xA6:
000641 01df      	MOVW R26,R30
000642 940e 11a2 	CALL SUBOPT_0x4C
000644 940e 11a5 	CALL SUBOPT_0x4D
000646 f019      	BREQ _0xA8
000647 e0e1      	LDI  R30,LOW(1)
000648 e0f0      	LDI  R31,HIGH(1)
000649 c002      	RJMP _0xA9
                 _0xA8:
00064a efef      	LDI  R30,LOW(65535)
00064b efff      	LDI  R31,HIGH(65535)
                 _0xA9:
00064c 940e 11ae 	CALL SUBOPT_0x4F
                 _0xA3:
00064e 01af      	MOVW R20,R30
                 ; 0000 02BD     ang_desired = Bend+(E_OR_F*delta_ang);//Ext:Bend-delta_ang, Flex:Bend+delta_ang, Stay:Bend
00064f 01fa      	MOVW R30,R20
000650 0fee      	LSL  R30
000651 1fff      	ROL  R31
000652 940e 11b5 	CALL SUBOPT_0x50
000654 940e 144c 	CALL __ADDF12
000656 940e 13db 	CALL __CFD1
000658 019f      	MOVW R18,R30
                 ; 0000 02BE     //if(ang_desired<0)   ang_desired = 0;
                 ; 0000 02BF     error = ang_desired-ang_old[seq];     //error : 0~60
000659 940e 11a2 	CALL SUBOPT_0x4C
00065b 5dee      	SUBI R30,LOW(-_ang_old)
00065c 4ff8      	SBCI R31,HIGH(-_ang_old)
00065d 940e 11be 	CALL SUBOPT_0x51
00065f 01f9      	MOVW R30,R18
000660 940e 11c1 	CALL SUBOPT_0x52
                +
000662 83ee     +STD Y + 6 , R30
000663 83ff     +STD Y + 6 + 1 , R31
000664 8768     +STD Y + 6 + 2 , R22
000665 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
                 ; 0000 02C0     error_sum[seq] += error;
000666 940e 11c8 	CALL SUBOPT_0x53
000668 940e 116d 	CALL SUBOPT_0x44
00066a 93ff      	PUSH R31
00066b 93ef      	PUSH R30
00066c 01df      	MOVW R26,R30
00066d 940e 11cd 	CALL SUBOPT_0x54
00066f 940e 144c 	CALL __ADDF12
000671 91af      	POP  R26
000672 91bf      	POP  R27
000673 940e 15c2 	CALL __PUTDP1
                 ; 0000 02C1     u = kp*error + ki*error_sum[seq]*((float)(Ts/1000.)) + kd*(error-error_old[seq])/((float)(Ts/1000.));//Control value for OCR1A,OCR3A
000675 940e 11d4 	CALL SUBOPT_0x55
000677 937f      	PUSH R23
000678 936f      	PUSH R22
000679 93ff      	PUSH R31
00067a 93ef      	PUSH R30
00067b 940e 11c8 	CALL SUBOPT_0x53
00067d 940e 11e3 	CALL SUBOPT_0x56
00067f 940e 15bc 	CALL __GETD1P
000681 940e 11e8 	CALL SUBOPT_0x57
000683 91af      	POP  R26
000684 91bf      	POP  R27
000685 918f      	POP  R24
000686 919f      	POP  R25
000687 940e 144c 	CALL __ADDF12
000689 937f      	PUSH R23
00068a 936f      	PUSH R22
00068b 93ff      	PUSH R31
00068c 93ef      	PUSH R30
00068d 940e 11f9 	CALL SUBOPT_0x58
00068f 940e 11e3 	CALL SUBOPT_0x56
000691 940e 11cd 	CALL SUBOPT_0x54
000693 940e 11fe 	CALL SUBOPT_0x59
000695 91af      	POP  R26
000696 91bf      	POP  R27
000697 918f      	POP  R24
000698 919f      	POP  R25
000699 940e 1215 	CALL SUBOPT_0x5A
                 ; 0000 02C2     error_old[seq]=error;
00069b 940e 11f9 	CALL SUBOPT_0x58
00069d 940e 116d 	CALL SUBOPT_0x44
00069f 940e 121c 	CALL SUBOPT_0x5B
0006a1 940e 15d5 	CALL __PUTDZ20
                 ; 0000 02C3 
                 ; 0000 02C4     //Saturation condition...
                 ; 0000 02C5     if(u>UPPER)       u=UPPER;
0006a3 940e 1221 	CALL SUBOPT_0x5C
0006a5 940e 1226 	CALL SUBOPT_0x5D
0006a7 940e 152f 	CALL __CMPF12
0006a9 f009      	BREQ PC+2
0006aa f410      	BRCC PC+3
0006ab 940c 06b0 	JMP  _0xAB
0006ad 940e 1226 	CALL SUBOPT_0x5D
0006af c005      	RJMP _0x138
                 ; 0000 02C6     else if(u<LOWER)  u=LOWER;
                 _0xAB:
0006b0 940e 122b 	CALL SUBOPT_0x5E
0006b2 f430      	BRSH _0xAD
0006b3 940e 1233 	CALL SUBOPT_0x5F
                 _0x138:
                +
0006b5 87ea     +STD Y + 10 , R30
0006b6 87fb     +STD Y + 10 + 1 , R31
0006b7 876c     +STD Y + 10 + 2 , R22
0006b8 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
                 ; 0000 02C7 
                 ; 0000 02C8 
                 ; 0000 02C9     //Extension
                 ; 0000 02CA     if(Bend>(ang_desired+ANG_th))
                 _0xAD:
0006b9 01f9      	MOVW R30,R18
0006ba 9631      	ADIW R30,1
0006bb 940e 11b5 	CALL SUBOPT_0x50
0006bd 940e 152f 	CALL __CMPF12
0006bf f009      	BREQ PC+2
0006c0 f410      	BRCC PC+3
0006c1 940c 06d5 	JMP  _0xAE
                 ; 0000 02CB     {
                 ; 0000 02CC         arrived[seq] = -1;
0006c3 940e 1238 	CALL SUBOPT_0x60
0006c5 940e 1241 	CALL SUBOPT_0x61
                 ; 0000 02CD         OCR3AH=(int)u>>8;
0006c7 940e 1246 	CALL SUBOPT_0x62
0006c9 940e 124b 	CALL SUBOPT_0x63
0006cb 93e0 0087 	STS  135,R30
                 ; 0000 02CE         OCR3AL=u;
0006cd 940e 1246 	CALL SUBOPT_0x62
0006cf e8a6      	LDI  R26,LOW(134)
0006d0 e0b0      	LDI  R27,HIGH(134)
0006d1 940e 13d9 	CALL __CFD1U
0006d3 93ec      	ST   X,R30
                 ; 0000 02CF     }
                 ; 0000 02D0     //Flextion
                 ; 0000 02D1     else if(Bend<(ang_desired-ANG_th))
0006d4 c02b      	RJMP _0xAF
                 _0xAE:
0006d5 01f9      	MOVW R30,R18
0006d6 9731      	SBIW R30,1
0006d7 940e 11b5 	CALL SUBOPT_0x50
0006d9 940e 152f 	CALL __CMPF12
0006db f468      	BRSH _0xB0
                 ; 0000 02D2     {
                 ; 0000 02D3         arrived[seq] = 1;
0006dc 940e 1238 	CALL SUBOPT_0x60
0006de 940e 1250 	CALL SUBOPT_0x64
                 ; 0000 02D4         OCR1AH=(int)u>>8;
0006e0 940e 1255 	CALL SUBOPT_0x65
0006e2 bdeb      	OUT  0x2B,R30
                 ; 0000 02D5         OCR1AL=u;
0006e3 940e 1246 	CALL SUBOPT_0x62
0006e5 940e 13d9 	CALL __CFD1U
0006e7 bdea      	OUT  0x2A,R30
                 ; 0000 02D6     }
                 ; 0000 02D7     //Hold
                 ; 0000 02D8     else if((Bend>=(ang_desired-ANG_th)) && (Bend<=(ang_desired+ANG_th)))
0006e8 c017      	RJMP _0xB1
                 _0xB0:
0006e9 01f9      	MOVW R30,R18
0006ea 9731      	SBIW R30,1
0006eb 940e 11b5 	CALL SUBOPT_0x50
0006ed 940e 152f 	CALL __CMPF12
0006ef f058      	BRLO _0xB3
0006f0 01f9      	MOVW R30,R18
0006f1 9631      	ADIW R30,1
0006f2 940e 11b5 	CALL SUBOPT_0x50
0006f4 940e 152f 	CALL __CMPF12
0006f6 f019      	BREQ PC+4
0006f7 f010      	BRCS PC+3
0006f8 940c 06fb 	JMP  _0xB3
0006fa c001      	RJMP _0xB4
                 _0xB3:
0006fb c004      	RJMP _0xB2
                 _0xB4:
                 ; 0000 02D9     {
                 ; 0000 02DA         //OCR3AH=(int)u>>8;
                 ; 0000 02DB         //OCR3AL=u;
                 ; 0000 02DC         arrived[seq] = 0;
0006fc 940e 1238 	CALL SUBOPT_0x60
0006fe 940e 1257 	CALL SUBOPT_0x66
                 ; 0000 02DD     }
                 ; 0000 02DE }
                 _0xB2:
                 _0xB1:
                 _0xAF:
000700 940e 15f3 	CALL __LOADLOCR6
000702 c0b8      	RJMP _0x2080005
                 ;
                 ;// About Daily mode
                 ;void RUN_daily()
                 ; 0000 02E2 {
                 _RUN_daily:
                 ; 0000 02E3   unsigned char seq=0;
                 ; 0000 02E4   int finger=1;
                 ; 0000 02E5   float ANG[4]={0};
                 ; 0000 02E6 
                 ; 0000 02E7   lcd_clear();
000703 9760      	SBIW R28,16
000704 e180      	LDI  R24,16
000705 e0a0      	LDI  R26,LOW(0)
000706 e0b0      	LDI  R27,HIGH(0)
000707 ece2      	LDI  R30,LOW(_0xB5*2)
000708 e0f0      	LDI  R31,HIGH(_0xB5*2)
000709 940e 15fa 	CALL __INITLOCB
00070b 940e 15ee 	CALL __SAVELOCR4
                 ;	seq -> R17
                 ;	finger -> R18,R19
                 ;	ANG -> Y+4
00070d e010      	LDI  R17,0
                +
00070e e021     +LDI R18 , LOW ( 1 )
00070f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
000710 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 02E8   lcd_gotoxy(0, 0);lcd_putsf("Daily");
                +
000712 e4ec     +LDI R30 , LOW ( 2 * _0x0 + ( 74 ) )
000713 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 74 ) )
                 	__POINTW1FN _0x0,74
000714 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 02E9   delay_ms(100);
000716 940e 103d 	CALL SUBOPT_0x15
                 ; 0000 02EA 
                 ; 0000 02EB   OCR1BH=(99*50)>>8;
000718 940e 125c 	CALL SUBOPT_0x67
                 ; 0000 02EC   OCR1BL=99*50;
                 ; 0000 02ED 
                 ; 0000 02EE   INITIATE; //Initialization, Turn interrupts on
00071a 940e 1064 	CALL SUBOPT_0x1C
                 ; 0000 02EF   while(Middle_switch_off)
                 _0xB6:
00071c 9b0a      	SBIS 0x1,2
00071d c080      	RJMP _0xB8
                 ; 0000 02F0   {
                 ; 0000 02F1     order(&seq); //Control signal of each sequence
00071e b7ed      	IN   R30,SPL
00071f b7fe      	IN   R31,SPH
000720 93fa      	ST   -Y,R31
000721 93ea      	ST   -Y,R30
000722 931f      	PUSH R17
000723 dc7f      	RCALL _order
000724 911f      	POP  R17
                 ; 0000 02F2     Global_Sequence = seq;
000725 9310 06ed 	STS  _Global_Sequence,R17
                 ; 0000 02F3 
                 ; 0000 02F4     for(i=0;i<4;i++)    disp(i*2,i);
000727 e0e0      	LDI  R30,LOW(0)
000728 940e 1137 	CALL SUBOPT_0x3A
                 _0xBA:
00072a 940e 113c 	CALL SUBOPT_0x3B
00072c f42c      	BRGE _0xBB
00072d 940e 1261 	CALL SUBOPT_0x68
00072f 940e 114d 	CALL SUBOPT_0x3E
000731 cff8      	RJMP _0xBA
                 _0xBB:
                 ; 0000 02F6 mean_pressure(seq,1);
000732 931a      	ST   -Y,R17
000733 e0e1      	LDI  R30,LOW(1)
000734 93ea      	ST   -Y,R30
000735 daa7      	RCALL _mean_pressure
                 ; 0000 02F7     mean_flex(seq,1);
000736 940e 126a 	CALL SUBOPT_0x69
                 ; 0000 02F8     ANG[seq] = (float)(flex_max[seq]-flex_mean[seq])/((float)(flex_max[seq]-flex_min[seq]))*MAX_ANG;
000738 01cf      	MOVW R24,R30
000739 01bf      	MOVW R22,R30
00073a 010f      	MOVW R0,R30
00073b 01de      	MOVW R26,R28
00073c 9614      	ADIW R26,4
00073d 940e 116d 	CALL SUBOPT_0x44
00073f 93ff      	PUSH R31
000740 93ef      	PUSH R30
000741 940e 126d 	CALL SUBOPT_0x6A
000743 940e 1271 	CALL SUBOPT_0x6B
000745 940e 1275 	CALL SUBOPT_0x6C
000747 937f      	PUSH R23
000748 936f      	PUSH R22
000749 93ff      	PUSH R31
00074a 93ef      	PUSH R30
00074b 940e 1278 	CALL SUBOPT_0x6D
00074d 940e 1027 	CALL SUBOPT_0x12
00074f 940e 127c 	CALL SUBOPT_0x6E
000751 940e 1275 	CALL SUBOPT_0x6C
000753 91af      	POP  R26
000754 91bf      	POP  R27
000755 918f      	POP  R24
000756 919f      	POP  R25
000757 940e 1185 	CALL SUBOPT_0x47
000759 91af      	POP  R26
00075a 91bf      	POP  R27
00075b 940e 15c2 	CALL __PUTDP1
                 ; 0000 02F9 
                 ; 0000 02FA     Move_finger(seq,pressure_mean[seq], ANG[seq]);
00075d 931a      	ST   -Y,R17
00075e 940e 1027 	CALL SUBOPT_0x12
000760 50e3      	SUBI R30,LOW(-_pressure_mean)
000761 4ffa      	SBCI R31,HIGH(-_pressure_mean)
000762 81e0      	LD   R30,Z
000763 93ea      	ST   -Y,R30
000764 940e 1027 	CALL SUBOPT_0x12
000766 01de      	MOVW R26,R28
000767 9616      	ADIW R26,6
000768 940e 11e3 	CALL SUBOPT_0x56
00076a 940e 15bc 	CALL __GETD1P
00076c 940e 15da 	CALL __PUTPARD1
00076e dea8      	RCALL _Move_finger
                 ; 0000 02FB 
                 ; 0000 02FC     if(Left_switch_on)  finger--;
00076f 9909      	SBIC 0x1,1
000770 c002      	RJMP _0xBC
                +
000771 5021     +SUBI R18 , LOW ( 1 )
000772 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0000 02FD     if(Right_switch_on)  finger++;
                 _0xBC:
000773 990b      	SBIC 0x1,3
000774 c002      	RJMP _0xBD
                +
000775 5f2f     +SUBI R18 , LOW ( - 1 )
000776 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 02FE     if(finger<0) finger=0;
                 _0xBD:
000777 2333      	TST  R19
000778 f412      	BRPL _0xBE
                +
000779 e020     +LDI R18 , LOW ( 0 )
00077a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0000 02FF     if(finger>3)  finger=3;
                 _0xBE:
                +
00077b 3024     +CPI R18 , LOW ( 4 )
00077c e0e0     +LDI R30 , HIGH ( 4 )
00077d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,4
00077e f014      	BRLT _0xBF
                +
00077f e023     +LDI R18 , LOW ( 3 )
000780 e030     +LDI R19 , HIGH ( 3 )
                 	__GETWRN 18,19,3
                 ; 0000 0300     lcd_gotoxy(6, 0);sprintf(lcd_data, "%d %", arrived[finger]);lcd_puts(lcd_data);
                 _0xBF:
000781 940e 10f6 	CALL SUBOPT_0x31
000783 940e 1159 	CALL SUBOPT_0x40
000785 940e 119a 	CALL SUBOPT_0x4A
000787 01f9      	MOVW R30,R18
000788 940e 127f 	CALL SUBOPT_0x6F
00078a 940e 15b8 	CALL __GETW1P
00078c 940e 108f 	CALL SUBOPT_0x21
                 ; 0000 0301 
                 ; 0000 0302     ang_old[seq]=ANG[seq];
00078e 940e 1027 	CALL SUBOPT_0x12
000790 01df      	MOVW R26,R30
000791 5dee      	SUBI R30,LOW(-_ang_old)
000792 4ff8      	SBCI R31,HIGH(-_ang_old)
000793 010f      	MOVW R0,R30
000794 01fd      	MOVW R30,R26
000795 940e 118e 	CALL SUBOPT_0x48
000797 01d0      	MOVW R26,R0
000798 940e 13d9 	CALL __CFD1U
00079a 93ec      	ST   X,R30
                 ; 0000 0303     delay_ms(200);//sequence gab
00079b 940e 101b 	CALL SUBOPT_0x10
                 ; 0000 0304   }
00079d cf7e      	RJMP _0xB6
                 _0xB8:
                 ; 0000 0305   TERMINATE; // Turn interrupts off
00079e 940e 107e 	CALL SUBOPT_0x1E
                 ; 0000 0306   PORTC=0x00;
0007a0 bbe5      	OUT  0x15,R30
                 ; 0000 0307   for(i=0;i<4;i++)
0007a1 e0e0      	LDI  R30,LOW(0)
0007a2 940e 1137 	CALL SUBOPT_0x3A
                 _0xC1:
0007a4 940e 113c 	CALL SUBOPT_0x3B
0007a6 f46c      	BRGE _0xC2
                 ; 0000 0308   {
                 ; 0000 0309     E_flag[i]=0;
0007a7 940e 1142 	CALL SUBOPT_0x3C
0007a9 940e 1147 	CALL SUBOPT_0x3D
                 ; 0000 030A     F_flag[i]=0;
                 ; 0000 030B     arrived[i]=0;
0007ab 940e 1142 	CALL SUBOPT_0x3C
0007ad 940e 127f 	CALL SUBOPT_0x6F
0007af 940e 1257 	CALL SUBOPT_0x66
                 ; 0000 030C   }
0007b1 940e 114d 	CALL SUBOPT_0x3E
0007b3 cff0      	RJMP _0xC1
                 _0xC2:
                 ; 0000 030D   Global_Sequence=0;
0007b4 e0e0      	LDI  R30,LOW(0)
0007b5 940e 116a 	CALL SUBOPT_0x43
                 ; 0000 030E   OCR1AH=0x00;
                 ; 0000 030F   OCR1AL=0x00;
                 ; 0000 0310   OCR3AH=0x00;
0007b7 940e 1286 	CALL SUBOPT_0x70
                 ; 0000 0311   OCR3AL=0x00;
                 ; 0000 0312   OCR1BH=0x00;
                 ; 0000 0313   OCR1BL=0x00;
                 ; 0000 0314 }
0007b9 940e 15f5 	CALL __LOADLOCR4
                 _0x2080005:
0007bb 9664      	ADIW R28,20
0007bc 9508      	RET
                 ;
                 ;void rehab_move(unsigned char finger, unsigned char mod, unsigned char ANG_d)
                 ; 0000 0317 {
                 _rehab_move:
                 ; 0000 0318     // mod : Á¢´ÂÁö Æì´ÂÁö Áö½Ã, Bend : ÇöÀç ¼Õ°¡¶ô °¢µµ
                 ; 0000 0319     //(mod = 1:Á¢À½, 0:Æï)    (Bend=In degrees, 0~90)
                 ; 0000 031A     float Bend=-1;
                 ; 0000 031B 
                 ; 0000 031C     Global_Sequence=finger;
0007bd 9724      	SBIW R28,4
0007be e0e0      	LDI  R30,LOW(0)
0007bf 83e8      	ST   Y,R30
0007c0 83e9      	STD  Y+1,R30
0007c1 e8e0      	LDI  R30,LOW(128)
0007c2 83ea      	STD  Y+2,R30
0007c3 ebef      	LDI  R30,LOW(191)
0007c4 83eb      	STD  Y+3,R30
                 ;	finger -> Y+6
                 ;	mod -> Y+5
                 ;	ANG_d -> Y+4
                 ;	Bend -> Y+0
0007c5 81ee      	LDD  R30,Y+6
0007c6 93e0 06ed 	STS  _Global_Sequence,R30
                 ; 0000 031D 
                 ; 0000 031E     while(1)
                 _0xC3:
                 ; 0000 031F     {
                 ; 0000 0320         mean_flex(finger,1);
0007c8 81ee      	LDD  R30,Y+6
0007c9 93ea      	ST   -Y,R30
0007ca e0e1      	LDI  R30,LOW(1)
0007cb 93ea      	ST   -Y,R30
0007cc dac9      	RCALL _mean_flex
                 ; 0000 0321         Bend = (float)(flex_max[finger]-flex_mean[finger])/((float)(flex_max[finger]-flex_min[finger]))*MAX_ANG;
0007cd 81ee      	LDD  R30,Y+6
0007ce e0f0      	LDI  R31,0
0007cf 01cf      	MOVW R24,R30
0007d0 010f      	MOVW R0,R30
0007d1 52eb      	SUBI R30,LOW(-_flex_max)
0007d2 4ff9      	SBCI R31,HIGH(-_flex_max)
0007d3 940e 11be 	CALL SUBOPT_0x51
0007d5 01f0      	MOVW R30,R0
0007d6 52ef      	SUBI R30,LOW(-_flex_mean)
0007d7 4ff9      	SBCI R31,HIGH(-_flex_mean)
0007d8 940e 11ab 	CALL SUBOPT_0x4E
0007da 940e 1275 	CALL SUBOPT_0x6C
0007dc 937f      	PUSH R23
0007dd 936f      	PUSH R22
0007de 93ff      	PUSH R31
0007df 93ef      	PUSH R30
0007e0 940e 1278 	CALL SUBOPT_0x6D
0007e2 81ee      	LDD  R30,Y+6
0007e3 940e 1059 	CALL SUBOPT_0x1A
0007e5 940e 128e 	CALL SUBOPT_0x71
0007e7 91af      	POP  R26
0007e8 91bf      	POP  R27
0007e9 918f      	POP  R24
0007ea 919f      	POP  R25
0007eb 940e 1185 	CALL SUBOPT_0x47
0007ed 940e 15d0 	CALL __PUTD1S0
                 ; 0000 0322 
                 ; 0000 0323         if((mod==1)&&(Bend<ANG_d))
0007ef 81ad      	LDD  R26,Y+5
0007f0 30a1      	CPI  R26,LOW(0x1)
0007f1 f419      	BRNE _0xC7
0007f2 940e 1290 	CALL SUBOPT_0x72
0007f4 f008      	BRLO _0xC8
                 _0xC7:
0007f5 c005      	RJMP _0xC6
                 _0xC8:
                 ; 0000 0324         {
                 ; 0000 0325             //Define action
                 ; 0000 0326             arrived[finger] = 1;
0007f6 940e 129b 	CALL SUBOPT_0x73
0007f8 940e 1250 	CALL SUBOPT_0x64
                 ; 0000 0327 
                 ; 0000 0328         }
                 ; 0000 0329         else if((mod!=1)&&(Bend>ANG_d))
0007fa c011      	RJMP _0xC9
                 _0xC6:
0007fb 81ad      	LDD  R26,Y+5
0007fc 30a1      	CPI  R26,LOW(0x1)
0007fd f039      	BREQ _0xCB
0007fe 940e 1290 	CALL SUBOPT_0x72
000800 f009      	BREQ PC+2
000801 f410      	BRCC PC+3
000802 940c 0805 	JMP  _0xCB
000804 c001      	RJMP _0xCC
                 _0xCB:
000805 c005      	RJMP _0xCA
                 _0xCC:
                 ; 0000 032A         {
                 ; 0000 032B             //Define action
                 ; 0000 032C             arrived[finger] = -1;
000806 940e 129b 	CALL SUBOPT_0x73
000808 940e 1241 	CALL SUBOPT_0x61
                 ; 0000 032D 
                 ; 0000 032E         }
                 ; 0000 032F         else    break;
00080a c001      	RJMP _0xCD
                 _0xCA:
00080b c003      	RJMP _0xC5
                 ; 0000 0330 
                 ; 0000 0331         if(Middle_switch_on)   return;
                 _0xCD:
                 _0xC9:
00080c 9b0a      	SBIS 0x1,2
00080d c007      	RJMP _0x2080004
                 ; 0000 0332     }
00080e cfb9      	RJMP _0xC3
                 _0xC5:
                 ; 0000 0333     arrived[finger] = 0;
00080f 940e 129b 	CALL SUBOPT_0x73
000811 940e 1257 	CALL SUBOPT_0x66
                 ; 0000 0334     delay_ms(1000);
000813 940e 12a4 	CALL SUBOPT_0x74
                 ; 0000 0335 }
                 _0x2080004:
000815 9627      	ADIW R28,7
000816 9508      	RET
                 ;
                 ;// About Rhabilitation
                 ;void RUN_rehab()
                 ; 0000 0339 {
                 _RUN_rehab:
                 ; 0000 033A     lcd_clear();
000817 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 033B     lcd_gotoxy(0, 0);lcd_putsf("Rehabilitation");
                +
000819 e5e2     +LDI R30 , LOW ( 2 * _0x0 + ( 80 ) )
00081a e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 80 ) )
                 	__POINTW1FN _0x0,80
00081b 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 033C 
                 ; 0000 033D     delay_ms(100);
00081d 940e 103d 	CALL SUBOPT_0x15
                 ; 0000 033E 
                 ; 0000 033F     OCR1BH=(99*50)>>8;
00081f 940e 125c 	CALL SUBOPT_0x67
                 ; 0000 0340     OCR1BL=99*50;
                 ; 0000 0341 
                 ; 0000 0342     OCR1AH = 800>>8;
000821 940e 112c 	CALL SUBOPT_0x38
                 ; 0000 0343     OCR1AL = 800;     //Many Inlet
                 ; 0000 0344     OCR3AH = REHAB_SPEED>>8;
000823 940e 12aa 	CALL SUBOPT_0x75
                 ; 0000 0345     OCR3AL = REHAB_SPEED;     //Many Outlet
                 ; 0000 0346 
                 ; 0000 0347     INITIATE; //Initialization, Turn interrupts on
000825 940e 1064 	CALL SUBOPT_0x1C
                 ; 0000 0348     //mode1 (ÇÏ³ª¾¿ Á¢¾ú´Ù Æï)
                 ; 0000 0349     rehab_move(THUMB,FLEX,40);
000827 940e 12b1 	CALL SUBOPT_0x76
                 ; 0000 034A     rehab_move(THUMB,EXTD,10);
000829 940e 10fc 	CALL SUBOPT_0x32
00082b 940e 12b9 	CALL SUBOPT_0x77
                 ; 0000 034B     rehab_move(INDEX,FLEX,60);
00082d 940e 12bd 	CALL SUBOPT_0x78
00082f 940e 12c1 	CALL SUBOPT_0x79
                 ; 0000 034C     rehab_move(INDEX,EXTD,10);
000831 940e 12c5 	CALL SUBOPT_0x7A
                 ; 0000 034D     rehab_move(MIDDLE,FLEX,40);
000833 940e 1100 	CALL SUBOPT_0x33
000835 940e 12ca 	CALL SUBOPT_0x7B
                 ; 0000 034E     rehab_move(MIDDLE,EXTD,10);
000837 940e 10eb 	CALL SUBOPT_0x2F
000839 940e 12b9 	CALL SUBOPT_0x77
                 ; 0000 034F     rehab_move(REST,FLEX,60);
00083b 940e 12ce 	CALL SUBOPT_0x7C
                 ; 0000 0350     rehab_move(REST,EXTD,10);
00083d 940e 12d3 	CALL SUBOPT_0x7D
                 ; 0000 0351     PORTC=0x00;
00083f e0e0      	LDI  R30,LOW(0)
000840 bbe5      	OUT  0x15,R30
                 ; 0000 0352 
                 ; 0000 0353     delay_ms(1000);
000841 940e 12a4 	CALL SUBOPT_0x74
                 ; 0000 0354 
                 ; 0000 0355     //mode2 (ÇÏ³ª¾¿ Á¢°í ÇÏ³ª¾¿ Æï)
                 ; 0000 0356     rehab_move(THUMB,FLEX,40);
000843 940e 12b1 	CALL SUBOPT_0x76
                 ; 0000 0357     rehab_move(INDEX,FLEX,50);
000845 940e 12bd 	CALL SUBOPT_0x78
000847 e3e2      	LDI  R30,LOW(50)
000848 93ea      	ST   -Y,R30
000849 df73      	RCALL _rehab_move
                 ; 0000 0358     rehab_move(MIDDLE,FLEX,40);
00084a 940e 1100 	CALL SUBOPT_0x33
00084c 940e 12ca 	CALL SUBOPT_0x7B
                 ; 0000 0359     rehab_move(REST,FLEX,60);
00084e 940e 12ce 	CALL SUBOPT_0x7C
                 ; 0000 035A     rehab_move(REST,EXTD,10);
000850 940e 12d3 	CALL SUBOPT_0x7D
                 ; 0000 035B     rehab_move(MIDDLE,EXTD,10);
000852 940e 10eb 	CALL SUBOPT_0x2F
000854 940e 12b9 	CALL SUBOPT_0x77
                 ; 0000 035C     rehab_move(INDEX,EXTD,10);
000856 940e 12c5 	CALL SUBOPT_0x7A
                 ; 0000 035D     rehab_move(THUMB,EXTD,10);
000858 940e 10fc 	CALL SUBOPT_0x32
00085a 940e 12b9 	CALL SUBOPT_0x77
                 ; 0000 035E     PORTC=0x00;
00085c e0e0      	LDI  R30,LOW(0)
00085d bbe5      	OUT  0x15,R30
                 ; 0000 035F 
                 ; 0000 0360     delay_ms(1000);
00085e 940e 12a4 	CALL SUBOPT_0x74
                 ; 0000 0361 
                 ; 0000 0362     //mode3 (ÇÏ³ª¾¿ ¾öÁö¶û ¸ÂºÙ¿´´Ù ¶À)
                 ; 0000 0363     rehab_move(THUMB,FLEX,25);
000860 940e 12d8 	CALL SUBOPT_0x7E
000862 e1e9      	LDI  R30,LOW(25)
000863 93ea      	ST   -Y,R30
000864 df58      	RCALL _rehab_move
                 ; 0000 0364     rehab_move(INDEX,FLEX,45);
000865 940e 12bd 	CALL SUBOPT_0x78
000867 e2ed      	LDI  R30,LOW(45)
000868 93ea      	ST   -Y,R30
000869 df53      	RCALL _rehab_move
                 ; 0000 0365     rehab_move(INDEX,EXTD,10);
00086a 940e 12c5 	CALL SUBOPT_0x7A
                 ; 0000 0366     rehab_move(THUMB,EXTD,10);
00086c 940e 10fc 	CALL SUBOPT_0x32
00086e 940e 12b9 	CALL SUBOPT_0x77
                 ; 0000 0367     rehab_move(THUMB,FLEX,30);
000870 940e 12d8 	CALL SUBOPT_0x7E
000872 e1ee      	LDI  R30,LOW(30)
000873 93ea      	ST   -Y,R30
000874 df48      	RCALL _rehab_move
                 ; 0000 0368     rehab_move(MIDDLE,FLEX,35);
000875 940e 1100 	CALL SUBOPT_0x33
000877 e2e3      	LDI  R30,LOW(35)
000878 93ea      	ST   -Y,R30
000879 df43      	RCALL _rehab_move
                 ; 0000 0369     rehab_move(MIDDLE,EXTD,10);
00087a 940e 10eb 	CALL SUBOPT_0x2F
00087c 940e 12b9 	CALL SUBOPT_0x77
                 ; 0000 036A     rehab_move(THUMB,EXTD,10);
00087e 940e 10fc 	CALL SUBOPT_0x32
000880 940e 12b9 	CALL SUBOPT_0x77
                 ; 0000 036B     rehab_move(THUMB,FLEX,55);
000882 940e 12d8 	CALL SUBOPT_0x7E
000884 e3e7      	LDI  R30,LOW(55)
000885 93ea      	ST   -Y,R30
000886 df36      	RCALL _rehab_move
                 ; 0000 036C     rehab_move(REST,FLEX,40);
000887 e0e3      	LDI  R30,LOW(3)
000888 93ea      	ST   -Y,R30
000889 e0e1      	LDI  R30,LOW(1)
00088a 93ea      	ST   -Y,R30
00088b 940e 12ca 	CALL SUBOPT_0x7B
                 ; 0000 036D     rehab_move(REST,EXTD,10);
00088d 940e 12d3 	CALL SUBOPT_0x7D
                 ; 0000 036E     rehab_move(THUMB,EXTD,10);
00088f 940e 10fc 	CALL SUBOPT_0x32
000891 940e 12b9 	CALL SUBOPT_0x77
                 ; 0000 036F     PORTC=0x00;
000893 e0e0      	LDI  R30,LOW(0)
000894 bbe5      	OUT  0x15,R30
                 ; 0000 0370     TERMINATE; // Turn interrupts off
000895 940e 107e 	CALL SUBOPT_0x1E
                 ; 0000 0371     Global_Sequence=0;
000897 93e0 06ed 	STS  _Global_Sequence,R30
                 ; 0000 0372     PORTC=0x00;
000899 e0e0      	LDI  R30,LOW(0)
00089a bbe5      	OUT  0x15,R30
                 ; 0000 0373     PORTB=0x00;
00089b bbe8      	OUT  0x18,R30
                 ; 0000 0374     OCR1AH=0x00;
00089c 940e 1083 	CALL SUBOPT_0x1F
                 ; 0000 0375     OCR1AL=0x00;
                 ; 0000 0376     OCR3AH=0x00;
00089e 940e 1286 	CALL SUBOPT_0x70
                 ; 0000 0377     OCR3AL=0x00;
                 ; 0000 0378     OCR1BH=0x00;
                 ; 0000 0379     OCR1BL=0x00;
                 ; 0000 037A }
0008a0 9508      	RET
                 ;
                 ;//
                 ;void test()
                 ; 0000 037E {
                 _test:
                 ; 0000 037F     unsigned char seq=0;
                 ; 0000 0380     int temp = 3000;
                 ; 0000 0381 
                 ; 0000 0382     delay_ms(50);
0008a1 940e 15ee 	CALL __SAVELOCR4
                 ;	seq -> R17
                 ;	temp -> R18,R19
0008a3 e010      	LDI  R17,0
                +
0008a4 eb28     +LDI R18 , LOW ( 3000 )
0008a5 e03b     +LDI R19 , HIGH ( 3000 )
                 	__GETWRN 18,19,3000
0008a6 940e 105e 	CALL SUBOPT_0x1B
                 ; 0000 0383     INITIATE;
0008a8 940e 1064 	CALL SUBOPT_0x1C
                 ; 0000 0384 
                 ; 0000 0385     //ICR1H=0x4F;
                 ; 0000 0386     //ICR1L=0xFF;
                 ; 0000 0387     //ICR3H=0x4F;
                 ; 0000 0388     //ICR3L=0xFF;
                 ; 0000 0389 
                 ; 0000 038A     OCR1BH=(50*50)>>8;
0008aa e0e9      	LDI  R30,LOW(9)
0008ab bde9      	OUT  0x29,R30
                 ; 0000 038B     OCR1BL=50*50;
0008ac ece4      	LDI  R30,LOW(196)
0008ad bde8      	OUT  0x28,R30
                 ; 0000 038C 
                 ; 0000 038D     lcd_clear();
0008ae 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 038E     lcd_gotoxy(0, 0);lcd_putsf("Valve!");
                +
0008b0 e2ed     +LDI R30 , LOW ( 2 * _0x0 + ( 43 ) )
0008b1 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 43 ) )
                 	__POINTW1FN _0x0,43
0008b2 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 038F 
                 ; 0000 0390     while(Middle_switch_off)
                 _0xCF:
0008b4 9b0a      	SBIS 0x1,2
0008b5 c037      	RJMP _0xD1
                 ; 0000 0391     {
                 ; 0000 0392         order(&seq); //Control signal of each sequence
0008b6 b7ed      	IN   R30,SPL
0008b7 b7fe      	IN   R31,SPH
0008b8 93fa      	ST   -Y,R31
0008b9 93ea      	ST   -Y,R30
0008ba 931f      	PUSH R17
0008bb dae7      	RCALL _order
0008bc 911f      	POP  R17
                 ; 0000 0393         Global_Sequence = seq;
0008bd 9310 06ed 	STS  _Global_Sequence,R17
                 ; 0000 0394 
                 ; 0000 0395         OCR1AH=800>>8;
0008bf 940e 112c 	CALL SUBOPT_0x38
                 ; 0000 0396         OCR1AL=800;
                 ; 0000 0397         OCR3AH=3000>>8;
0008c1 940e 12aa 	CALL SUBOPT_0x75
                 ; 0000 0398         OCR3AL=3000;
                 ; 0000 0399 
                 ; 0000 039A         lcd_gotoxy(0, 1);lcd_putsf("Inlet!");
0008c3 e0e0      	LDI  R30,LOW(0)
0008c4 940e 10c1 	CALL SUBOPT_0x27
                +
0008c6 e6e1     +LDI R30 , LOW ( 2 * _0x0 + ( 95 ) )
0008c7 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 95 ) )
                 	__POINTW1FN _0x0,95
0008c8 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 039B         arrived[seq]=1;
0008ca 940e 12dd 	CALL SUBOPT_0x7F
                 ; 0000 039C 
                 ; 0000 039D         /*
                 ; 0000 039E         if(Left_switch_on)  temp-=10;
                 ; 0000 039F         if(Right_switch_on)  temp+=10;
                 ; 0000 03A0         if(temp<0) temp=0;
                 ; 0000 03A1         if(temp>3500)  temp=3500;
                 ; 0000 03A2 
                 ; 0000 03A3         lcd_gotoxy(0, 1);
                 ; 0000 03A4         sprintf(lcd_data, "%d %", temp);
                 ; 0000 03A5         lcd_puts(lcd_data);
                 ; 0000 03A6         */
                 ; 0000 03A7 
                 ; 0000 03A8         if(Left_switch_on)
0008cc 9909      	SBIC 0x1,1
0008cd c009      	RJMP _0xD2
                 ; 0000 03A9         {
                 ; 0000 03AA             lcd_gotoxy(0, 1);lcd_putsf("Inlet!");
0008ce e0e0      	LDI  R30,LOW(0)
0008cf 940e 10c1 	CALL SUBOPT_0x27
                +
0008d1 e6e1     +LDI R30 , LOW ( 2 * _0x0 + ( 95 ) )
0008d2 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 95 ) )
                 	__POINTW1FN _0x0,95
0008d3 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 03AB             arrived[seq]=1;
0008d5 940e 12dd 	CALL SUBOPT_0x7F
                 ; 0000 03AC 
                 ; 0000 03AD         }
                 ; 0000 03AE 
                 ; 0000 03AF         if(Right_switch_on)
                 _0xD2:
0008d7 990b      	SBIC 0x1,3
0008d8 c011      	RJMP _0xD3
                 ; 0000 03B0         {
                 ; 0000 03B1             lcd_gotoxy(0, 1);lcd_putsf("Outlet!");
0008d9 e0e0      	LDI  R30,LOW(0)
0008da 940e 10c1 	CALL SUBOPT_0x27
                +
0008dc e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 102 ) )
0008dd e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 102 ) )
                 	__POINTW1FN _0x0,102
0008de 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 03B2             arrived[seq]=-1;
0008e0 2fe1      	MOV  R30,R17
0008e1 eeae      	LDI  R26,LOW(_arrived)
0008e2 e0b6      	LDI  R27,HIGH(_arrived)
0008e3 e0f0      	LDI  R31,0
0008e4 0fee      	LSL  R30
0008e5 1fff      	ROL  R31
0008e6 0fae      	ADD  R26,R30
0008e7 1fbf      	ADC  R27,R31
0008e8 940e 1241 	CALL SUBOPT_0x61
                 ; 0000 03B3 
                 ; 0000 03B4         }
                 ; 0000 03B5 
                 ; 0000 03B6 
                 ; 0000 03B7         /*
                 ; 0000 03B8         if(Left_switch_on)
                 ; 0000 03B9         {
                 ; 0000 03BA             if((E_flag[0]==1)&&(F_flag[0]==0))
                 ; 0000 03BB             {
                 ; 0000 03BC                 E_flag[0]=0;
                 ; 0000 03BD                 F_flag[0]=0;
                 ; 0000 03BE             }
                 ; 0000 03BF             else
                 ; 0000 03C0             {
                 ; 0000 03C1                 E_flag[0]=1;
                 ; 0000 03C2                 F_flag[0]=0;
                 ; 0000 03C3             }
                 ; 0000 03C4         }
                 ; 0000 03C5         if(Right_switch_on)
                 ; 0000 03C6         {
                 ; 0000 03C7             if((E_flag[0]==0)&&(F_flag[0]==1))
                 ; 0000 03C8             {
                 ; 0000 03C9                 E_flag[0]=0;
                 ; 0000 03CA                 F_flag[0]=0;
                 ; 0000 03CB             }
                 ; 0000 03CC             else
                 ; 0000 03CD             {
                 ; 0000 03CE                 E_flag[0]=0;
                 ; 0000 03CF                 F_flag[0]=1;
                 ; 0000 03D0             }
                 ; 0000 03D1         }
                 ; 0000 03D2 
                 ; 0000 03D3         disp(0,0);
                 ; 0000 03D4 
                 ; 0000 03D5         lcd_gotoxy(5, 1);
                 ; 0000 03D6         sprintf(lcd_data, "%d", E_flag[0]);
                 ; 0000 03D7         lcd_puts(lcd_data);
                 ; 0000 03D8         lcd_gotoxy(7, 1);
                 ; 0000 03D9         sprintf(lcd_data, "%d", F_flag[0]);
                 ; 0000 03DA         lcd_puts(lcd_data);
                 ; 0000 03DB 
                 ; 0000 03DC         if((E_flag[0]==0)&&(F_flag[0]==0))
                 ; 0000 03DD         {
                 ; 0000 03DE             OCR1AH=500>>8;
                 ; 0000 03DF             OCR1AL=500;
                 ; 0000 03E0             OCR3AH=500>>8;
                 ; 0000 03E1             OCR3AL=500;
                 ; 0000 03E2         }
                 ; 0000 03E3         if((E_flag[0]==1)&&(F_flag[0]==0))
                 ; 0000 03E4         {
                 ; 0000 03E5             OCR1AH=800>>8;
                 ; 0000 03E6             OCR1AL=800;
                 ; 0000 03E7             OCR3AH=200>>8;
                 ; 0000 03E8             OCR3AL=200;
                 ; 0000 03E9         }
                 ; 0000 03EA         if((E_flag[0]==0)&&(F_flag[0]==1))
                 ; 0000 03EB         {
                 ; 0000 03EC             OCR1AH=200>>8;
                 ; 0000 03ED             OCR1AL=200;
                 ; 0000 03EE             OCR3AH=800>>8;
                 ; 0000 03EF             OCR3AL=800;
                 ; 0000 03F0         }
                 ; 0000 03F1         */
                 ; 0000 03F2 
                 ; 0000 03F3         delay_ms(Ts);
                 _0xD3:
0008ea 940e 1164 	CALL SUBOPT_0x42
                 ; 0000 03F4     }
0008ec cfc7      	RJMP _0xCF
                 _0xD1:
                 ; 0000 03F5     TERMINATE;
0008ed 940e 107e 	CALL SUBOPT_0x1E
                 ; 0000 03F6     for(i=0;i<4;i++)    arrived[i]=0;
0008ef 940e 1137 	CALL SUBOPT_0x3A
                 _0xD5:
0008f1 940e 113c 	CALL SUBOPT_0x3B
0008f3 f44c      	BRGE _0xD6
0008f4 940e 1142 	CALL SUBOPT_0x3C
0008f6 940e 127f 	CALL SUBOPT_0x6F
0008f8 940e 1257 	CALL SUBOPT_0x66
0008fa 940e 114d 	CALL SUBOPT_0x3E
0008fc cff4      	RJMP _0xD5
                 _0xD6:
                 ; 0000 03F7 ICR1H=0x13;
0008fd 940e 12e6 	CALL SUBOPT_0x80
                 ; 0000 03F8     ICR1L=0x87;
                 ; 0000 03F9     ICR3H=0x13;
                 ; 0000 03FA     ICR3L=0x87;
                 ; 0000 03FB     Global_Sequence=0;
                 ; 0000 03FC     OCR1AH=0x00;
                 ; 0000 03FD     OCR1AL=0x00;
                 ; 0000 03FE     OCR3AH=0x00;
0008ff 940e 12f2 	CALL SUBOPT_0x81
                 ; 0000 03FF     OCR3AL=0x00;
                 ; 0000 0400     OCR1BH=0x00;
                 ; 0000 0401     OCR1BL=0x00;
                 ; 0000 0402     E_flag[0]=0;
000901 940e 12f8 	CALL SUBOPT_0x82
                 ; 0000 0403     F_flag[0]=0;
                 ; 0000 0404     PORTB=0x00;
                 ; 0000 0405     PORTC=0x00;
                 ; 0000 0406 }
000903 940e 15f5 	CALL __LOADLOCR4
000905 9624      	ADIW R28,4
000906 9508      	RET
                 ;
                 ;void test2()
                 ; 0000 0409 {
                 _test2:
                 ; 0000 040A     unsigned char seq=0;
                 ; 0000 040B     float ANG[4]={0};
                 ; 0000 040C     char ang_desired=15;
                 ; 0000 040D     int temp = 3500;
                 ; 0000 040E     float u=0;
                 ; 0000 040F     float error=0;
                 ; 0000 0410 
                 ; 0000 0411     delay_ms(50);
000907 9768      	SBIW R28,24
000908 e188      	LDI  R24,24
000909 e0a0      	LDI  R26,LOW(0)
00090a e0b0      	LDI  R27,HIGH(0)
00090b ede2      	LDI  R30,LOW(_0xD7*2)
00090c e0f0      	LDI  R31,HIGH(_0xD7*2)
00090d 940e 15fa 	CALL __INITLOCB
00090f 940e 15ee 	CALL __SAVELOCR4
                 ;	seq -> R17
                 ;	ANG -> Y+12
                 ;	ang_desired -> R16
                 ;	temp -> R18,R19
                 ;	u -> Y+8
                 ;	error -> Y+4
000911 940e 12fe 	CALL SUBOPT_0x83
                 ; 0000 0412     INITIATE;
000913 940e 1064 	CALL SUBOPT_0x1C
                 ; 0000 0413 
                 ; 0000 0414     OCR1BH=(99*50)>>8;
000915 940e 125c 	CALL SUBOPT_0x67
                 ; 0000 0415     OCR1BL=99*50;
                 ; 0000 0416 
                 ; 0000 0417     OCR1AH=temp>>8;
000917 940e 1303 	CALL SUBOPT_0x84
                 ; 0000 0418     OCR1AL=temp;
                 ; 0000 0419 
                 ; 0000 041A     lcd_clear();
                 ; 0000 041B 
                 ; 0000 041C     while(Middle_switch_off)
                 _0xD8:
000919 9b0a      	SBIS 0x1,2
00091a c10e      	RJMP _0xDA
                 ; 0000 041D     {
                 ; 0000 041E         order(&seq); //Control signal of each sequence
00091b b7ed      	IN   R30,SPL
00091c b7fe      	IN   R31,SPH
00091d 93fa      	ST   -Y,R31
00091e 93ea      	ST   -Y,R30
00091f 931f      	PUSH R17
000920 da82      	RCALL _order
000921 911f      	POP  R17
                 ; 0000 041F         Global_Sequence = seq;
000922 9310 06ed 	STS  _Global_Sequence,R17
                 ; 0000 0420         //Global_Sequence=0;
                 ; 0000 0421         mean_flex(seq,1);
000924 940e 126a 	CALL SUBOPT_0x69
                 ; 0000 0422         ANG[seq] = (float)(flex_max[seq]-flex_mean[seq])/((float)(flex_max[seq]-flex_min[seq]))*MAX_ANG;
000926 01cf      	MOVW R24,R30
000927 01bf      	MOVW R22,R30
000928 010f      	MOVW R0,R30
000929 01de      	MOVW R26,R28
00092a 961c      	ADIW R26,12
00092b 940e 116d 	CALL SUBOPT_0x44
00092d 93ff      	PUSH R31
00092e 93ef      	PUSH R30
00092f 940e 126d 	CALL SUBOPT_0x6A
000931 940e 1271 	CALL SUBOPT_0x6B
000933 940e 1275 	CALL SUBOPT_0x6C
000935 937f      	PUSH R23
000936 936f      	PUSH R22
000937 93ff      	PUSH R31
000938 93ef      	PUSH R30
000939 940e 1278 	CALL SUBOPT_0x6D
00093b 940e 1027 	CALL SUBOPT_0x12
00093d 940e 127c 	CALL SUBOPT_0x6E
00093f 940e 1275 	CALL SUBOPT_0x6C
000941 91af      	POP  R26
000942 91bf      	POP  R27
000943 918f      	POP  R24
000944 919f      	POP  R25
000945 940e 1185 	CALL SUBOPT_0x47
000947 91af      	POP  R26
000948 91bf      	POP  R27
000949 940e 15c2 	CALL __PUTDP1
                 ; 0000 0423 
                 ; 0000 0424         if(Left_switch_on)      ang_desired--;
00094b 9b09      	SBIS 0x1,1
00094c 5001      	SUBI R16,1
                 ; 0000 0425         if(Right_switch_on)     ang_desired++;
00094d 9b0b      	SBIS 0x1,3
00094e 5f0f      	SUBI R16,-1
                 ; 0000 0426 
                 ; 0000 0427         if(ang_desired<0)       ang_desired=0;
                 ; 0000 0428         if(ang_desired>40)      ang_desired=40;
00094f 3209      	CPI  R16,41
000950 f008      	BRLO _0xDE
000951 e208      	LDI  R16,LOW(40)
                 ; 0000 0429 
                 ; 0000 042A         error = ang_desired-ang_old[2];   //error : 0~90
                 _0xDE:
000952 940e 130a 	CALL SUBOPT_0x85
                +
000954 83ec     +STD Y + 4 , R30
000955 83fd     +STD Y + 4 + 1 , R31
000956 836e     +STD Y + 4 + 2 , R22
000957 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 ; 0000 042B         error_sum[2] += error;
000958 940e 130f 	CALL SUBOPT_0x86
                +
00095a 81ac     +LDD R26 , Y + 4
00095b 81bd     +LDD R27 , Y + 4 + 1
00095c 818e     +LDD R24 , Y + 4 + 2
00095d 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00095e 940e 1318 	CALL SUBOPT_0x87
                 ; 0000 042C         u = kp*error + ki*error_sum[2]*((float)(Ts/1000.)) + kd*(error-error_old[2])/((float)(Ts/1000.));//Control value for OCR1A,OCR3A
                +
000960 81ec     +LDD R30 , Y + 4
000961 81fd     +LDD R31 , Y + 4 + 1
000962 816e     +LDD R22 , Y + 4 + 2
000963 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000964 91a0 06f6 	LDS  R26,_kp
000966 91b0 06f7 	LDS  R27,_kp+1
000968 9180 06f8 	LDS  R24,_kp+2
00096a 9190 06f9 	LDS  R25,_kp+3
00096c 940e 149c 	CALL __MULF12
00096e 937f      	PUSH R23
00096f 936f      	PUSH R22
000970 93ff      	PUSH R31
000971 93ef      	PUSH R30
000972 940e 130f 	CALL SUBOPT_0x86
000974 940e 11e8 	CALL SUBOPT_0x57
000976 91af      	POP  R26
000977 91bf      	POP  R27
000978 918f      	POP  R24
000979 919f      	POP  R25
00097a 940e 144c 	CALL __ADDF12
00097c 937f      	PUSH R23
00097d 936f      	PUSH R22
00097e 93ff      	PUSH R31
00097f 93ef      	PUSH R30
000980 940e 1323 	CALL SUBOPT_0x88
                +
000982 81ac     +LDD R26 , Y + 4
000983 81bd     +LDD R27 , Y + 4 + 1
000984 818e     +LDD R24 , Y + 4 + 2
000985 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000986 940e 11fe 	CALL SUBOPT_0x59
000988 91af      	POP  R26
000989 91bf      	POP  R27
00098a 918f      	POP  R24
00098b 919f      	POP  R25
00098c 940e 144c 	CALL __ADDF12
                +
00098e 87e8     +STD Y + 8 , R30
00098f 87f9     +STD Y + 8 + 1 , R31
000990 876a     +STD Y + 8 + 2 , R22
000991 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 ; 0000 042D         //u=4999-u;
                 ; 0000 042E         error_old[2]=error;
                +
000992 81ec     +LDD R30 , Y + 4
000993 81fd     +LDD R31 , Y + 4 + 1
000994 816e     +LDD R22 , Y + 4 + 2
000995 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000996 940e 132c 	CALL SUBOPT_0x89
                 ; 0000 042F         ang_old[2]= ANG[2];
                +
000998 89ec     +LDD R30 , Y + 20
000999 89fd     +LDD R31 , Y + 20 + 1
00099a 896e     +LDD R22 , Y + 20 + 2
00099b 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
00099c 940e 13d9 	CALL __CFD1U
00099e 93ec      	ST   X,R30
                 ; 0000 0430 
                 ; 0000 0431         //Saturation condition...
                 ; 0000 0432         if(u>UPPER)       u=UPPER;
                +
00099f 85a8     +LDD R26 , Y + 8
0009a0 85b9     +LDD R27 , Y + 8 + 1
0009a1 858a     +LDD R24 , Y + 8 + 2
0009a2 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
0009a3 940e 1226 	CALL SUBOPT_0x5D
0009a5 940e 152f 	CALL __CMPF12
0009a7 f009      	BREQ PC+2
0009a8 f410      	BRCC PC+3
0009a9 940c 09ae 	JMP  _0xDF
0009ab 940e 1226 	CALL SUBOPT_0x5D
0009ad c00b      	RJMP _0x139
                 ; 0000 0433         else if(u<LOWER)  u=LOWER;
                 _0xDF:
                +
0009ae 85a8     +LDD R26 , Y + 8
0009af 85b9     +LDD R27 , Y + 8 + 1
0009b0 858a     +LDD R24 , Y + 8 + 2
0009b1 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
0009b2 940e 1233 	CALL SUBOPT_0x5F
0009b4 940e 152f 	CALL __CMPF12
0009b6 f430      	BRSH _0xE1
0009b7 940e 1233 	CALL SUBOPT_0x5F
                 _0x139:
                +
0009b9 87e8     +STD Y + 8 , R30
0009ba 87f9     +STD Y + 8 + 1 , R31
0009bb 876a     +STD Y + 8 + 2 , R22
0009bc 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 ; 0000 0434 
                 ; 0000 0435         lcd_gotoxy(0, 0);
                 _0xE1:
0009bd 940e 10fc 	CALL SUBOPT_0x32
0009bf 940e 1337 	CALL SUBOPT_0x8A
                 ; 0000 0436         sprintf(lcd_data, "%2d %", ang_desired);
0009c1 940e 115e 	CALL SUBOPT_0x41
                 ; 0000 0437         lcd_puts(lcd_data);
                 ; 0000 0438 
                 ; 0000 0439         lcd_gotoxy(2, 0);
0009c3 940e 10eb 	CALL SUBOPT_0x2F
0009c5 940e 1337 	CALL SUBOPT_0x8A
                 ; 0000 043A         sprintf(lcd_data, "%2d %", (int)ANG[2]);
                +
0009c7 e3ec     +LDI R30 , LOW ( 2 * _0x0 + ( 58 ) )
0009c8 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 58 ) )
                 	__POINTW1FN _0x0,58
0009c9 93fa      	ST   -Y,R31
0009ca 93ea      	ST   -Y,R30
                +
0009cb 8de8     +LDD R30 , Y + 24
0009cc 8df9     +LDD R31 , Y + 24 + 1
0009cd 8d6a     +LDD R22 , Y + 24 + 2
0009ce 8d7b     +LDD R23 , Y + 24 + 3
                 	__GETD1S 24
0009cf 940e 1197 	CALL SUBOPT_0x49
                 ; 0000 043B         lcd_puts(lcd_data);
                 ; 0000 043C 
                 ; 0000 043D         lcd_gotoxy(4, 0);
0009d1 940e 10f0 	CALL SUBOPT_0x30
                 ; 0000 043E         sprintf(lcd_data, "%4d %", (int)u);
0009d3 940e 1159 	CALL SUBOPT_0x40
                +
0009d5 e7e0     +LDI R30 , LOW ( 2 * _0x0 + ( 110 ) )
0009d6 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 110 ) )
                 	__POINTW1FN _0x0,110
0009d7 93fa      	ST   -Y,R31
0009d8 93ea      	ST   -Y,R30
                +
0009d9 85ec     +LDD R30 , Y + 12
0009da 85fd     +LDD R31 , Y + 12 + 1
0009db 856e     +LDD R22 , Y + 12 + 2
0009dc 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0009dd 940e 1197 	CALL SUBOPT_0x49
                 ; 0000 043F         lcd_puts(lcd_data);
                 ; 0000 0440 
                 ; 0000 0441         for(i=0;i<4;i++)    disp(i*2,i);
0009df e0e0      	LDI  R30,LOW(0)
0009e0 940e 1137 	CALL SUBOPT_0x3A
                 _0xE3:
0009e2 940e 113c 	CALL SUBOPT_0x3B
0009e4 f42c      	BRGE _0xE4
0009e5 940e 1261 	CALL SUBOPT_0x68
0009e7 940e 114d 	CALL SUBOPT_0x3E
0009e9 cff8      	RJMP _0xE3
                 _0xE4:
                 ; 0000 0443 if(ANG[2]>(ang_desired+2))
0009ea 940e 119f 	CALL SUBOPT_0x4B
0009ec 940e 133a 	CALL SUBOPT_0x8B
0009ee f009      	BREQ PC+2
0009ef f410      	BRCC PC+3
0009f0 940c 0a01 	JMP  _0xE5
                 ; 0000 0444         {
                 ; 0000 0445             //Extension
                 ; 0000 0446             TIMSK=0x14;
0009f2 940e 1064 	CALL SUBOPT_0x1C
                 ; 0000 0447             ETIMSK=0x14;
                 ; 0000 0448             OCR3AH=(int)u>>8;
0009f4 940e 1346 	CALL SUBOPT_0x8C
0009f6 940e 124b 	CALL SUBOPT_0x63
0009f8 93e0 0087 	STS  135,R30
                 ; 0000 0449             OCR3AL=(int)u;
0009fa 940e 1346 	CALL SUBOPT_0x8C
0009fc 940e 13db 	CALL __CFD1
0009fe 93e0 0086 	STS  134,R30
                 ; 0000 044A         }
                 ; 0000 044B         else if(ANG[2]<(ang_desired-2))
000a00 c025      	RJMP _0xE6
                 _0xE5:
000a01 940e 119f 	CALL SUBOPT_0x4B
000a03 940e 134b 	CALL SUBOPT_0x8D
000a05 f470      	BRSH _0xE7
                 ; 0000 044C         {
                 ; 0000 044D             //Flextion
                 ; 0000 044E             TIMSK=0x14;
000a06 e1e4      	LDI  R30,LOW(20)
000a07 940e 1357 	CALL SUBOPT_0x8E
                 ; 0000 044F             ETIMSK = 0x00;
                 ; 0000 0450             OCR1AH=(int)u>>8;
000a09 940e 1346 	CALL SUBOPT_0x8C
000a0b 940e 124b 	CALL SUBOPT_0x63
000a0d bdeb      	OUT  0x2B,R30
                 ; 0000 0451             OCR1AL=(int)u;
000a0e 940e 1346 	CALL SUBOPT_0x8C
000a10 940e 13db 	CALL __CFD1
000a12 bdea      	OUT  0x2A,R30
                 ; 0000 0452         }
                 ; 0000 0453         else if(ANG[2]>=(ang_desired-2) && ANG[2]<=(ang_desired+2))
000a13 c012      	RJMP _0xE8
                 _0xE7:
000a14 940e 119f 	CALL SUBOPT_0x4B
000a16 940e 134b 	CALL SUBOPT_0x8D
000a18 f048      	BRLO _0xEA
000a19 940e 119f 	CALL SUBOPT_0x4B
000a1b 940e 133a 	CALL SUBOPT_0x8B
000a1d f019      	BREQ PC+4
000a1e f010      	BRCS PC+3
000a1f 940c 0a22 	JMP  _0xEA
000a21 c001      	RJMP _0xEB
                 _0xEA:
000a22 c003      	RJMP _0xE9
                 _0xEB:
                 ; 0000 0454         {
                 ; 0000 0455             //Hold
                 ; 0000 0456             TIMSK=0x00;
000a23 e0e0      	LDI  R30,LOW(0)
000a24 940e 1357 	CALL SUBOPT_0x8E
                 ; 0000 0457             ETIMSK = 0x00;
                 ; 0000 0458         }
                 ; 0000 0459 
                 ; 0000 045A         /*
                 ; 0000 045B         if(Left_switch_on)
                 ; 0000 045C         {
                 ; 0000 045D             if((E_flag[0]==1)&&(F_flag[0]==0))
                 ; 0000 045E             {
                 ; 0000 045F                 E_flag[0]=0;
                 ; 0000 0460                 F_flag[0]=0;
                 ; 0000 0461             }
                 ; 0000 0462             else
                 ; 0000 0463             {
                 ; 0000 0464                 E_flag[0]=1;
                 ; 0000 0465                 F_flag[0]=0;
                 ; 0000 0466             }
                 ; 0000 0467         }
                 ; 0000 0468         if(Right_switch_on)
                 ; 0000 0469         {
                 ; 0000 046A             if((E_flag[0]==0)&&(F_flag[0]==1))
                 ; 0000 046B             {
                 ; 0000 046C                 E_flag[0]=0;
                 ; 0000 046D                 F_flag[0]=0;
                 ; 0000 046E             }
                 ; 0000 046F             else
                 ; 0000 0470             {
                 ; 0000 0471                 E_flag[0]=0;
                 ; 0000 0472                 F_flag[0]=1;
                 ; 0000 0473             }
                 ; 0000 0474         }
                 ; 0000 0475 
                 ; 0000 0476         disp(0,0);
                 ; 0000 0477 
                 ; 0000 0478         lcd_gotoxy(5, 1);
                 ; 0000 0479         sprintf(lcd_data, "%d", E_flag[0]);
                 ; 0000 047A         lcd_puts(lcd_data);
                 ; 0000 047B         lcd_gotoxy(7, 1);
                 ; 0000 047C         sprintf(lcd_data, "%d", F_flag[0]);
                 ; 0000 047D         lcd_puts(lcd_data);
                 ; 0000 047E 
                 ; 0000 047F         if((E_flag[0]==0)&&(F_flag[0]==0))
                 ; 0000 0480         {
                 ; 0000 0481             OCR1AH=500>>8;
                 ; 0000 0482             OCR1AL=500;
                 ; 0000 0483             OCR3AH=500>>8;
                 ; 0000 0484             OCR3AL=500;
                 ; 0000 0485         }
                 ; 0000 0486         if((E_flag[0]==1)&&(F_flag[0]==0))
                 ; 0000 0487         {
                 ; 0000 0488             OCR1AH=800>>8;
                 ; 0000 0489             OCR1AL=800;
                 ; 0000 048A             OCR3AH=200>>8;
                 ; 0000 048B             OCR3AL=200;
                 ; 0000 048C         }
                 ; 0000 048D         if((E_flag[0]==0)&&(F_flag[0]==1))
                 ; 0000 048E         {
                 ; 0000 048F             OCR1AH=200>>8;
                 ; 0000 0490             OCR1AL=200;
                 ; 0000 0491             OCR3AH=800>>8;
                 ; 0000 0492             OCR3AL=800;
                 ; 0000 0493         }
                 ; 0000 0494         */
                 ; 0000 0495 
                 ; 0000 0496         delay_ms(100);
                 _0xE9:
                 _0xE8:
                 _0xE6:
000a26 940e 103d 	CALL SUBOPT_0x15
                 ; 0000 0497     }
000a28 cef0      	RJMP _0xD8
                 _0xDA:
                 ; 0000 0498     TERMINATE;
000a29 e0e0      	LDI  R30,LOW(0)
000a2a 940e 1357 	CALL SUBOPT_0x8E
                 ; 0000 0499     ICR1H=0x13;
000a2c 940e 12e6 	CALL SUBOPT_0x80
                 ; 0000 049A     ICR1L=0x87;
                 ; 0000 049B     ICR3H=0x13;
                 ; 0000 049C     ICR3L=0x87;
                 ; 0000 049D     Global_Sequence=0;
                 ; 0000 049E     OCR1AH=0x00;
                 ; 0000 049F     OCR1AL=0x00;
                 ; 0000 04A0     OCR3AH=0x00;
000a2e 940e 12f2 	CALL SUBOPT_0x81
                 ; 0000 04A1     OCR3AL=0x00;
                 ; 0000 04A2     OCR1BH=0x00;
                 ; 0000 04A3     OCR1BL=0x00;
                 ; 0000 04A4     E_flag[0]=0;
000a30 940e 12f8 	CALL SUBOPT_0x82
                 ; 0000 04A5     F_flag[0]=0;
                 ; 0000 04A6     PORTB=0x00;
                 ; 0000 04A7     PORTC=0x00;
                 ; 0000 04A8 }
000a32 940e 15f5 	CALL __LOADLOCR4
000a34 966c      	ADIW R28,28
000a35 9508      	RET
                 ;
                 ;void test3()
                 ; 0000 04AB {
                 _test3:
                 ; 0000 04AC     unsigned char seq=0;
                 ; 0000 04AD     float ANG[4]={0};
                 ; 0000 04AE     char ang_desired=15;
                 ; 0000 04AF     int temp = 3500;
                 ; 0000 04B0     int E_OR_F;
                 ; 0000 04B1     float u=0;
                 ; 0000 04B2     float error=0;
                 ; 0000 04B3 
                 ; 0000 04B4     delay_ms(50);
000a36 9768      	SBIW R28,24
000a37 e188      	LDI  R24,24
000a38 e0a0      	LDI  R26,LOW(0)
000a39 e0b0      	LDI  R27,HIGH(0)
000a3a eeea      	LDI  R30,LOW(_0xEC*2)
000a3b e0f0      	LDI  R31,HIGH(_0xEC*2)
000a3c 940e 15fa 	CALL __INITLOCB
000a3e 940e 15ec 	CALL __SAVELOCR6
                 ;	seq -> R17
                 ;	ANG -> Y+14
                 ;	ang_desired -> R16
                 ;	temp -> R18,R19
                 ;	E_OR_F -> R20,R21
                 ;	u -> Y+10
                 ;	error -> Y+6
000a40 940e 12fe 	CALL SUBOPT_0x83
                 ; 0000 04B5     INITIATE;
000a42 940e 1064 	CALL SUBOPT_0x1C
                 ; 0000 04B6 
                 ; 0000 04B7     OCR1BH=(99*50)>>8;
000a44 940e 125c 	CALL SUBOPT_0x67
                 ; 0000 04B8     OCR1BL=99*50;
                 ; 0000 04B9 
                 ; 0000 04BA     OCR1AH=temp>>8;
000a46 940e 1303 	CALL SUBOPT_0x84
                 ; 0000 04BB     OCR1AL=temp;
                 ; 0000 04BC 
                 ; 0000 04BD     lcd_clear();
                 ; 0000 04BE 
                 ; 0000 04BF     while(Middle_switch_off)
                 _0xED:
000a48 9b0a      	SBIS 0x1,2
000a49 c12b      	RJMP _0xEF
                 ; 0000 04C0     {
                 ; 0000 04C1         order(&seq); //Control signal of each sequence
000a4a b7ed      	IN   R30,SPL
000a4b b7fe      	IN   R31,SPH
000a4c 93fa      	ST   -Y,R31
000a4d 93ea      	ST   -Y,R30
000a4e 931f      	PUSH R17
000a4f d953      	RCALL _order
000a50 911f      	POP  R17
                 ; 0000 04C2         Global_Sequence = seq;
000a51 9310 06ed 	STS  _Global_Sequence,R17
                 ; 0000 04C3         //Global_Sequence=2;
                 ; 0000 04C4         mean_flex(seq,1);
000a53 940e 126a 	CALL SUBOPT_0x69
                 ; 0000 04C5         ANG[seq] = (float)(flex_max[seq]-flex_mean[seq])/((float)(flex_max[seq]-flex_min[seq]))*MAX_ANG;
000a55 01cf      	MOVW R24,R30
000a56 01bf      	MOVW R22,R30
000a57 010f      	MOVW R0,R30
000a58 01de      	MOVW R26,R28
000a59 961e      	ADIW R26,14
000a5a 940e 116d 	CALL SUBOPT_0x44
000a5c 93ff      	PUSH R31
000a5d 93ef      	PUSH R30
000a5e 940e 126d 	CALL SUBOPT_0x6A
000a60 940e 1271 	CALL SUBOPT_0x6B
000a62 940e 1275 	CALL SUBOPT_0x6C
000a64 937f      	PUSH R23
000a65 936f      	PUSH R22
000a66 93ff      	PUSH R31
000a67 93ef      	PUSH R30
000a68 940e 1278 	CALL SUBOPT_0x6D
000a6a 940e 1027 	CALL SUBOPT_0x12
000a6c 940e 127c 	CALL SUBOPT_0x6E
000a6e 940e 1275 	CALL SUBOPT_0x6C
000a70 91af      	POP  R26
000a71 91bf      	POP  R27
000a72 918f      	POP  R24
000a73 919f      	POP  R25
000a74 940e 1185 	CALL SUBOPT_0x47
000a76 91af      	POP  R26
000a77 91bf      	POP  R27
000a78 940e 15c2 	CALL __PUTDP1
                 ; 0000 04C6 
                 ; 0000 04C7         if(Left_switch_on)      ang_desired--;
000a7a 9b09      	SBIS 0x1,1
000a7b 5001      	SUBI R16,1
                 ; 0000 04C8         if(Right_switch_on)     ang_desired++;
000a7c 9b0b      	SBIS 0x1,3
000a7d 5f0f      	SUBI R16,-1
                 ; 0000 04C9 
                 ; 0000 04CA         if(ang_desired<0)       ang_desired=0;
                 ; 0000 04CB         if(ang_desired>MAX_ANG)      ang_desired=MAX_ANG;
000a7e 330d      	CPI  R16,61
000a7f f008      	BRLO _0xF3
000a80 e30c      	LDI  R16,LOW(60)
                 ; 0000 04CC 
                 ; 0000 04CD         E_OR_F = ((E_flag[2]?-1:1)+(F_flag[2]?1:-1))/2;//Extension:-1, Flextion:1, Do noting:0
                 _0xF3:
                +
000a81 91e0 06e7+LDS R30 , _E_flag + ( 2 )
                 	__GETB1MN _E_flag,2
000a83 e0f0      	LDI  R31,0
000a84 9730      	SBIW R30,0
000a85 f019      	BREQ _0xF4
000a86 efef      	LDI  R30,LOW(65535)
000a87 efff      	LDI  R31,HIGH(65535)
000a88 c002      	RJMP _0xF5
                 _0xF4:
000a89 e0e1      	LDI  R30,LOW(1)
000a8a e0f0      	LDI  R31,HIGH(1)
                 _0xF5:
000a8b 01df      	MOVW R26,R30
                +
000a8c 91e0 06eb+LDS R30 , _F_flag + ( 2 )
                 	__GETB1MN _F_flag,2
000a8e e0f0      	LDI  R31,0
000a8f 9730      	SBIW R30,0
000a90 f019      	BREQ _0xF7
000a91 e0e1      	LDI  R30,LOW(1)
000a92 e0f0      	LDI  R31,HIGH(1)
000a93 c002      	RJMP _0xF8
                 _0xF7:
000a94 efef      	LDI  R30,LOW(65535)
000a95 efff      	LDI  R31,HIGH(65535)
                 _0xF8:
000a96 940e 11ae 	CALL SUBOPT_0x4F
000a98 01af      	MOVW R20,R30
                 ; 0000 04CE         ang_desired = ANG[2]+(E_OR_F*delta_ang);//Ext:Bend-delta_ang, Flex:Bend+delta_ang, Stay:Bend
000a99 01fa      	MOVW R30,R20
000a9a 0fee      	LSL  R30
000a9b 1fff      	ROL  R31
000a9c 940e 135c 	CALL SUBOPT_0x8F
000a9e 940e 144c 	CALL __ADDF12
000aa0 940e 13d9 	CALL __CFD1U
000aa2 2f0e      	MOV  R16,R30
                 ; 0000 04CF         error = ang_desired-ang_old[2];   //error : 0~90
000aa3 940e 130a 	CALL SUBOPT_0x85
                +
000aa5 83ee     +STD Y + 6 , R30
000aa6 83ff     +STD Y + 6 + 1 , R31
000aa7 8768     +STD Y + 6 + 2 , R22
000aa8 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
                 ; 0000 04D0         error_sum[2] += error;
000aa9 940e 130f 	CALL SUBOPT_0x86
000aab 940e 121c 	CALL SUBOPT_0x5B
000aad 940e 1318 	CALL SUBOPT_0x87
                 ; 0000 04D1         u = kp*error + ki*error_sum[2]*((float)(Ts/1000.)) + kd*(error-error_old[2])/((float)(Ts/1000.));//Control value for OCR1A,OCR3A
000aaf 940e 11d4 	CALL SUBOPT_0x55
000ab1 937f      	PUSH R23
000ab2 936f      	PUSH R22
000ab3 93ff      	PUSH R31
000ab4 93ef      	PUSH R30
000ab5 940e 130f 	CALL SUBOPT_0x86
000ab7 940e 11e8 	CALL SUBOPT_0x57
000ab9 91af      	POP  R26
000aba 91bf      	POP  R27
000abb 918f      	POP  R24
000abc 919f      	POP  R25
000abd 940e 144c 	CALL __ADDF12
000abf 937f      	PUSH R23
000ac0 936f      	PUSH R22
000ac1 93ff      	PUSH R31
000ac2 93ef      	PUSH R30
000ac3 940e 1323 	CALL SUBOPT_0x88
000ac5 940e 121c 	CALL SUBOPT_0x5B
000ac7 940e 11fe 	CALL SUBOPT_0x59
000ac9 91af      	POP  R26
000aca 91bf      	POP  R27
000acb 918f      	POP  R24
000acc 919f      	POP  R25
000acd 940e 1215 	CALL SUBOPT_0x5A
                 ; 0000 04D2         //u=4999-u;
                 ; 0000 04D3         error_old[2]=error;
                +
000acf 81ee     +LDD R30 , Y + 6
000ad0 81ff     +LDD R31 , Y + 6 + 1
000ad1 8568     +LDD R22 , Y + 6 + 2
000ad2 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000ad3 940e 132c 	CALL SUBOPT_0x89
                 ; 0000 04D4         ang_old[2]= ANG[2];
                +
000ad5 89ee     +LDD R30 , Y + 22
000ad6 89ff     +LDD R31 , Y + 22 + 1
000ad7 8d68     +LDD R22 , Y + 22 + 2
000ad8 8d79     +LDD R23 , Y + 22 + 3
                 	__GETD1S 22
000ad9 940e 13d9 	CALL __CFD1U
000adb 93ec      	ST   X,R30
                 ; 0000 04D5 
                 ; 0000 04D6         //Saturation condition...
                 ; 0000 04D7         if(u>UPPER)       u=UPPER;
000adc 940e 1221 	CALL SUBOPT_0x5C
000ade 940e 1226 	CALL SUBOPT_0x5D
000ae0 940e 152f 	CALL __CMPF12
000ae2 f009      	BREQ PC+2
000ae3 f410      	BRCC PC+3
000ae4 940c 0ae9 	JMP  _0xFA
000ae6 940e 1226 	CALL SUBOPT_0x5D
000ae8 c005      	RJMP _0x13A
                 ; 0000 04D8         else if(u<LOWER)  u=LOWER;
                 _0xFA:
000ae9 940e 122b 	CALL SUBOPT_0x5E
000aeb f430      	BRSH _0xFC
000aec 940e 1233 	CALL SUBOPT_0x5F
                 _0x13A:
                +
000aee 87ea     +STD Y + 10 , R30
000aef 87fb     +STD Y + 10 + 1 , R31
000af0 876c     +STD Y + 10 + 2 , R22
000af1 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
                 ; 0000 04D9 
                 ; 0000 04DA         lcd_gotoxy(0, 0);
                 _0xFC:
000af2 940e 10fc 	CALL SUBOPT_0x32
000af4 940e 1337 	CALL SUBOPT_0x8A
                 ; 0000 04DB         sprintf(lcd_data, "%d %", ang_desired);
000af6 940e 119a 	CALL SUBOPT_0x4A
000af8 2fe0      	MOV  R30,R16
000af9 940e 0ffb 	CALL SUBOPT_0xE
                 ; 0000 04DC         lcd_puts(lcd_data);
                 ; 0000 04DD 
                 ; 0000 04DE         lcd_gotoxy(6, 0);
000afb 940e 10f6 	CALL SUBOPT_0x31
                 ; 0000 04DF         sprintf(lcd_data, "%d %", (int)ANG[2]);
000afd 940e 1159 	CALL SUBOPT_0x40
000aff 940e 119a 	CALL SUBOPT_0x4A
                +
000b01 8dea     +LDD R30 , Y + 26
000b02 8dfb     +LDD R31 , Y + 26 + 1
000b03 8d6c     +LDD R22 , Y + 26 + 2
000b04 8d7d     +LDD R23 , Y + 26 + 3
                 	__GETD1S 26
000b05 940e 1197 	CALL SUBOPT_0x49
                 ; 0000 04E0         lcd_puts(lcd_data);
                 ; 0000 04E1 
                 ; 0000 04E2         lcd_gotoxy(4, 0);
000b07 940e 10f0 	CALL SUBOPT_0x30
                 ; 0000 04E3         if(E_OR_F==-1)lcd_putsf("E");
000b09 efef      	LDI  R30,LOW(65535)
000b0a efff      	LDI  R31,HIGH(65535)
000b0b 17e4      	CP   R30,R20
000b0c 07f5      	CPC  R31,R21
000b0d f411      	BRNE _0xFD
000b0e 940e 10c9 	CALL SUBOPT_0x29
                 ; 0000 04E4         if(E_OR_F==0)lcd_putsf("-");
                 _0xFD:
000b10 2e04      	MOV  R0,R20
000b11 2a05      	OR   R0,R21
000b12 f411      	BRNE _0xFE
000b13 940e 10e1 	CALL SUBOPT_0x2D
                 ; 0000 04E5         if(E_OR_F==1)lcd_putsf("F");
                 _0xFE:
000b15 e0e1      	LDI  R30,LOW(1)
000b16 e0f0      	LDI  R31,HIGH(1)
000b17 17e4      	CP   R30,R20
000b18 07f5      	CPC  R31,R21
000b19 f411      	BRNE _0xFF
000b1a 940e 10cf 	CALL SUBOPT_0x2A
                 ; 0000 04E6 
                 ; 0000 04E7 
                 ; 0000 04E8         for(i=0;i<4;i++)    disp(i*2,i);
                 _0xFF:
000b1c e0e0      	LDI  R30,LOW(0)
000b1d 940e 1137 	CALL SUBOPT_0x3A
                 _0x101:
000b1f 940e 113c 	CALL SUBOPT_0x3B
000b21 f42c      	BRGE _0x102
000b22 940e 1261 	CALL SUBOPT_0x68
000b24 940e 114d 	CALL SUBOPT_0x3E
000b26 cff8      	RJMP _0x101
                 _0x102:
                 ; 0000 04EA if(ANG[2]>(ang_desired+1))
000b27 940e 119f 	CALL SUBOPT_0x4B
000b29 9631      	ADIW R30,1
000b2a 940e 135c 	CALL SUBOPT_0x8F
000b2c 940e 152f 	CALL __CMPF12
000b2e f009      	BREQ PC+2
000b2f f410      	BRCC PC+3
000b30 940c 0b42 	JMP  _0x103
                 ; 0000 04EB         {
                 ; 0000 04EC             //Extension
                 ; 0000 04ED             TIMSK=0x00;
000b32 e0e0      	LDI  R30,LOW(0)
000b33 bfe7      	OUT  0x37,R30
                 ; 0000 04EE             ETIMSK=0x14;
000b34 e1e4      	LDI  R30,LOW(20)
000b35 93e0 007d 	STS  125,R30
                 ; 0000 04EF             OCR3AH=(int)u>>8;
000b37 940e 1255 	CALL SUBOPT_0x65
000b39 93e0 0087 	STS  135,R30
                 ; 0000 04F0             OCR3AL=(int)u;
000b3b 940e 1246 	CALL SUBOPT_0x62
000b3d 940e 13db 	CALL __CFD1
000b3f 93e0 0086 	STS  134,R30
                 ; 0000 04F1         }
                 ; 0000 04F2         else if(ANG[2]<(ang_desired-ANG_th))
000b41 c02c      	RJMP _0x104
                 _0x103:
000b42 940e 119f 	CALL SUBOPT_0x4B
000b44 9731      	SBIW R30,1
000b45 940e 135c 	CALL SUBOPT_0x8F
000b47 940e 152f 	CALL __CMPF12
000b49 f460      	BRSH _0x105
                 ; 0000 04F3         {
                 ; 0000 04F4             //Flextion
                 ; 0000 04F5             TIMSK=0x14;
000b4a e1e4      	LDI  R30,LOW(20)
000b4b 940e 1357 	CALL SUBOPT_0x8E
                 ; 0000 04F6             ETIMSK = 0x00;
                 ; 0000 04F7             OCR1AH=(int)u>>8;
000b4d 940e 1255 	CALL SUBOPT_0x65
000b4f bdeb      	OUT  0x2B,R30
                 ; 0000 04F8             OCR1AL=(int)u;
000b50 940e 1246 	CALL SUBOPT_0x62
000b52 940e 13db 	CALL __CFD1
000b54 bdea      	OUT  0x2A,R30
                 ; 0000 04F9         }
                 ; 0000 04FA         else if((ANG[2]>=(ang_desired-ANG_th)) && (ANG[2]<=(ang_desired+ANG_th)))
000b55 c018      	RJMP _0x106
                 _0x105:
000b56 940e 119f 	CALL SUBOPT_0x4B
000b58 9731      	SBIW R30,1
000b59 940e 135c 	CALL SUBOPT_0x8F
000b5b 940e 152f 	CALL __CMPF12
000b5d f060      	BRLO _0x108
000b5e 940e 119f 	CALL SUBOPT_0x4B
000b60 9631      	ADIW R30,1
000b61 940e 135c 	CALL SUBOPT_0x8F
000b63 940e 152f 	CALL __CMPF12
000b65 f019      	BREQ PC+4
000b66 f010      	BRCS PC+3
000b67 940c 0b6a 	JMP  _0x108
000b69 c001      	RJMP _0x109
                 _0x108:
000b6a c003      	RJMP _0x107
                 _0x109:
                 ; 0000 04FB         {
                 ; 0000 04FC             //Hold
                 ; 0000 04FD             TIMSK=0x00;
000b6b e0e0      	LDI  R30,LOW(0)
000b6c 940e 1357 	CALL SUBOPT_0x8E
                 ; 0000 04FE             ETIMSK = 0x00;
                 ; 0000 04FF         }
                 ; 0000 0500 
                 ; 0000 0501         /*
                 ; 0000 0502         if(Left_switch_on)
                 ; 0000 0503         {
                 ; 0000 0504             if((E_flag[0]==1)&&(F_flag[0]==0))
                 ; 0000 0505             {
                 ; 0000 0506                 E_flag[0]=0;
                 ; 0000 0507                 F_flag[0]=0;
                 ; 0000 0508             }
                 ; 0000 0509             else
                 ; 0000 050A             {
                 ; 0000 050B                 E_flag[0]=1;
                 ; 0000 050C                 F_flag[0]=0;
                 ; 0000 050D             }
                 ; 0000 050E         }
                 ; 0000 050F         if(Right_switch_on)
                 ; 0000 0510         {
                 ; 0000 0511             if((E_flag[0]==0)&&(F_flag[0]==1))
                 ; 0000 0512             {
                 ; 0000 0513                 E_flag[0]=0;
                 ; 0000 0514                 F_flag[0]=0;
                 ; 0000 0515             }
                 ; 0000 0516             else
                 ; 0000 0517             {
                 ; 0000 0518                 E_flag[0]=0;
                 ; 0000 0519                 F_flag[0]=1;
                 ; 0000 051A             }
                 ; 0000 051B         }
                 ; 0000 051C 
                 ; 0000 051D         disp(0,0);
                 ; 0000 051E 
                 ; 0000 051F         lcd_gotoxy(5, 1);
                 ; 0000 0520         sprintf(lcd_data, "%d", E_flag[0]);
                 ; 0000 0521         lcd_puts(lcd_data);
                 ; 0000 0522         lcd_gotoxy(7, 1);
                 ; 0000 0523         sprintf(lcd_data, "%d", F_flag[0]);
                 ; 0000 0524         lcd_puts(lcd_data);
                 ; 0000 0525 
                 ; 0000 0526         if((E_flag[0]==0)&&(F_flag[0]==0))
                 ; 0000 0527         {
                 ; 0000 0528             OCR1AH=500>>8;
                 ; 0000 0529             OCR1AL=500;
                 ; 0000 052A             OCR3AH=500>>8;
                 ; 0000 052B             OCR3AL=500;
                 ; 0000 052C         }
                 ; 0000 052D         if((E_flag[0]==1)&&(F_flag[0]==0))
                 ; 0000 052E         {
                 ; 0000 052F             OCR1AH=800>>8;
                 ; 0000 0530             OCR1AL=800;
                 ; 0000 0531             OCR3AH=200>>8;
                 ; 0000 0532             OCR3AL=200;
                 ; 0000 0533         }
                 ; 0000 0534         if((E_flag[0]==0)&&(F_flag[0]==1))
                 ; 0000 0535         {
                 ; 0000 0536             OCR1AH=200>>8;
                 ; 0000 0537             OCR1AL=200;
                 ; 0000 0538             OCR3AH=800>>8;
                 ; 0000 0539             OCR3AL=800;
                 ; 0000 053A         }
                 ; 0000 053B         */
                 ; 0000 053C 
                 ; 0000 053D         delay_ms(500);
                 _0x107:
                 _0x106:
                 _0x104:
000b6e efe4      	LDI  R30,LOW(500)
000b6f e0f1      	LDI  R31,HIGH(500)
000b70 93fa      	ST   -Y,R31
000b71 93ea      	ST   -Y,R30
000b72 940e 13a0 	CALL _delay_ms
                 ; 0000 053E     }
000b74 ced3      	RJMP _0xED
                 _0xEF:
                 ; 0000 053F     TERMINATE;
000b75 e0e0      	LDI  R30,LOW(0)
000b76 940e 1357 	CALL SUBOPT_0x8E
                 ; 0000 0540     ICR1H=0x13;
000b78 940e 12e6 	CALL SUBOPT_0x80
                 ; 0000 0541     ICR1L=0x87;
                 ; 0000 0542     ICR3H=0x13;
                 ; 0000 0543     ICR3L=0x87;
                 ; 0000 0544     Global_Sequence=0;
                 ; 0000 0545     OCR1AH=0x00;
                 ; 0000 0546     OCR1AL=0x00;
                 ; 0000 0547     OCR3AH=0x00;
000b7a 940e 12f2 	CALL SUBOPT_0x81
                 ; 0000 0548     OCR3AL=0x00;
                 ; 0000 0549     OCR1BH=0x00;
                 ; 0000 054A     OCR1BL=0x00;
                 ; 0000 054B     E_flag[0]=0;
000b7c 940e 12f8 	CALL SUBOPT_0x82
                 ; 0000 054C     F_flag[0]=0;
                 ; 0000 054D     PORTB=0x00;
                 ; 0000 054E     PORTC=0x00;
                 ; 0000 054F }
000b7e 940e 15f3 	CALL __LOADLOCR6
000b80 966e      	ADIW R28,30
000b81 9508      	RET
                 ;
                 ;// ********************************************* main ******************************************************************
                 ;void main(void)
                 ; 0000 0553 {
                 _main:
                 ; 0000 0554 // Declare your local variables here
                 ; 0000 0555 // menu
                 ; 0000 0556 unsigned char menu = 0;
                 ; 0000 0557 unsigned char menu_Max = 14;
                 ; 0000 0558 
                 ; 0000 0559 // PA1~7 : Control switch (PA0¾ÈµÊ)
                 ; 0000 055A PORTA=0x00;
                 ;	menu -> R17
                 ;	menu_Max -> R16
000b82 e010      	LDI  R17,0
000b83 e00e      	LDI  R16,14
000b84 e0e0      	LDI  R30,LOW(0)
000b85 bbeb      	OUT  0x1B,R30
                 ; 0000 055B DDRA=0x01;
000b86 e0e1      	LDI  R30,LOW(1)
000b87 bbea      	OUT  0x1A,R30
                 ; 0000 055C // PB6 : Pump
                 ; 0000 055D PORTB=0x00;
000b88 e0e0      	LDI  R30,LOW(0)
000b89 bbe8      	OUT  0x18,R30
                 ; 0000 055E DDRB=0xFF;
000b8a efef      	LDI  R30,LOW(255)
000b8b bbe7      	OUT  0x17,R30
                 ; 0000 055F // PC0~3 : Inlet Valve
                 ; 0000 0560 // PC4~7 : Outlet Valve
                 ; 0000 0561 PORTC=0x00;
000b8c e0e0      	LDI  R30,LOW(0)
000b8d bbe5      	OUT  0x15,R30
                 ; 0000 0562 DDRC=0xFF;
000b8e efef      	LDI  R30,LOW(255)
000b8f bbe4      	OUT  0x14,R30
                 ; 0000 0563 // PD0~7 : LCD
                 ; 0000 0564 PORTD=0x00;
000b90 e0e0      	LDI  R30,LOW(0)
000b91 bbe2      	OUT  0x12,R30
                 ; 0000 0565 DDRD=0xFF;
000b92 efef      	LDI  R30,LOW(255)
000b93 bbe1      	OUT  0x11,R30
                 ; 0000 0566 // PE0 : EMERGENCY switch
                 ; 0000 0567 // PE1 : Interface switch - LEFT
                 ; 0000 0568 // PE2 : Interface switch - MIDDLE
                 ; 0000 0569 // PE3 : Interface switch - RIGHT
                 ; 0000 056A // PE4 : Mode change switch (Toggle)
                 ; 0000 056B // * PE5 : Thumb up....
                 ; 0000 056C PORTE=0x00;
000b94 e0e0      	LDI  R30,LOW(0)
000b95 b9e3      	OUT  0x3,R30
                 ; 0000 056D DDRE=0xC0;
000b96 ece0      	LDI  R30,LOW(192)
000b97 b9e2      	OUT  0x2,R30
                 ; 0000 056E // PF0~3 : Pressure Sensor
                 ; 0000 056F // PF4~7 : Flex Sensor
                 ; 0000 0570 PORTF=0x00;
000b98 e0e0      	LDI  R30,LOW(0)
000b99 93e0 0062 	STS  98,R30
                 ; 0000 0571 DDRF=0x00;
000b9b 93e0 0061 	STS  97,R30
                 ; 0000 0572 PORTG=0x00;
000b9d 93e0 0065 	STS  101,R30
                 ; 0000 0573 DDRG=0x00;
000b9f 93e0 0064 	STS  100,R30
                 ; 0000 0574 
                 ; 0000 0575 // Compare match interrupt  : Valve on
                 ; 0000 0576 // Overflow interrupt       : Valve off
                 ; 0000 0577 // Timer 1 B : PUMP pwm control by using OCR1B
                 ; 0000 0578 // Timer 1   : Inlet Valve control
                 ; 0000 0579 // Timer 3   : Outlet Valve on
                 ; 0000 057A 
                 ; 0000 057B // Timer/Counter 1 initialization
                 ; 0000 057C TCCR1A=0x22;//Only OC1B can make PWM signal(whenever TIM1_COMPB is LOW), Else : GPIO
000ba1 e2e2      	LDI  R30,LOW(34)
000ba2 bdef      	OUT  0x2F,R30
                 ; 0000 057D //TCCR1A=0x02;
                 ; 0000 057E TCCR1B=0x1C;//Timer 1 : Fast PWM mode, prescale=256, TOP=ICR1 (PWM period:80ms)
000ba3 e1ec      	LDI  R30,LOW(28)
000ba4 bdee      	OUT  0x2E,R30
                 ; 0000 057F TCNT1H=0x00;
000ba5 e0e0      	LDI  R30,LOW(0)
000ba6 bded      	OUT  0x2D,R30
                 ; 0000 0580 TCNT1L=0x00;
000ba7 bdec      	OUT  0x2C,R30
                 ; 0000 0581 ICR1H=0x13;
000ba8 e1e3      	LDI  R30,LOW(19)
000ba9 bde7      	OUT  0x27,R30
                 ; 0000 0582 ICR1L=0x87;
000baa e8e7      	LDI  R30,LOW(135)
000bab bde6      	OUT  0x26,R30
                 ; 0000 0583 OCR1AH=0x00;
000bac 940e 1083 	CALL SUBOPT_0x1F
                 ; 0000 0584 OCR1AL=0x00;
                 ; 0000 0585 OCR1BH=0x00;
000bae 940e 109d 	CALL SUBOPT_0x22
                 ; 0000 0586 OCR1BL=0x00;
                 ; 0000 0587 OCR1CH=0x00;
000bb0 93e0 0079 	STS  121,R30
                 ; 0000 0588 OCR1CL=0x00;
000bb2 e0e0      	LDI  R30,LOW(0)
000bb3 93e0 0078 	STS  120,R30
                 ; 0000 0589 // Timer/Counter 3 initialization
                 ; 0000 058A TCCR3A=0x02;//All port related with Timer3 : GPIO
000bb5 e0e2      	LDI  R30,LOW(2)
000bb6 93e0 008b 	STS  139,R30
                 ; 0000 058B TCCR3B=0x1C;//Timer 3 : Fast PWM mode, prescale=256, TOP=ICR3, f=clk/((TOP+1)*prescale)=80ms
000bb8 e1ec      	LDI  R30,LOW(28)
000bb9 93e0 008a 	STS  138,R30
                 ; 0000 058C TCNT3H=0x00;
000bbb e0e0      	LDI  R30,LOW(0)
000bbc 93e0 0089 	STS  137,R30
                 ; 0000 058D TCNT3L=0x00;
000bbe 93e0 0088 	STS  136,R30
                 ; 0000 058E ICR3H=0x13;
000bc0 e1e3      	LDI  R30,LOW(19)
000bc1 93e0 0081 	STS  129,R30
                 ; 0000 058F ICR3L=0x87;
000bc3 e8e7      	LDI  R30,LOW(135)
000bc4 93e0 0080 	STS  128,R30
                 ; 0000 0590 OCR3AH=0x00;
000bc6 e0e0      	LDI  R30,LOW(0)
000bc7 93e0 0087 	STS  135,R30
                 ; 0000 0591 OCR3AL=0x00;
000bc9 93e0 0086 	STS  134,R30
                 ; 0000 0592 OCR3BH=0x00;
000bcb 940e 1131 	CALL SUBOPT_0x39
                 ; 0000 0593 OCR3BL=0x00;
                 ; 0000 0594 OCR3CH=0x00;
000bcd 93e0 0083 	STS  131,R30
                 ; 0000 0595 OCR3CL=0x00;
000bcf e0e0      	LDI  R30,LOW(0)
000bd0 93e0 0082 	STS  130,R30
                 ; 0000 0596 //Timer/counter interrupt
                 ; 0000 0597 TIMSK = 0x00;
000bd2 940e 1357 	CALL SUBOPT_0x8E
                 ; 0000 0598 ETIMSK = 0x00;
                 ; 0000 0599 
                 ; 0000 059A //ADC setting
                 ; 0000 059B ADMUX=0x21;
000bd4 e2e1      	LDI  R30,LOW(33)
000bd5 b9e7      	OUT  0x7,R30
                 ; 0000 059C ADCSRA=0xCF;  //ADC enable, ADC start, ADC interrupt on, prescale:128(62.5kHz)
000bd6 ecef      	LDI  R30,LOW(207)
000bd7 b9e6      	OUT  0x6,R30
                 ; 0000 059D SFIOR=0x01;
000bd8 e0e1      	LDI  R30,LOW(1)
000bd9 bde0      	OUT  0x20,R30
                 ; 0000 059E 
                 ; 0000 059F lcd_init(8);
000bda e0e8      	LDI  R30,LOW(8)
000bdb 93ea      	ST   -Y,R30
000bdc 940e 0f33 	CALL _lcd_init
                 ; 0000 05A0 // Global enable interrupts
                 ; 0000 05A1 #asm("sei")
000bde 9478      	sei
                 ; 0000 05A2 SREG = 0x80;
000bdf e8e0      	LDI  R30,LOW(128)
000be0 bfef      	OUT  0x3F,R30
                 ; 0000 05A3 while (1)
                 _0x10A:
                 ; 0000 05A4       {
                 ; 0000 05A5         if(Left_switch_on){
000be1 9909      	SBIC 0x1,1
000be2 c005      	RJMP _0x10D
                 ; 0000 05A6             if(menu == 0) menu = menu_Max;
000be3 3010      	CPI  R17,0
000be4 f411      	BRNE _0x10E
000be5 2f10      	MOV  R17,R16
                 ; 0000 05A7             else    menu--;
000be6 c001      	RJMP _0x10F
                 _0x10E:
000be7 5011      	SUBI R17,1
                 ; 0000 05A8         }
                 _0x10F:
                 ; 0000 05A9 
                 ; 0000 05AA         if(Right_switch_on) menu++;
                 _0x10D:
000be8 9b0b      	SBIS 0x1,3
000be9 5f1f      	SUBI R17,-1
                 ; 0000 05AB         if(menu > menu_Max)    menu = 0;
000bea 1701      	CP   R16,R17
000beb f408      	BRSH _0x111
000bec e010      	LDI  R17,LOW(0)
                 ; 0000 05AC 
                 ; 0000 05AD 
                 ; 0000 05AE         switch(menu)
                 _0x111:
000bed 940e 1027 	CALL SUBOPT_0x12
                 ; 0000 05AF         {
                 ; 0000 05B0             case 0:
000bef 9730      	SBIW R30,0
000bf0 f459      	BRNE _0x115
                 ; 0000 05B1                     lcd_clear();
000bf1 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 05B2                     lcd_gotoxy(0, 0);
                 ; 0000 05B3                     lcd_putsf("1.Pressure TEST");
                +
000bf3 e7e6     +LDI R30 , LOW ( 2 * _0x0 + ( 116 ) )
000bf4 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 116 ) )
                 	__POINTW1FN _0x0,116
000bf5 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 05B4                     if(Middle_switch_on) pressure_test();
000bf7 990a      	SBIC 0x1,2
000bf8 c002      	RJMP _0x116
000bf9 940e 0226 	CALL _pressure_test
                 ; 0000 05B5                     delay_ms(100);
                 _0x116:
000bfb c0ca      	RJMP _0x13B
                 ; 0000 05B6                     break;
                 ; 0000 05B7 
                 ; 0000 05B8             case 1:
                 _0x115:
000bfc 30e1      	CPI  R30,LOW(0x1)
000bfd e0a0      	LDI  R26,HIGH(0x1)
000bfe 07fa      	CPC  R31,R26
000bff f459      	BRNE _0x117
                 ; 0000 05B9                     lcd_clear();
000c00 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 05BA                     lcd_gotoxy(0, 0);
                 ; 0000 05BB                     lcd_putsf("2.Pressure Tunning");
                +
000c02 e8e6     +LDI R30 , LOW ( 2 * _0x0 + ( 132 ) )
000c03 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 132 ) )
                 	__POINTW1FN _0x0,132
000c04 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 05BC                     if(Middle_switch_on)    pressure_tuning();
000c06 990a      	SBIC 0x1,2
000c07 c002      	RJMP _0x118
000c08 940e 0248 	CALL _pressure_tuning
                 ; 0000 05BD                     delay_ms(100);
                 _0x118:
000c0a c0bb      	RJMP _0x13B
                 ; 0000 05BE                     break;
                 ; 0000 05BF 
                 ; 0000 05C0             case 2:
                 _0x117:
000c0b 30e2      	CPI  R30,LOW(0x2)
000c0c e0a0      	LDI  R26,HIGH(0x2)
000c0d 07fa      	CPC  R31,R26
000c0e f459      	BRNE _0x119
                 ; 0000 05C1                     lcd_clear();
000c0f 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 05C2                     lcd_gotoxy(0, 0);
                 ; 0000 05C3                     lcd_putsf("3.Flex TEST");
                +
000c11 e9e9     +LDI R30 , LOW ( 2 * _0x0 + ( 151 ) )
000c12 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 151 ) )
                 	__POINTW1FN _0x0,151
000c13 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 05C4                     if(Middle_switch_on)    flex_test();
000c15 990a      	SBIC 0x1,2
000c16 c002      	RJMP _0x11A
000c17 940e 02da 	CALL _flex_test
                 ; 0000 05C5                     delay_ms(100);
                 _0x11A:
000c19 c0ac      	RJMP _0x13B
                 ; 0000 05C6                     break;
                 ; 0000 05C7             case 3:
                 _0x119:
000c1a 30e3      	CPI  R30,LOW(0x3)
000c1b e0a0      	LDI  R26,HIGH(0x3)
000c1c 07fa      	CPC  R31,R26
000c1d f459      	BRNE _0x11B
                 ; 0000 05C8                     lcd_clear();
000c1e 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 05C9                     lcd_gotoxy(0, 0);
                 ; 0000 05CA                     lcd_putsf("4.Flex Tunning");
                +
000c20 eae5     +LDI R30 , LOW ( 2 * _0x0 + ( 163 ) )
000c21 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 163 ) )
                 	__POINTW1FN _0x0,163
000c22 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 05CB                     if(Middle_switch_on)    flex_tuning();
000c24 990a      	SBIC 0x1,2
000c25 c002      	RJMP _0x11C
000c26 940e 02fc 	CALL _flex_tuning
                 ; 0000 05CC                     delay_ms(100);
                 _0x11C:
000c28 c09d      	RJMP _0x13B
                 ; 0000 05CD                     break;
                 ; 0000 05CE 
                 ; 0000 05CF             case 4:
                 _0x11B:
000c29 30e4      	CPI  R30,LOW(0x4)
000c2a e0a0      	LDI  R26,HIGH(0x4)
000c2b 07fa      	CPC  R31,R26
000c2c f459      	BRNE _0x11D
                 ; 0000 05D0                     lcd_clear();
000c2d 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 05D1                     lcd_gotoxy(0, 0);
                 ; 0000 05D2                     lcd_putsf("5.PWM TEST");
                +
000c2f ebe4     +LDI R30 , LOW ( 2 * _0x0 + ( 178 ) )
000c30 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 178 ) )
                 	__POINTW1FN _0x0,178
000c31 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 05D3                     if(Middle_switch_on)    check_pwm();
000c33 990a      	SBIC 0x1,2
000c34 c002      	RJMP _0x11E
000c35 940e 0346 	CALL _check_pwm
                 ; 0000 05D4                     delay_ms(100);
                 _0x11E:
000c37 c08e      	RJMP _0x13B
                 ; 0000 05D5                     break;
                 ; 0000 05D6 
                 ; 0000 05D7             case 5:
                 _0x11D:
000c38 30e5      	CPI  R30,LOW(0x5)
000c39 e0a0      	LDI  R26,HIGH(0x5)
000c3a 07fa      	CPC  R31,R26
000c3b f459      	BRNE _0x11F
                 ; 0000 05D8                     lcd_clear();
000c3c 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 05D9                     lcd_gotoxy(0, 0);
                 ; 0000 05DA                     lcd_putsf("6.PUMP TEST");
                +
000c3e ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 189 ) )
000c3f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 189 ) )
                 	__POINTW1FN _0x0,189
000c40 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 05DB                     if(Middle_switch_on)    PUMP_test();
000c42 990a      	SBIC 0x1,2
000c43 c002      	RJMP _0x120
000c44 940e 0372 	CALL _PUMP_test
                 ; 0000 05DC                     delay_ms(100);
                 _0x120:
000c46 c07f      	RJMP _0x13B
                 ; 0000 05DD                     break;
                 ; 0000 05DE 
                 ; 0000 05DF             case 6:
                 _0x11F:
000c47 30e6      	CPI  R30,LOW(0x6)
000c48 e0a0      	LDI  R26,HIGH(0x6)
000c49 07fa      	CPC  R31,R26
000c4a f459      	BRNE _0x121
                 ; 0000 05E0                     lcd_clear();
000c4b 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 05E1                     lcd_gotoxy(0, 0);
                 ; 0000 05E2                     lcd_putsf("7.Order TEST");
                +
000c4d eceb     +LDI R30 , LOW ( 2 * _0x0 + ( 201 ) )
000c4e e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 201 ) )
                 	__POINTW1FN _0x0,201
000c4f 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 05E3                     if(Middle_switch_on)    test_order();
000c51 990a      	SBIC 0x1,2
000c52 c002      	RJMP _0x122
000c53 940e 0424 	CALL _test_order
                 ; 0000 05E4                     delay_ms(100);
                 _0x122:
000c55 c070      	RJMP _0x13B
                 ; 0000 05E5                     break;
                 ; 0000 05E6 
                 ; 0000 05E7             case 7:
                 _0x121:
000c56 30e7      	CPI  R30,LOW(0x7)
000c57 e0a0      	LDI  R26,HIGH(0x7)
000c58 07fa      	CPC  R31,R26
000c59 f459      	BRNE _0x123
                 ; 0000 05E8                     lcd_clear();
000c5a 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 05E9                     lcd_gotoxy(0, 0);
                 ; 0000 05EA                     lcd_putsf("8.Valve Order");
                +
000c5c ede8     +LDI R30 , LOW ( 2 * _0x0 + ( 214 ) )
000c5d e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 214 ) )
                 	__POINTW1FN _0x0,214
000c5e 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 05EB                     if(Middle_switch_on)    valve_order();
000c60 990a      	SBIC 0x1,2
000c61 c002      	RJMP _0x124
000c62 940e 045d 	CALL _valve_order
                 ; 0000 05EC                     delay_ms(100);
                 _0x124:
000c64 c061      	RJMP _0x13B
                 ; 0000 05ED                     break;
                 ; 0000 05EE 
                 ; 0000 05EF             case 8:
                 _0x123:
000c65 30e8      	CPI  R30,LOW(0x8)
000c66 e0a0      	LDI  R26,HIGH(0x8)
000c67 07fa      	CPC  R31,R26
000c68 f449      	BRNE _0x125
                 ; 0000 05F0                     lcd_clear();
000c69 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 05F1                     lcd_gotoxy(0, 0);
                 ; 0000 05F2                     lcd_putsf("9.Threshold?");
                +
000c6b eee6     +LDI R30 , LOW ( 2 * _0x0 + ( 228 ) )
000c6c e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 228 ) )
                 	__POINTW1FN _0x0,228
000c6d 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 05F3                     if(Middle_switch_on)    measure_threshold();
000c6f 9b0a      	SBIS 0x1,2
000c70 d92d      	RCALL _measure_threshold
                 ; 0000 05F4                     delay_ms(100);
000c71 c054      	RJMP _0x13B
                 ; 0000 05F5                     break;
                 ; 0000 05F6 
                 ; 0000 05F7             case 9:
                 _0x125:
000c72 30e9      	CPI  R30,LOW(0x9)
000c73 e0a0      	LDI  R26,HIGH(0x9)
000c74 07fa      	CPC  R31,R26
000c75 f449      	BRNE _0x127
                 ; 0000 05F8                     lcd_clear();
000c76 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 05F9                     lcd_gotoxy(0, 0);
                 ; 0000 05FA                     lcd_putsf("10.PUMP VALVE");
                +
000c78 efe3     +LDI R30 , LOW ( 2 * _0x0 + ( 241 ) )
000c79 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 241 ) )
                 	__POINTW1FN _0x0,241
000c7a 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 05FB                     if(Middle_switch_on)    pump_valve();
000c7c 9b0a      	SBIS 0x1,2
000c7d d885      	RCALL _pump_valve
                 ; 0000 05FC                     delay_ms(100);
000c7e c047      	RJMP _0x13B
                 ; 0000 05FD                     break;
                 ; 0000 05FE 
                 ; 0000 05FF             case 10:
                 _0x127:
000c7f 30ea      	CPI  R30,LOW(0xA)
000c80 e0a0      	LDI  R26,HIGH(0xA)
000c81 07fa      	CPC  R31,R26
000c82 f449      	BRNE _0x129
                 ; 0000 0600                     lcd_clear();
000c83 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 0601                     lcd_gotoxy(0, 0);
                 ; 0000 0602                     lcd_putsf("11.Daily test");
                +
000c85 e0e1     +LDI R30 , LOW ( 2 * _0x0 + ( 255 ) )
000c86 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 255 ) )
                 	__POINTW1FN _0x0,255
000c87 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 0603                     if(Middle_switch_on)    RUN_daily();
000c89 9b0a      	SBIS 0x1,2
000c8a da78      	RCALL _RUN_daily
                 ; 0000 0604                     delay_ms(100);
000c8b c03a      	RJMP _0x13B
                 ; 0000 0605                     break;
                 ; 0000 0606 
                 ; 0000 0607             case 11:
                 _0x129:
000c8c 30eb      	CPI  R30,LOW(0xB)
000c8d e0a0      	LDI  R26,HIGH(0xB)
000c8e 07fa      	CPC  R31,R26
000c8f f449      	BRNE _0x12B
                 ; 0000 0608                     lcd_clear();
000c90 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 0609                     lcd_gotoxy(0, 0);
                 ; 0000 060A                     lcd_putsf("12.Rehab test");
                +
000c92 e0ef     +LDI R30 , LOW ( 2 * _0x0 + ( 269 ) )
000c93 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 269 ) )
                 	__POINTW1FN _0x0,269
000c94 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 060B                     if(Middle_switch_on)    RUN_rehab();
000c96 9b0a      	SBIS 0x1,2
000c97 db7f      	RCALL _RUN_rehab
                 ; 0000 060C                     delay_ms(100);
000c98 c02d      	RJMP _0x13B
                 ; 0000 060D                     break;
                 ; 0000 060E 
                 ; 0000 060F             case 12:
                 _0x12B:
000c99 30ec      	CPI  R30,LOW(0xC)
000c9a e0a0      	LDI  R26,HIGH(0xC)
000c9b 07fa      	CPC  R31,R26
000c9c f449      	BRNE _0x12D
                 ; 0000 0610                     lcd_clear();
000c9d 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 0611                     lcd_gotoxy(0, 0);
                 ; 0000 0612                     lcd_putsf("13.TEST");
                +
000c9f e1ed     +LDI R30 , LOW ( 2 * _0x0 + ( 283 ) )
000ca0 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 283 ) )
                 	__POINTW1FN _0x0,283
000ca1 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 0613                     if(Middle_switch_on)    test();
000ca3 9b0a      	SBIS 0x1,2
000ca4 dbfc      	RCALL _test
                 ; 0000 0614                     delay_ms(100);
000ca5 c020      	RJMP _0x13B
                 ; 0000 0615                     break;
                 ; 0000 0616 
                 ; 0000 0617             case 13:
                 _0x12D:
000ca6 30ed      	CPI  R30,LOW(0xD)
000ca7 e0a0      	LDI  R26,HIGH(0xD)
000ca8 07fa      	CPC  R31,R26
000ca9 f449      	BRNE _0x12F
                 ; 0000 0618                     lcd_clear();
000caa 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 0619                     lcd_gotoxy(0, 0);
                 ; 0000 061A                     lcd_putsf("14.TEST2");
                +
000cac e2e5     +LDI R30 , LOW ( 2 * _0x0 + ( 291 ) )
000cad e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 291 ) )
                 	__POINTW1FN _0x0,291
000cae 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 061B                     if(Middle_switch_on)    test2();
000cb0 9b0a      	SBIS 0x1,2
000cb1 dc55      	RCALL _test2
                 ; 0000 061C                     delay_ms(100);
000cb2 c013      	RJMP _0x13B
                 ; 0000 061D                     break;
                 ; 0000 061E 
                 ; 0000 061F             case 14:
                 _0x12F:
000cb3 30ee      	CPI  R30,LOW(0xE)
000cb4 e0a0      	LDI  R26,HIGH(0xE)
000cb5 07fa      	CPC  R31,R26
000cb6 f449      	BRNE _0x133
                 ; 0000 0620                     lcd_clear();
000cb7 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 0621                     lcd_gotoxy(0, 0);
                 ; 0000 0622                     lcd_putsf("15.TEST3");
                +
000cb9 e2ee     +LDI R30 , LOW ( 2 * _0x0 + ( 300 ) )
000cba e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 300 ) )
                 	__POINTW1FN _0x0,300
000cbb 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 0623                     if(Middle_switch_on)    test3();
000cbd 9b0a      	SBIS 0x1,2
000cbe dd77      	RCALL _test3
                 ; 0000 0624                     delay_ms(100);
000cbf c006      	RJMP _0x13B
                 ; 0000 0625                     break;
                 ; 0000 0626 
                 ; 0000 0627              default :
                 _0x133:
                 ; 0000 0628                     lcd_clear();
000cc0 940e 0fde 	CALL SUBOPT_0xB
                 ; 0000 0629                     lcd_gotoxy(0, 0);
                 ; 0000 062A                     lcd_putsf("**BREAK!**");
                +
000cc2 e3e7     +LDI R30 , LOW ( 2 * _0x0 + ( 309 ) )
000cc3 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 309 ) )
                 	__POINTW1FN _0x0,309
000cc4 940e 10e7 	CALL SUBOPT_0x2E
                 ; 0000 062B                     delay_ms(100);
                 _0x13B:
000cc6 e6e4      	LDI  R30,LOW(100)
000cc7 e0f0      	LDI  R31,HIGH(100)
000cc8 93fa      	ST   -Y,R31
000cc9 93ea      	ST   -Y,R30
000cca 940e 13a0 	CALL _delay_ms
                 ; 0000 062C                     break;
                 ; 0000 062D 
                 ; 0000 062E          }
                 ; 0000 062F       }
000ccc cf14      	RJMP _0x10A
                 ; 0000 0630 
                 ; 0000 0631 }
                 _0x134:
000ccd cfff      	RJMP _0x134
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
000cce 931a      	ST   -Y,R17
000ccf 930a      	ST   -Y,R16
000cd0 81aa      	LDD  R26,Y+2
000cd1 81bb      	LDD  R27,Y+2+1
000cd2 9612      	ADIW R26,2
000cd3 940e 15b8 	CALL __GETW1P
000cd5 9730      	SBIW R30,0
000cd6 f159      	BREQ _0x2000010
000cd7 81aa      	LDD  R26,Y+2
000cd8 81bb      	LDD  R27,Y+2+1
000cd9 9614      	ADIW R26,4
000cda 940e 15b8 	CALL __GETW1P
000cdc 018f      	MOVW R16,R30
000cdd 9730      	SBIW R30,0
000cde f061      	BREQ _0x2000012
                +
000cdf 3002     +CPI R16 , LOW ( 2 )
000ce0 e0e0     +LDI R30 , HIGH ( 2 )
000ce1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000ce2 f0f0      	BRLO _0x2000013
000ce3 01f8      	MOVW R30,R16
000ce4 9731      	SBIW R30,1
000ce5 018f      	MOVW R16,R30
                +
000ce6 81aa     +LDD R26 , Y + 2
000ce7 81bb     +LDD R27 , Y + 2 + 1
000ce8 9614     +ADIW R26 , 4
000ce9 93ed     +ST X + , R30
000cea 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000ceb 81aa      	LDD  R26,Y+2
000cec 81bb      	LDD  R27,Y+2+1
000ced 9612      	ADIW R26,2
000cee 91ed      	LD   R30,X+
000cef 91fd      	LD   R31,X+
000cf0 9631      	ADIW R30,1
000cf1 93fe      	ST   -X,R31
000cf2 93ee      	ST   -X,R30
000cf3 9731      	SBIW R30,1
000cf4 81ac      	LDD  R26,Y+4
000cf5 83a0      	STD  Z+0,R26
000cf6 81aa      	LDD  R26,Y+2
000cf7 81bb      	LDD  R27,Y+2+1
000cf8 940e 15b8 	CALL __GETW1P
000cfa 23ff      	TST  R31
000cfb f02a      	BRMI _0x2000014
000cfc 91ed      	LD   R30,X+
000cfd 91fd      	LD   R31,X+
000cfe 9631      	ADIW R30,1
000cff 93fe      	ST   -X,R31
000d00 93ee      	ST   -X,R30
                 _0x2000014:
                 _0x2000013:
000d01 c004      	RJMP _0x2000015
                 _0x2000010:
000d02 81aa      	LDD  R26,Y+2
000d03 81bb      	LDD  R27,Y+2+1
000d04 940e 1241 	CALL SUBOPT_0x61
                 _0x2000015:
000d06 8119      	LDD  R17,Y+1
000d07 8108      	LDD  R16,Y+0
000d08 9625      	ADIW R28,5
000d09 9508      	RET
                 __print_G100:
000d0a 9726      	SBIW R28,6
000d0b 940e 15ec 	CALL __SAVELOCR6
000d0d e010      	LDI  R17,0
000d0e 85ac      	LDD  R26,Y+12
000d0f 85bd      	LDD  R27,Y+12+1
000d10 940e 1257 	CALL SUBOPT_0x66
                 _0x2000016:
000d12 89ea      	LDD  R30,Y+18
000d13 89fb      	LDD  R31,Y+18+1
000d14 9631      	ADIW R30,1
000d15 8bea      	STD  Y+18,R30
000d16 8bfb      	STD  Y+18+1,R31
000d17 9731      	SBIW R30,1
000d18 91e4      	LPM  R30,Z
000d19 2f2e      	MOV  R18,R30
000d1a 30e0      	CPI  R30,0
000d1b f411      	BRNE PC+3
000d1c 940c 0e35 	JMP _0x2000018
000d1e 2fe1      	MOV  R30,R17
000d1f 30e0      	CPI  R30,0
000d20 f439      	BRNE _0x200001C
000d21 3225      	CPI  R18,37
000d22 f411      	BRNE _0x200001D
000d23 e011      	LDI  R17,LOW(1)
000d24 c002      	RJMP _0x200001E
                 _0x200001D:
000d25 940e 1365 	CALL SUBOPT_0x90
                 _0x200001E:
000d27 c10c      	RJMP _0x200001B
                 _0x200001C:
000d28 30e1      	CPI  R30,LOW(0x1)
000d29 f4a9      	BRNE _0x200001F
000d2a 3225      	CPI  R18,37
000d2b f419      	BRNE _0x2000020
000d2c 940e 1365 	CALL SUBOPT_0x90
000d2e c104      	RJMP _0x20000C9
                 _0x2000020:
000d2f e012      	LDI  R17,LOW(2)
000d30 e040      	LDI  R20,LOW(0)
000d31 e000      	LDI  R16,LOW(0)
000d32 322d      	CPI  R18,45
000d33 f411      	BRNE _0x2000021
000d34 e001      	LDI  R16,LOW(1)
000d35 c0fe      	RJMP _0x200001B
                 _0x2000021:
000d36 322b      	CPI  R18,43
000d37 f411      	BRNE _0x2000022
000d38 e24b      	LDI  R20,LOW(43)
000d39 c0fa      	RJMP _0x200001B
                 _0x2000022:
000d3a 3220      	CPI  R18,32
000d3b f411      	BRNE _0x2000023
000d3c e240      	LDI  R20,LOW(32)
000d3d c0f6      	RJMP _0x200001B
                 _0x2000023:
000d3e c002      	RJMP _0x2000024
                 _0x200001F:
000d3f 30e2      	CPI  R30,LOW(0x2)
000d40 f439      	BRNE _0x2000025
                 _0x2000024:
000d41 e050      	LDI  R21,LOW(0)
000d42 e013      	LDI  R17,LOW(3)
000d43 3320      	CPI  R18,48
000d44 f411      	BRNE _0x2000026
000d45 6800      	ORI  R16,LOW(128)
000d46 c0ed      	RJMP _0x200001B
                 _0x2000026:
000d47 c004      	RJMP _0x2000027
                 _0x2000025:
000d48 30e3      	CPI  R30,LOW(0x3)
000d49 f011      	BREQ PC+3
000d4a 940c 0e34 	JMP _0x200001B
                 _0x2000027:
000d4c 3320      	CPI  R18,48
000d4d f010      	BRLO _0x200002A
000d4e 332a      	CPI  R18,58
000d4f f008      	BRLO _0x200002B
                 _0x200002A:
000d50 c007      	RJMP _0x2000029
                 _0x200002B:
000d51 e0aa      	LDI  R26,LOW(10)
000d52 9f5a      	MUL  R21,R26
000d53 2d50      	MOV  R21,R0
000d54 2fe2      	MOV  R30,R18
000d55 53e0      	SUBI R30,LOW(48)
000d56 0f5e      	ADD  R21,R30
000d57 c0dc      	RJMP _0x200001B
                 _0x2000029:
000d58 2fe2      	MOV  R30,R18
000d59 36e3      	CPI  R30,LOW(0x63)
000d5a f449      	BRNE _0x200002F
000d5b 940e 136e 	CALL SUBOPT_0x91
000d5d 89e8      	LDD  R30,Y+16
000d5e 89f9      	LDD  R31,Y+16+1
000d5f 81a4      	LDD  R26,Z+4
000d60 93aa      	ST   -Y,R26
000d61 940e 1374 	CALL SUBOPT_0x92
000d63 c0cf      	RJMP _0x2000030
                 _0x200002F:
000d64 37e3      	CPI  R30,LOW(0x73)
000d65 f441      	BRNE _0x2000032
000d66 940e 136e 	CALL SUBOPT_0x91
000d68 940e 137c 	CALL SUBOPT_0x93
000d6a 940e 0f68 	CALL _strlen
000d6c 2f1e      	MOV  R17,R30
000d6d c00a      	RJMP _0x2000033
                 _0x2000032:
000d6e 37e0      	CPI  R30,LOW(0x70)
000d6f f461      	BRNE _0x2000035
000d70 940e 136e 	CALL SUBOPT_0x91
000d72 940e 137c 	CALL SUBOPT_0x93
000d74 940e 0f72 	CALL _strlenf
000d76 2f1e      	MOV  R17,R30
000d77 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000d78 6002      	ORI  R16,LOW(2)
000d79 770f      	ANDI R16,LOW(127)
000d7a e030      	LDI  R19,LOW(0)
000d7b c035      	RJMP _0x2000036
                 _0x2000035:
000d7c 36e4      	CPI  R30,LOW(0x64)
000d7d f011      	BREQ _0x2000039
000d7e 36e9      	CPI  R30,LOW(0x69)
000d7f f411      	BRNE _0x200003A
                 _0x2000039:
000d80 6004      	ORI  R16,LOW(4)
000d81 c002      	RJMP _0x200003B
                 _0x200003A:
000d82 37e5      	CPI  R30,LOW(0x75)
000d83 f431      	BRNE _0x200003C
                 _0x200003B:
000d84 e8ec      	LDI  R30,LOW(_tbl10_G100*2)
000d85 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000d86 83ee      	STD  Y+6,R30
000d87 83ff      	STD  Y+6+1,R31
000d88 e015      	LDI  R17,LOW(5)
000d89 c00d      	RJMP _0x200003D
                 _0x200003C:
000d8a 35e8      	CPI  R30,LOW(0x58)
000d8b f411      	BRNE _0x200003F
000d8c 6008      	ORI  R16,LOW(8)
000d8d c004      	RJMP _0x2000040
                 _0x200003F:
000d8e 37e8      	CPI  R30,LOW(0x78)
000d8f f011      	BREQ PC+3
000d90 940c 0e33 	JMP _0x2000071
                 _0x2000040:
000d92 e9e6      	LDI  R30,LOW(_tbl16_G100*2)
000d93 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000d94 83ee      	STD  Y+6,R30
000d95 83ff      	STD  Y+6+1,R31
000d96 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000d97 ff02      	SBRS R16,2
000d98 c014      	RJMP _0x2000042
000d99 940e 136e 	CALL SUBOPT_0x91
000d9b 940e 1386 	CALL SUBOPT_0x94
000d9d 85ab      	LDD  R26,Y+11
000d9e 23aa      	TST  R26
000d9f f43a      	BRPL _0x2000043
000da0 85ea      	LDD  R30,Y+10
000da1 85fb      	LDD  R31,Y+10+1
000da2 940e 1553 	CALL __ANEGW1
000da4 87ea      	STD  Y+10,R30
000da5 87fb      	STD  Y+10+1,R31
000da6 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000da7 3040      	CPI  R20,0
000da8 f011      	BREQ _0x2000044
000da9 5f1f      	SUBI R17,-LOW(1)
000daa c001      	RJMP _0x2000045
                 _0x2000044:
000dab 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000dac c004      	RJMP _0x2000046
                 _0x2000042:
000dad 940e 136e 	CALL SUBOPT_0x91
000daf 940e 1386 	CALL SUBOPT_0x94
                 _0x2000046:
                 _0x2000036:
000db1 fd00      	SBRC R16,0
000db2 c011      	RJMP _0x2000047
                 _0x2000048:
000db3 1715      	CP   R17,R21
000db4 f478      	BRSH _0x200004A
000db5 ff07      	SBRS R16,7
000db6 c008      	RJMP _0x200004B
000db7 ff02      	SBRS R16,2
000db8 c004      	RJMP _0x200004C
000db9 7f0b      	ANDI R16,LOW(251)
000dba 2f24      	MOV  R18,R20
000dbb 5011      	SUBI R17,LOW(1)
000dbc c001      	RJMP _0x200004D
                 _0x200004C:
000dbd e320      	LDI  R18,LOW(48)
                 _0x200004D:
000dbe c001      	RJMP _0x200004E
                 _0x200004B:
000dbf e220      	LDI  R18,LOW(32)
                 _0x200004E:
000dc0 940e 1365 	CALL SUBOPT_0x90
000dc2 5051      	SUBI R21,LOW(1)
000dc3 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000dc4 2f31      	MOV  R19,R17
000dc5 ff01      	SBRS R16,1
000dc6 c017      	RJMP _0x200004F
                 _0x2000050:
000dc7 3030      	CPI  R19,0
000dc8 f0a1      	BREQ _0x2000052
000dc9 ff03      	SBRS R16,3
000dca c006      	RJMP _0x2000053
000dcb 81ee      	LDD  R30,Y+6
000dcc 81ff      	LDD  R31,Y+6+1
000dcd 9125      	LPM  R18,Z+
000dce 83ee      	STD  Y+6,R30
000dcf 83ff      	STD  Y+6+1,R31
000dd0 c005      	RJMP _0x2000054
                 _0x2000053:
000dd1 81ae      	LDD  R26,Y+6
000dd2 81bf      	LDD  R27,Y+6+1
000dd3 912d      	LD   R18,X+
000dd4 83ae      	STD  Y+6,R26
000dd5 83bf      	STD  Y+6+1,R27
                 _0x2000054:
000dd6 940e 1365 	CALL SUBOPT_0x90
000dd8 3050      	CPI  R21,0
000dd9 f009      	BREQ _0x2000055
000dda 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000ddb 5031      	SUBI R19,LOW(1)
000ddc cfea      	RJMP _0x2000050
                 _0x2000052:
000ddd c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000dde e320      	LDI  R18,LOW(48)
000ddf 81ee      	LDD  R30,Y+6
000de0 81ff      	LDD  R31,Y+6+1
000de1 940e 15c7 	CALL __GETW1PF
000de3 87e8      	STD  Y+8,R30
000de4 87f9      	STD  Y+8+1,R31
000de5 81ee      	LDD  R30,Y+6
000de6 81ff      	LDD  R31,Y+6+1
000de7 9632      	ADIW R30,2
000de8 83ee      	STD  Y+6,R30
000de9 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000dea 85e8      	LDD  R30,Y+8
000deb 85f9      	LDD  R31,Y+8+1
000dec 85aa      	LDD  R26,Y+10
000ded 85bb      	LDD  R27,Y+10+1
000dee 17ae      	CP   R26,R30
000def 07bf      	CPC  R27,R31
000df0 f050      	BRLO _0x200005C
000df1 5f2f      	SUBI R18,-LOW(1)
000df2 85a8      	LDD  R26,Y+8
000df3 85b9      	LDD  R27,Y+8+1
000df4 85ea      	LDD  R30,Y+10
000df5 85fb      	LDD  R31,Y+10+1
000df6 1bea      	SUB  R30,R26
000df7 0bfb      	SBC  R31,R27
000df8 87ea      	STD  Y+10,R30
000df9 87fb      	STD  Y+10+1,R31
000dfa cfef      	RJMP _0x200005A
                 _0x200005C:
000dfb 332a      	CPI  R18,58
000dfc f028      	BRLO _0x200005D
000dfd ff03      	SBRS R16,3
000dfe c002      	RJMP _0x200005E
000dff 5f29      	SUBI R18,-LOW(7)
000e00 c001      	RJMP _0x200005F
                 _0x200005E:
000e01 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
000e02 fd04      	SBRC R16,4
000e03 c01a      	RJMP _0x2000061
000e04 3321      	CPI  R18,49
000e05 f420      	BRSH _0x2000063
000e06 85a8      	LDD  R26,Y+8
000e07 85b9      	LDD  R27,Y+8+1
000e08 9711      	SBIW R26,1
000e09 f409      	BRNE _0x2000062
                 _0x2000063:
000e0a c009      	RJMP _0x20000CA
                 _0x2000062:
000e0b 1753      	CP   R21,R19
000e0c f010      	BRLO _0x2000067
000e0d ff00      	SBRS R16,0
000e0e c001      	RJMP _0x2000068
                 _0x2000067:
000e0f c013      	RJMP _0x2000066
                 _0x2000068:
000e10 e220      	LDI  R18,LOW(32)
000e11 ff07      	SBRS R16,7
000e12 c00b      	RJMP _0x2000069
000e13 e320      	LDI  R18,LOW(48)
                 _0x20000CA:
000e14 6100      	ORI  R16,LOW(16)
000e15 ff02      	SBRS R16,2
000e16 c007      	RJMP _0x200006A
000e17 7f0b      	ANDI R16,LOW(251)
000e18 934a      	ST   -Y,R20
000e19 940e 1374 	CALL SUBOPT_0x92
000e1b 3050      	CPI  R21,0
000e1c f009      	BREQ _0x200006B
000e1d 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
000e1e 940e 1365 	CALL SUBOPT_0x90
000e20 3050      	CPI  R21,0
000e21 f009      	BREQ _0x200006C
000e22 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000e23 5031      	SUBI R19,LOW(1)
000e24 85a8      	LDD  R26,Y+8
000e25 85b9      	LDD  R27,Y+8+1
000e26 9712      	SBIW R26,2
000e27 f008      	BRLO _0x2000059
000e28 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000e29 ff00      	SBRS R16,0
000e2a c008      	RJMP _0x200006D
                 _0x200006E:
000e2b 3050      	CPI  R21,0
000e2c f031      	BREQ _0x2000070
000e2d 5051      	SUBI R21,LOW(1)
000e2e e2e0      	LDI  R30,LOW(32)
000e2f 93ea      	ST   -Y,R30
000e30 940e 1374 	CALL SUBOPT_0x92
000e32 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000C9:
000e33 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000e34 cedd      	RJMP _0x2000016
                 _0x2000018:
000e35 85ac      	LDD  R26,Y+12
000e36 85bd      	LDD  R27,Y+12+1
000e37 940e 15b8 	CALL __GETW1P
000e39 940e 15f3 	CALL __LOADLOCR6
000e3b 9664      	ADIW R28,20
000e3c 9508      	RET
                 _sprintf:
000e3d 92ff      	PUSH R15
000e3e 2ef8      	MOV  R15,R24
000e3f 9726      	SBIW R28,6
000e40 940e 15ee 	CALL __SAVELOCR4
000e42 940e 138e 	CALL SUBOPT_0x95
000e44 9730      	SBIW R30,0
000e45 f419      	BRNE _0x2000072
000e46 efef      	LDI  R30,LOW(65535)
000e47 efff      	LDI  R31,HIGH(65535)
000e48 c025      	RJMP _0x2080003
                 _0x2000072:
000e49 01de      	MOVW R26,R28
000e4a 9616      	ADIW R26,6
000e4b 940e 154f 	CALL __ADDW2R15
000e4d 018d      	MOVW R16,R26
000e4e 940e 138e 	CALL SUBOPT_0x95
000e50 83ee      	STD  Y+6,R30
000e51 83ff      	STD  Y+6+1,R31
000e52 e0e0      	LDI  R30,LOW(0)
000e53 87e8      	STD  Y+8,R30
000e54 87e9      	STD  Y+8+1,R30
000e55 01de      	MOVW R26,R28
000e56 961a      	ADIW R26,10
000e57 940e 154f 	CALL __ADDW2R15
000e59 940e 15b8 	CALL __GETW1P
000e5b 93fa      	ST   -Y,R31
000e5c 93ea      	ST   -Y,R30
000e5d 931a      	ST   -Y,R17
000e5e 930a      	ST   -Y,R16
000e5f ecee      	LDI  R30,LOW(_put_buff_G100)
000e60 e0fc      	LDI  R31,HIGH(_put_buff_G100)
000e61 93fa      	ST   -Y,R31
000e62 93ea      	ST   -Y,R30
000e63 01fe      	MOVW R30,R28
000e64 963a      	ADIW R30,10
000e65 93fa      	ST   -Y,R31
000e66 93ea      	ST   -Y,R30
000e67 dea2      	RCALL __print_G100
000e68 019f      	MOVW R18,R30
000e69 81ae      	LDD  R26,Y+6
000e6a 81bf      	LDD  R27,Y+6+1
000e6b e0e0      	LDI  R30,LOW(0)
000e6c 93ec      	ST   X,R30
000e6d 01f9      	MOVW R30,R18
                 _0x2080003:
000e6e 940e 15f5 	CALL __LOADLOCR4
000e70 962a      	ADIW R28,10
000e71 90ff      	POP  R15
000e72 9508      	RET
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G101:
000e73 e0ff          ldi   r31,15
                 __lcd_delay0:
000e74 95fa          dec   r31
000e75 f7f1          brne  __lcd_delay0
000e76 9508      	RET
                 __lcd_ready:
000e77 b3a1          in    r26,__lcd_direction
000e78 70af          andi  r26,0xf                 ;set as input
000e79 bba1          out   __lcd_direction,r26
000e7a 9a91          sbi   __lcd_port,__lcd_rd     ;RD=1
000e7b 9890          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
000e7c dff6      	RCALL __lcd_delay_G101
000e7d 9a92          sbi   __lcd_port,__lcd_enable ;EN=1
000e7e dff4      	RCALL __lcd_delay_G101
000e7f b3a0          in    r26,__lcd_pin
000e80 9892          cbi   __lcd_port,__lcd_enable ;EN=0
000e81 dff1      	RCALL __lcd_delay_G101
000e82 9a92          sbi   __lcd_port,__lcd_enable ;EN=1
000e83 dfef      	RCALL __lcd_delay_G101
000e84 9892          cbi   __lcd_port,__lcd_enable ;EN=0
000e85 fda7          sbrc  r26,__lcd_busy_flag
000e86 cff5          rjmp  __lcd_busy
000e87 9508      	RET
                 __lcd_write_nibble_G101:
000e88 7fa0          andi  r26,0xf0
000e89 2bab          or    r26,r27
000e8a bba2          out   __lcd_port,r26          ;write
000e8b 9a92          sbi   __lcd_port,__lcd_enable ;EN=1
000e8c 940e 0e73 	CALL __lcd_delay_G101
000e8e 9892          cbi   __lcd_port,__lcd_enable ;EN=0
000e8f 940e 0e73 	CALL __lcd_delay_G101
000e91 9508      	RET
                 __lcd_write_data:
000e92 9891          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000e93 b3a1          in    r26,__lcd_direction
000e94 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
000e95 bba1          out   __lcd_direction,r26
000e96 b3b2          in    r27,__lcd_port
000e97 70bf          andi  r27,0xf
000e98 81a8          ld    r26,y
000e99 dfee      	RCALL __lcd_write_nibble_G101
000e9a 81a8          ld    r26,y
000e9b 95a2          swap  r26
000e9c dfeb      	RCALL __lcd_write_nibble_G101
000e9d 9a91          sbi   __lcd_port,__lcd_rd     ;RD=1
000e9e 940c 0f66 	JMP  _0x2080001
                 __lcd_read_nibble_G101:
000ea0 9a92          sbi   __lcd_port,__lcd_enable ;EN=1
000ea1 940e 0e73 	CALL __lcd_delay_G101
000ea3 b3e0          in    r30,__lcd_pin           ;read
000ea4 9892          cbi   __lcd_port,__lcd_enable ;EN=0
000ea5 940e 0e73 	CALL __lcd_delay_G101
000ea7 7fe0          andi  r30,0xf0
000ea8 9508      	RET
                 _lcd_read_byte0_G101:
000ea9 940e 0e73 	CALL __lcd_delay_G101
000eab dff4      	RCALL __lcd_read_nibble_G101
000eac 2fae          mov   r26,r30
000ead dff2      	RCALL __lcd_read_nibble_G101
000eae 9891          cbi   __lcd_port,__lcd_rd     ;RD=0
000eaf 95e2          swap  r30
000eb0 2bea          or    r30,r26
000eb1 9508      	RET
                 _lcd_gotoxy:
000eb2 940e 0e77 	CALL __lcd_ready
000eb4 940e 10c6 	CALL SUBOPT_0x28
000eb6 5dea      	SUBI R30,LOW(-__base_y_G101)
000eb7 4ff8      	SBCI R31,HIGH(-__base_y_G101)
000eb8 81e0      	LD   R30,Z
000eb9 81a9      	LDD  R26,Y+1
000eba 0fea      	ADD  R30,R26
000ebb 93ea      	ST   -Y,R30
000ebc 940e 0e92 	CALL __lcd_write_data
000ebe 81e9      	LDD  R30,Y+1
000ebf 93e0 072a 	STS  __lcd_x,R30
000ec1 81e8      	LD   R30,Y
000ec2 93e0 072b 	STS  __lcd_y,R30
000ec4 9622      	ADIW R28,2
000ec5 9508      	RET
                 _lcd_clear:
000ec6 940e 0e77 	CALL __lcd_ready
000ec8 e0e2      	LDI  R30,LOW(2)
000ec9 93ea      	ST   -Y,R30
000eca 940e 0e92 	CALL __lcd_write_data
000ecc 940e 0e77 	CALL __lcd_ready
000ece e0ec      	LDI  R30,LOW(12)
000ecf 93ea      	ST   -Y,R30
000ed0 940e 0e92 	CALL __lcd_write_data
000ed2 940e 0e77 	CALL __lcd_ready
000ed4 e0e1      	LDI  R30,LOW(1)
000ed5 93ea      	ST   -Y,R30
000ed6 940e 0e92 	CALL __lcd_write_data
000ed8 e0e0      	LDI  R30,LOW(0)
000ed9 93e0 072b 	STS  __lcd_y,R30
000edb 93e0 072a 	STS  __lcd_x,R30
000edd 9508      	RET
                 _lcd_putchar:
000ede 93ef          push r30
000edf 93ff          push r31
000ee0 81a8          ld   r26,y
000ee1 9468          set
000ee2 30aa          cpi  r26,10
000ee3 f039          breq __lcd_putchar1
000ee4 94e8          clt
000ee5 91e0 072c 	LDS  R30,__lcd_maxx
000ee7 91a0 072a 	LDS  R26,__lcd_x
000ee9 17ae      	CP   R26,R30
000eea f060      	BRLO _0x2020004
                 	__lcd_putchar1:
000eeb 91e0 072b 	LDS  R30,__lcd_y
000eed 5fef      	SUBI R30,-LOW(1)
000eee 93e0 072b 	STS  __lcd_y,R30
000ef0 e0e0      	LDI  R30,LOW(0)
000ef1 93ea      	ST   -Y,R30
000ef2 91e0 072b 	LDS  R30,__lcd_y
000ef4 93ea      	ST   -Y,R30
000ef5 dfbc      	RCALL _lcd_gotoxy
000ef6 f056      	brts __lcd_putchar0
                 _0x2020004:
000ef7 91e0 072a 	LDS  R30,__lcd_x
000ef9 5fef      	SUBI R30,-LOW(1)
000efa 93e0 072a 	STS  __lcd_x,R30
000efc df7a          rcall __lcd_ready
000efd 9a90          sbi  __lcd_port,__lcd_rs ;RS=1
000efe 81a8          ld   r26,y
000eff 93aa          st   -y,r26
000f00 df91          rcall __lcd_write_data
                 __lcd_putchar0:
000f01 91ff          pop  r31
000f02 91ef          pop  r30
000f03 940c 0f66 	JMP  _0x2080001
                 _lcd_puts:
000f05 931a      	ST   -Y,R17
                 _0x2020005:
000f06 81a9      	LDD  R26,Y+1
000f07 81ba      	LDD  R27,Y+1+1
000f08 91ed      	LD   R30,X+
000f09 83a9      	STD  Y+1,R26
000f0a 83ba      	STD  Y+1+1,R27
000f0b 2f1e      	MOV  R17,R30
000f0c 30e0      	CPI  R30,0
000f0d f019      	BREQ _0x2020007
000f0e 931a      	ST   -Y,R17
000f0f dfce      	RCALL _lcd_putchar
000f10 cff5      	RJMP _0x2020005
                 _0x2020007:
000f11 c00e      	RJMP _0x2080002
                 _lcd_putsf:
000f12 931a      	ST   -Y,R17
                 _0x2020008:
000f13 81e9      	LDD  R30,Y+1
000f14 81fa      	LDD  R31,Y+1+1
000f15 9631      	ADIW R30,1
000f16 83e9      	STD  Y+1,R30
000f17 83fa      	STD  Y+1+1,R31
000f18 9731      	SBIW R30,1
000f19 91e4      	LPM  R30,Z
000f1a 2f1e      	MOV  R17,R30
000f1b 30e0      	CPI  R30,0
000f1c f019      	BREQ _0x202000A
000f1d 931a      	ST   -Y,R17
000f1e dfbf      	RCALL _lcd_putchar
000f1f cff3      	RJMP _0x2020008
                 _0x202000A:
                 _0x2080002:
000f20 8118      	LDD  R17,Y+0
000f21 9623      	ADIW R28,3
000f22 9508      	RET
                 __long_delay_G101:
000f23 27aa          clr   r26
000f24 27bb          clr   r27
                 __long_delay0:
000f25 9711          sbiw  r26,1         ;2 cycles
000f26 f7f1          brne  __long_delay0 ;2 cycles
000f27 9508      	RET
                 __lcd_init_write_G101:
000f28 9891          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000f29 b3a1          in    r26,__lcd_direction
000f2a 6fa7          ori   r26,0xf7                ;set as output
000f2b bba1          out   __lcd_direction,r26
000f2c b3b2          in    r27,__lcd_port
000f2d 70bf          andi  r27,0xf
000f2e 81a8          ld    r26,y
000f2f 940e 0e88 	CALL __lcd_write_nibble_G101
000f31 9a91          sbi   __lcd_port,__lcd_rd     ;RD=1
000f32 c033      	RJMP _0x2080001
                 _lcd_init:
000f33 9892          cbi   __lcd_port,__lcd_enable ;EN=0
000f34 9890          cbi   __lcd_port,__lcd_rs     ;RS=0
000f35 81e8      	LD   R30,Y
000f36 93e0 072c 	STS  __lcd_maxx,R30
000f38 58e0      	SUBI R30,-LOW(128)
                +
000f39 93e0 0728+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000f3b 81e8      	LD   R30,Y
000f3c 54e0      	SUBI R30,-LOW(192)
                +
000f3d 93e0 0729+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000f3f 940e 1395 	CALL SUBOPT_0x96
000f41 940e 1395 	CALL SUBOPT_0x96
000f43 940e 1395 	CALL SUBOPT_0x96
000f45 dfdd      	RCALL __long_delay_G101
000f46 e2e0      	LDI  R30,LOW(32)
000f47 93ea      	ST   -Y,R30
000f48 dfdf      	RCALL __lcd_init_write_G101
000f49 dfd9      	RCALL __long_delay_G101
000f4a e2e8      	LDI  R30,LOW(40)
000f4b 940e 139b 	CALL SUBOPT_0x97
000f4d e0e4      	LDI  R30,LOW(4)
000f4e 940e 139b 	CALL SUBOPT_0x97
000f50 e8e5      	LDI  R30,LOW(133)
000f51 940e 139b 	CALL SUBOPT_0x97
000f53 b3a1          in    r26,__lcd_direction
000f54 70af          andi  r26,0xf                 ;set as input
000f55 bba1          out   __lcd_direction,r26
000f56 9a91          sbi   __lcd_port,__lcd_rd     ;RD=1
000f57 940e 0ea9 	CALL _lcd_read_byte0_G101
000f59 30e5      	CPI  R30,LOW(0x5)
000f5a f011      	BREQ _0x202000B
000f5b e0e0      	LDI  R30,LOW(0)
000f5c c009      	RJMP _0x2080001
                 _0x202000B:
000f5d 940e 0e77 	CALL __lcd_ready
000f5f e0e6      	LDI  R30,LOW(6)
000f60 93ea      	ST   -Y,R30
000f61 940e 0e92 	CALL __lcd_write_data
000f63 940e 0ec6 	CALL _lcd_clear
000f65 e0e1      	LDI  R30,LOW(1)
                 _0x2080001:
000f66 9621      	ADIW R28,1
000f67 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
000f68 91a9          ld   r26,y+
000f69 91b9          ld   r27,y+
000f6a 27ee          clr  r30
000f6b 27ff          clr  r31
                 strlen0:
000f6c 916d          ld   r22,x+
000f6d 2366          tst  r22
000f6e f011          breq strlen1
000f6f 9631          adiw r30,1
000f70 cffb          rjmp strlen0
                 strlen1:
000f71 9508          ret
                 _strlenf:
000f72 27aa          clr  r26
000f73 27bb          clr  r27
000f74 91e9          ld   r30,y+
000f75 91f9          ld   r31,y+
                 strlenf0:
000f76 9005      	lpm  r0,z+
000f77 2000          tst  r0
000f78 f011          breq strlenf1
000f79 9611          adiw r26,1
000f7a cffb          rjmp strlenf0
                 strlenf1:
000f7b 01fd          movw r30,r26
000f7c 9508          ret
                 
                 	.DSEG
                 _sam_num:
000500           	.BYTE 0x1
                 _i:
000501           	.BYTE 0x2
                 _lcd_data:
000503           	.BYTE 0x28
                 _mux:
00052b           	.BYTE 0x1
                 _d_flag:
00052c           	.BYTE 0x1
                 _pressure_data:
00052d           	.BYTE 0xC8
                 _pressure_sum:
0005f5           	.BYTE 0x8
                 _pressure_mean:
0005fd           	.BYTE 0x4
                 _flex_data:
000601           	.BYTE 0xC8
                 _flex_sum:
0006c9           	.BYTE 0x8
                 _flex_mean:
0006d1           	.BYTE 0x4
                 _flex_max:
0006d5           	.BYTE 0x4
                 _flex_min:
0006d9           	.BYTE 0x4
                 _pressure_max:
0006dd           	.BYTE 0x4
                 _pressure_min:
0006e1           	.BYTE 0x4
                 _E_flag:
0006e5           	.BYTE 0x4
                 _F_flag:
0006e9           	.BYTE 0x4
                 _Global_Sequence:
0006ed           	.BYTE 0x1
                 _arrived:
0006ee           	.BYTE 0x8
                 _kp:
0006f6           	.BYTE 0x4
                 _ki:
0006fa           	.BYTE 0x4
                 _kd:
0006fe           	.BYTE 0x4
                 _error_old:
000702           	.BYTE 0x10
                 _error_sum:
000712           	.BYTE 0x10
                 _ang_old:
000722           	.BYTE 0x4
                 __base_y_G101:
000726           	.BYTE 0x4
                 __lcd_x:
00072a           	.BYTE 0x1
                 __lcd_y:
00072b           	.BYTE 0x1
                 __lcd_maxx:
00072c           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x0:
000f7d 920a      	ST   -Y,R0
000f7e 921a      	ST   -Y,R1
000f7f 93aa      	ST   -Y,R26
000f80 93ba      	ST   -Y,R27
000f81 93ea      	ST   -Y,R30
000f82 93fa      	ST   -Y,R31
000f83 b7ef      	IN   R30,SREG
000f84 93ea      	ST   -Y,R30
000f85 91e0 06ed 	LDS  R30,_Global_Sequence
000f87 eeae      	LDI  R26,LOW(_arrived)
000f88 e0b6      	LDI  R27,HIGH(_arrived)
000f89 e0f0      	LDI  R31,0
000f8a 0fee      	LSL  R30
000f8b 1fff      	ROL  R31
000f8c 0fae      	ADD  R26,R30
000f8d 1fbf      	ADC  R27,R31
000f8e 940e 15b8 	CALL __GETW1P
000f90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
000f91 81ea      	LDD  R30,Y+2
000f92 efa5      	LDI  R26,LOW(_pressure_sum)
000f93 e0b5      	LDI  R27,HIGH(_pressure_sum)
000f94 e0f0      	LDI  R31,0
000f95 0fee      	LSL  R30
000f96 1fff      	ROL  R31
000f97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2:
000f98 0fea      	ADD  R30,R26
000f99 1ffb      	ADC  R31,R27
000f9a 01cf      	MOVW R24,R30
000f9b 8160      	LD   R22,Z
000f9c 8171      	LDD  R23,Z+1
000f9d 81ea      	LDD  R30,Y+2
000f9e e3a2      	LDI  R26,LOW(50)
000f9f 9fea      	MUL  R30,R26
000fa0 01f0      	MOVW R30,R0
000fa1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3:
000fa2 01df      	MOVW R26,R30
000fa3 27ee      	CLR  R30
000fa4 0fa1      	ADD  R26,R17
000fa5 1fbe      	ADC  R27,R30
000fa6 91ec      	LD   R30,X
000fa7 e0f0      	LDI  R31,0
000fa8 0fe6      	ADD  R30,R22
000fa9 1ff7      	ADC  R31,R23
000faa 01dc      	MOVW R26,R24
000fab 93ed      	ST   X+,R30
000fac 93fc      	ST   X,R31
000fad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
000fae 81ea      	LDD  R30,Y+2
000faf e0f0      	LDI  R31,0
000fb0 50e3      	SUBI R30,LOW(-_pressure_mean)
000fb1 4ffa      	SBCI R31,HIGH(-_pressure_mean)
000fb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
000fb3 0fae      	ADD  R26,R30
000fb4 1fbf      	ADC  R27,R31
000fb5 940e 15b8 	CALL __GETW1P
000fb7 01df      	MOVW R26,R30
000fb8 e3e2      	LDI  R30,LOW(50)
000fb9 e0f0      	LDI  R31,HIGH(50)
000fba 940e 1592 	CALL __DIVW21U
000fbc 01db      	MOVW R26,R22
000fbd 93ec      	ST   X,R30
000fbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
000fbf 0fae      	ADD  R26,R30
000fc0 1fbf      	ADC  R27,R31
000fc1 e0e0      	LDI  R30,LOW(0)
000fc2 e0f0      	LDI  R31,HIGH(0)
000fc3 93ed      	ST   X+,R30
000fc4 93fc      	ST   X,R31
000fc5 93e0 052c 	STS  _d_flag,R30
000fc7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x7:
000fc8 81ea      	LDD  R30,Y+2
000fc9 e0f0      	LDI  R31,0
000fca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
000fcb 010f      	MOVW R0,R30
000fcc 50e3      	SUBI R30,LOW(-_pressure_mean)
000fcd 4ffa      	SBCI R31,HIGH(-_pressure_mean)
000fce 81a0      	LD   R26,Z
000fcf 01f0      	MOVW R30,R0
000fd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
000fd1 81aa      	LDD  R26,Y+2
000fd2 e0b0      	LDI  R27,0
000fd3 50a3      	SUBI R26,LOW(-_pressure_mean)
000fd4 4fba      	SBCI R27,HIGH(-_pressure_mean)
000fd5 cff2      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0xA:
000fd6 931a      	ST   -Y,R17
000fd7 e010      	LDI  R17,0
000fd8 e3e2      	LDI  R30,LOW(50)
000fd9 e0f0      	LDI  R31,HIGH(50)
000fda 93fa      	ST   -Y,R31
000fdb 93ea      	ST   -Y,R30
000fdc 940c 13a0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 29 TIMES, CODE SIZE REDUCTION:165 WORDS
                 SUBOPT_0xB:
000fde 940e 0ec6 	CALL _lcd_clear
000fe0 e0e0      	LDI  R30,LOW(0)
000fe1 93ea      	ST   -Y,R30
000fe2 93ea      	ST   -Y,R30
000fe3 940c 0eb2 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
                +
000fe5 e0e2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000fe6 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000fe7 93fa      	ST   -Y,R31
000fe8 93ea      	ST   -Y,R30
000fe9 940c 0f12 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0xD:
000feb e0e0      	LDI  R30,LOW(0)
000fec 93ea      	ST   -Y,R30
000fed e0e1      	LDI  R30,LOW(1)
000fee 93ea      	ST   -Y,R30
000fef 940e 0eb2 	CALL _lcd_gotoxy
000ff1 e0e3      	LDI  R30,LOW(_lcd_data)
000ff2 e0f5      	LDI  R31,HIGH(_lcd_data)
000ff3 93fa      	ST   -Y,R31
000ff4 93ea      	ST   -Y,R30
                +
000ff5 e0ea     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
000ff6 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
000ff7 93fa      	ST   -Y,R31
000ff8 93ea      	ST   -Y,R30
000ff9 2fe1      	MOV  R30,R17
000ffa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:244 WORDS
                 SUBOPT_0xE:
000ffb 27ff      	CLR  R31
000ffc 2766      	CLR  R22
000ffd 2777      	CLR  R23
000ffe 940e 15da 	CALL __PUTPARD1
001000 e084      	LDI  R24,4
001001 940e 0e3d 	CALL _sprintf
001003 9628      	ADIW R28,8
001004 e0e3      	LDI  R30,LOW(_lcd_data)
001005 e0f5      	LDI  R31,HIGH(_lcd_data)
001006 93fa      	ST   -Y,R31
001007 93ea      	ST   -Y,R30
001008 940c 0f05 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0xF:
00100a e0e4      	LDI  R30,LOW(4)
00100b 93ea      	ST   -Y,R30
00100c e0e1      	LDI  R30,LOW(1)
00100d 93ea      	ST   -Y,R30
00100e 940e 0eb2 	CALL _lcd_gotoxy
001010 e0e3      	LDI  R30,LOW(_lcd_data)
001011 e0f5      	LDI  R31,HIGH(_lcd_data)
001012 93fa      	ST   -Y,R31
001013 93ea      	ST   -Y,R30
                +
001014 e0ea     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
001015 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
001016 93fa      	ST   -Y,R31
001017 93ea      	ST   -Y,R30
001018 2fe1      	MOV  R30,R17
001019 e0f0      	LDI  R31,0
00101a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
00101b ece8      	LDI  R30,LOW(200)
00101c e0f0      	LDI  R31,HIGH(200)
00101d 93fa      	ST   -Y,R31
00101e 93ea      	ST   -Y,R30
00101f 940c 13a0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
                +
001021 e0ed     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
001022 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
001023 93fa      	ST   -Y,R31
001024 93ea      	ST   -Y,R30
001025 940c 0f12 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x12:
001027 2fe1      	MOV  R30,R17
001028 e0f0      	LDI  R31,0
001029 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
00102a 2fa1      	MOV  R26,R17
00102b e0b0      	LDI  R27,0
00102c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x14:
00102d e0e7      	LDI  R30,LOW(7)
00102e 93ea      	ST   -Y,R30
00102f e0e0      	LDI  R30,LOW(0)
001030 93ea      	ST   -Y,R30
001031 940e 0eb2 	CALL _lcd_gotoxy
001033 e0e3      	LDI  R30,LOW(_lcd_data)
001034 e0f5      	LDI  R31,HIGH(_lcd_data)
001035 93fa      	ST   -Y,R31
001036 93ea      	ST   -Y,R30
                +
001037 e0ea     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
001038 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
001039 93fa      	ST   -Y,R31
00103a 93ea      	ST   -Y,R30
00103b 2fe1      	MOV  R30,R17
00103c cfbe      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x15:
00103d e6e4      	LDI  R30,LOW(100)
00103e e0f0      	LDI  R31,HIGH(100)
00103f 93fa      	ST   -Y,R31
001040 93ea      	ST   -Y,R30
001041 940c 13a0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x16:
001043 81ea      	LDD  R30,Y+2
001044 eca9      	LDI  R26,LOW(_flex_sum)
001045 e0b6      	LDI  R27,HIGH(_flex_sum)
001046 e0f0      	LDI  R31,0
001047 0fee      	LSL  R30
001048 1fff      	ROL  R31
001049 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x17:
00104a 010f      	MOVW R0,R30
00104b 52ef      	SUBI R30,LOW(-_flex_mean)
00104c 4ff9      	SBCI R31,HIGH(-_flex_mean)
00104d 81a0      	LD   R26,Z
00104e 01f0      	MOVW R30,R0
00104f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
001050 81aa      	LDD  R26,Y+2
001051 e0b0      	LDI  R27,0
001052 52af      	SUBI R26,LOW(-_flex_mean)
001053 4fb9      	SBCI R27,HIGH(-_flex_mean)
001054 cf73      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x19:
001055 93ea      	ST   -Y,R30
001056 940e 0296 	CALL _mean_flex
001058 cfce      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
001059 e0f0      	LDI  R31,0
00105a 52e7      	SUBI R30,LOW(-_flex_min)
00105b 4ff9      	SBCI R31,HIGH(-_flex_min)
00105c 81e0      	LD   R30,Z
00105d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B:
00105e e3e2      	LDI  R30,LOW(50)
00105f e0f0      	LDI  R31,HIGH(50)
001060 93fa      	ST   -Y,R31
001061 93ea      	ST   -Y,R30
001062 940c 13a0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1C:
001064 e1e4      	LDI  R30,LOW(20)
001065 bfe7      	OUT  0x37,R30
001066 93e0 007d 	STS  125,R30
001068 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1D:
                +
001069 e1e5     +LDI R30 , LOW ( 2 * _0x0 + ( 19 ) )
00106a e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW1FN _0x0,19
00106b 93fa      	ST   -Y,R31
00106c 93ea      	ST   -Y,R30
00106d 940e 0f12 	CALL _lcd_putsf
00106f e0e0      	LDI  R30,LOW(0)
001070 93ea      	ST   -Y,R30
001071 e0e1      	LDI  R30,LOW(1)
001072 93ea      	ST   -Y,R30
001073 940e 0eb2 	CALL _lcd_gotoxy
001075 e0e3      	LDI  R30,LOW(_lcd_data)
001076 e0f5      	LDI  R31,HIGH(_lcd_data)
001077 93fa      	ST   -Y,R31
001078 93ea      	ST   -Y,R30
                +
001079 e1ea     +LDI R30 , LOW ( 2 * _0x0 + ( 24 ) )
00107a e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 24 ) )
                 	__POINTW1FN _0x0,24
00107b 93fa      	ST   -Y,R31
00107c 93ea      	ST   -Y,R30
00107d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1E:
00107e e0e0      	LDI  R30,LOW(0)
00107f bfe7      	OUT  0x37,R30
001080 93e0 007d 	STS  125,R30
001082 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1F:
001083 e0e0      	LDI  R30,LOW(0)
001084 bdeb      	OUT  0x2B,R30
001085 bdea      	OUT  0x2A,R30
001086 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x20:
001087 940e 1575 	CALL __ASRW8
001089 bde9      	OUT  0x29,R30
00108a e3a2      	LDI  R26,LOW(50)
00108b 020a      	MULS R16,R26
00108c 01f0      	MOVW R30,R0
00108d bde8      	OUT  0x28,R30
00108e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x21:
00108f 940e 1580 	CALL __CWD1
001091 940e 15da 	CALL __PUTPARD1
001093 e084      	LDI  R24,4
001094 940e 0e3d 	CALL _sprintf
001096 9628      	ADIW R28,8
001097 e0e3      	LDI  R30,LOW(_lcd_data)
001098 e0f5      	LDI  R31,HIGH(_lcd_data)
001099 93fa      	ST   -Y,R31
00109a 93ea      	ST   -Y,R30
00109b 940c 0f05 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x22:
00109d e0e0      	LDI  R30,LOW(0)
00109e bde9      	OUT  0x29,R30
00109f bde8      	OUT  0x28,R30
0010a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x23:
0010a1 2fe1      	MOV  R30,R17
0010a2 e0a1      	LDI  R26,LOW(1)
0010a3 e0b0      	LDI  R27,HIGH(1)
0010a4 940e 1567 	CALL __LSLW12
0010a6 2fa0      	MOV  R26,R16
0010a7 e0b0      	LDI  R27,0
0010a8 23ea      	AND  R30,R26
0010a9 23fb      	AND  R31,R27
0010aa 9730      	SBIW R30,0
0010ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24:
0010ac 51e7      	SUBI R30,LOW(-_F_flag)
0010ad 4ff9      	SBCI R31,HIGH(-_F_flag)
0010ae e0a0      	LDI  R26,LOW(0)
0010af 83a0      	STD  Z+0,R26
0010b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x25:
0010b1 2fe1      	MOV  R30,R17
0010b2 e1a0      	LDI  R26,LOW(16)
0010b3 e0b0      	LDI  R27,HIGH(16)
0010b4 940e 1567 	CALL __LSLW12
0010b6 2fa0      	MOV  R26,R16
0010b7 e0b0      	LDI  R27,0
0010b8 23ea      	AND  R30,R26
0010b9 23fb      	AND  R31,R27
0010ba 9730      	SBIW R30,0
0010bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
0010bc 51eb      	SUBI R30,LOW(-_E_flag)
0010bd 4ff9      	SBCI R31,HIGH(-_E_flag)
0010be e0a0      	LDI  R26,LOW(0)
0010bf 83a0      	STD  Z+0,R26
0010c0 cf66      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x27:
0010c1 93ea      	ST   -Y,R30
0010c2 e0e1      	LDI  R30,LOW(1)
0010c3 93ea      	ST   -Y,R30
0010c4 940c 0eb2 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
0010c6 81e8      	LD   R30,Y
0010c7 e0f0      	LDI  R31,0
0010c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
                +
0010c9 e1ef     +LDI R30 , LOW ( 2 * _0x0 + ( 29 ) )
0010ca e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 29 ) )
                 	__POINTW1FN _0x0,29
0010cb 93fa      	ST   -Y,R31
0010cc 93ea      	ST   -Y,R30
0010cd 940c 0f12 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
                +
0010cf e2e1     +LDI R30 , LOW ( 2 * _0x0 + ( 31 ) )
0010d0 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 31 ) )
                 	__POINTW1FN _0x0,31
0010d1 93fa      	ST   -Y,R31
0010d2 93ea      	ST   -Y,R30
0010d3 940c 0f12 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B:
0010d5 010f      	MOVW R0,R30
0010d6 51eb      	SUBI R30,LOW(-_E_flag)
0010d7 4ff9      	SBCI R31,HIGH(-_E_flag)
0010d8 81a0      	LD   R26,Z
0010d9 30a0      	CPI  R26,LOW(0x0)
0010da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2C:
0010db 01f0      	MOVW R30,R0
0010dc 51e7      	SUBI R30,LOW(-_F_flag)
0010dd 4ff9      	SBCI R31,HIGH(-_F_flag)
0010de 81a0      	LD   R26,Z
0010df 30a0      	CPI  R26,LOW(0x0)
0010e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
                +
0010e1 e2e3     +LDI R30 , LOW ( 2 * _0x0 + ( 33 ) )
0010e2 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 33 ) )
                 	__POINTW1FN _0x0,33
0010e3 93fa      	ST   -Y,R31
0010e4 93ea      	ST   -Y,R30
0010e5 940c 0f12 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0x2E:
0010e7 93fa      	ST   -Y,R31
0010e8 93ea      	ST   -Y,R30
0010e9 940c 0f12 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2F:
0010eb e0e2      	LDI  R30,LOW(2)
0010ec 93ea      	ST   -Y,R30
0010ed e0e0      	LDI  R30,LOW(0)
0010ee 93ea      	ST   -Y,R30
0010ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x30:
0010f0 e0e4      	LDI  R30,LOW(4)
0010f1 93ea      	ST   -Y,R30
0010f2 e0e0      	LDI  R30,LOW(0)
0010f3 93ea      	ST   -Y,R30
0010f4 940c 0eb2 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x31:
0010f6 e0e6      	LDI  R30,LOW(6)
0010f7 93ea      	ST   -Y,R30
0010f8 e0e0      	LDI  R30,LOW(0)
0010f9 93ea      	ST   -Y,R30
0010fa 940c 0eb2 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x32:
0010fc e0e0      	LDI  R30,LOW(0)
0010fd 93ea      	ST   -Y,R30
0010fe 93ea      	ST   -Y,R30
0010ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33:
001100 e0e2      	LDI  R30,LOW(2)
001101 93ea      	ST   -Y,R30
001102 e0e1      	LDI  R30,LOW(1)
001103 93ea      	ST   -Y,R30
001104 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x34:
001105 93ea      	ST   -Y,R30
001106 e0e0      	LDI  R30,LOW(0)
001107 93ea      	ST   -Y,R30
001108 940e 0eb2 	CALL _lcd_gotoxy
00110a e0e3      	LDI  R30,LOW(_lcd_data)
00110b e0f5      	LDI  R31,HIGH(_lcd_data)
00110c 93fa      	ST   -Y,R31
00110d 93ea      	ST   -Y,R30
                +
00110e e0ea     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
00110f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
001110 93fa      	ST   -Y,R31
001111 93ea      	ST   -Y,R30
001112 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x35:
001113 e0e0      	LDI  R30,LOW(0)
001114 93ea      	ST   -Y,R30
001115 91e0 06ed 	LDS  R30,_Global_Sequence
001117 93ea      	ST   -Y,R30
001118 940e 0402 	CALL _disp
00111a e0e5      	LDI  R30,LOW(5)
00111b cfa5      	RJMP SUBOPT_0x27
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x36:
00111c e0e3      	LDI  R30,LOW(_lcd_data)
00111d e0f5      	LDI  R31,HIGH(_lcd_data)
00111e 93fa      	ST   -Y,R31
00111f 93ea      	ST   -Y,R30
                +
001120 e0ea     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
001121 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
001122 93fa      	ST   -Y,R31
001123 93ea      	ST   -Y,R30
001124 91e0 06ed 	LDS  R30,_Global_Sequence
001126 e0f0      	LDI  R31,0
001127 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x37:
001128 91e0 06ed 	LDS  R30,_Global_Sequence
00112a e0f0      	LDI  R31,0
00112b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38:
00112c e0e3      	LDI  R30,LOW(3)
00112d bdeb      	OUT  0x2B,R30
00112e e2e0      	LDI  R30,LOW(32)
00112f bdea      	OUT  0x2A,R30
001130 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x39:
001131 e0e0      	LDI  R30,LOW(0)
001132 93e0 0085 	STS  133,R30
001134 93e0 0084 	STS  132,R30
001136 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3A:
001137 93e0 0501 	STS  _i,R30
001139 93e0 0502 	STS  _i+1,R30
00113b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3B:
00113c 91a0 0501 	LDS  R26,_i
00113e 91b0 0502 	LDS  R27,_i+1
001140 9714      	SBIW R26,4
001141 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x3C:
001142 91e0 0501 	LDS  R30,_i
001144 91f0 0502 	LDS  R31,_i+1
001146 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3D:
001147 51eb      	SUBI R30,LOW(-_E_flag)
001148 4ff9      	SBCI R31,HIGH(-_E_flag)
001149 e0a0      	LDI  R26,LOW(0)
00114a 83a0      	STD  Z+0,R26
00114b dff6      	RCALL SUBOPT_0x3C
00114c cf5f      	RJMP SUBOPT_0x24
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x3E:
00114d e0a1      	LDI  R26,LOW(_i)
00114e e0b5      	LDI  R27,HIGH(_i)
00114f 91ed      	LD   R30,X+
001150 91fd      	LD   R31,X+
001151 9631      	ADIW R30,1
001152 93fe      	ST   -X,R31
001153 93ee      	ST   -X,R30
001154 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3F:
001155 e0e0      	LDI  R30,LOW(0)
001156 bbe8      	OUT  0x18,R30
001157 bbe5      	OUT  0x15,R30
001158 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x40:
001159 e0e3      	LDI  R30,LOW(_lcd_data)
00115a e0f5      	LDI  R31,HIGH(_lcd_data)
00115b 93fa      	ST   -Y,R31
00115c 93ea      	ST   -Y,R30
00115d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x41:
                +
00115e e3ec     +LDI R30 , LOW ( 2 * _0x0 + ( 58 ) )
00115f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 58 ) )
                 	__POINTW1FN _0x0,58
001160 93fa      	ST   -Y,R31
001161 93ea      	ST   -Y,R30
001162 2fe0      	MOV  R30,R16
001163 ce97      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
001164 e3ec      	LDI  R30,LOW(60)
001165 e0f0      	LDI  R31,HIGH(60)
001166 93fa      	ST   -Y,R31
001167 93ea      	ST   -Y,R30
001168 940c 13a0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x43:
00116a 93e0 06ed 	STS  _Global_Sequence,R30
00116c cf16      	RJMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x44:
00116d 940e 1570 	CALL __LSLW2
00116f 0fea      	ADD  R30,R26
001170 1ffb      	ADC  R31,R27
001171 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x45:
001172 eda5      	LDI  R26,LOW(_flex_max)
001173 e0b6      	LDI  R27,HIGH(_flex_max)
001174 0fa0      	ADD  R26,R16
001175 1fb1      	ADC  R27,R17
001176 900c      	LD   R0,X
001177 2411      	CLR  R1
001178 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x46:
001179 0fa0      	ADD  R26,R16
00117a 1fb1      	ADC  R27,R17
00117b 91ac      	LD   R26,X
00117c 27bb      	CLR  R27
00117d 01f0      	MOVW R30,R0
00117e 1bea      	SUB  R30,R26
00117f 0bfb      	SBC  R31,R27
001180 940e 1580 	CALL __CWD1
001182 940e 1412 	CALL __CDF1
001184 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x47:
001185 940e 14ea 	CALL __DIVF21
                +
001187 e0a0     +LDI R26 , LOW ( 0x42700000 )
001188 e0b0     +LDI R27 , HIGH ( 0x42700000 )
001189 e780     +LDI R24 , BYTE3 ( 0x42700000 )
00118a e492     +LDI R25 , BYTE4 ( 0x42700000 )
                 	__GETD2N 0x42700000
00118b 940e 149c 	CALL __MULF12
00118d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x48:
00118e 01de      	MOVW R26,R28
00118f 9614      	ADIW R26,4
001190 940e 1570 	CALL __LSLW2
001192 0fae      	ADD  R26,R30
001193 1fbf      	ADC  R27,R31
001194 940e 15bc 	CALL __GETD1P
001196 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x49:
001197 940e 13db 	CALL __CFD1
001199 cef5      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4A:
                +
00119a e1ea     +LDI R30 , LOW ( 2 * _0x0 + ( 24 ) )
00119b e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 24 ) )
                 	__POINTW1FN _0x0,24
00119c 93fa      	ST   -Y,R31
00119d 93ea      	ST   -Y,R30
00119e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4B:
00119f 2fe0      	MOV  R30,R16
0011a0 e0f0      	LDI  R31,0
0011a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4C:
0011a2 89eb      	LDD  R30,Y+19
0011a3 e0f0      	LDI  R31,0
0011a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4D:
0011a5 51e7      	SUBI R30,LOW(-_F_flag)
0011a6 4ff9      	SBCI R31,HIGH(-_F_flag)
0011a7 81e0      	LD   R30,Z
0011a8 e0f0      	LDI  R31,0
0011a9 9730      	SBIW R30,0
0011aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x4E:
0011ab 81e0      	LD   R30,Z
0011ac e0f0      	LDI  R31,0
0011ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4F:
0011ae 0fae      	ADD  R26,R30
0011af 1fbf      	ADC  R27,R31
0011b0 e0e2      	LDI  R30,LOW(2)
0011b1 e0f0      	LDI  R31,HIGH(2)
0011b2 940e 15a5 	CALL __DIVW21
0011b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x50:
                +
0011b5 85ae     +LDD R26 , Y + 14
0011b6 85bf     +LDD R27 , Y + 14 + 1
0011b7 8988     +LDD R24 , Y + 14 + 2
0011b8 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
0011b9 940e 1580 	CALL __CWD1
0011bb 940e 1412 	CALL __CDF1
0011bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x51:
0011be 81a0      	LD   R26,Z
0011bf e0b0      	LDI  R27,0
0011c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x52:
0011c1 1bea      	SUB  R30,R26
0011c2 0bfb      	SBC  R31,R27
0011c3 940e 1580 	CALL __CWD1
0011c5 940e 1412 	CALL __CDF1
0011c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x53:
0011c8 89eb      	LDD  R30,Y+19
0011c9 e1a2      	LDI  R26,LOW(_error_sum)
0011ca e0b7      	LDI  R27,HIGH(_error_sum)
0011cb e0f0      	LDI  R31,0
0011cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x54:
0011cd 940e 15bc 	CALL __GETD1P
                +
0011cf 81ae     +LDD R26 , Y + 6
0011d0 81bf     +LDD R27 , Y + 6 + 1
0011d1 8588     +LDD R24 , Y + 6 + 2
0011d2 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
0011d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x55:
                +
0011d4 81ee     +LDD R30 , Y + 6
0011d5 81ff     +LDD R31 , Y + 6 + 1
0011d6 8568     +LDD R22 , Y + 6 + 2
0011d7 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
0011d8 91a0 06f6 	LDS  R26,_kp
0011da 91b0 06f7 	LDS  R27,_kp+1
0011dc 9180 06f8 	LDS  R24,_kp+2
0011de 9190 06f9 	LDS  R25,_kp+3
0011e0 940e 149c 	CALL __MULF12
0011e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x56:
0011e3 940e 1570 	CALL __LSLW2
0011e5 0fae      	ADD  R26,R30
0011e6 1fbf      	ADC  R27,R31
0011e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x57:
0011e8 91a0 06fa 	LDS  R26,_ki
0011ea 91b0 06fb 	LDS  R27,_ki+1
0011ec 9180 06fc 	LDS  R24,_ki+2
0011ee 9190 06fd 	LDS  R25,_ki+3
0011f0 940e 149c 	CALL __MULF12
                +
0011f2 e8af     +LDI R26 , LOW ( 0x3D75C28F )
0011f3 ecb2     +LDI R27 , HIGH ( 0x3D75C28F )
0011f4 e785     +LDI R24 , BYTE3 ( 0x3D75C28F )
0011f5 e39d     +LDI R25 , BYTE4 ( 0x3D75C28F )
                 	__GETD2N 0x3D75C28F
0011f6 940e 149c 	CALL __MULF12
0011f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x58:
0011f9 89eb      	LDD  R30,Y+19
0011fa e0a2      	LDI  R26,LOW(_error_old)
0011fb e0b7      	LDI  R27,HIGH(_error_old)
0011fc e0f0      	LDI  R31,0
0011fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x59:
0011fe 940e 15df 	CALL __SWAPD12
001200 940e 1445 	CALL __SUBF12
001202 91a0 06fe 	LDS  R26,_kd
001204 91b0 06ff 	LDS  R27,_kd+1
001206 9180 0700 	LDS  R24,_kd+2
001208 9190 0701 	LDS  R25,_kd+3
00120a 940e 149c 	CALL __MULF12
00120c 01df      	MOVW R26,R30
00120d 01cb      	MOVW R24,R22
                +
00120e e8ef     +LDI R30 , LOW ( 0x3D75C28F )
00120f ecf2     +LDI R31 , HIGH ( 0x3D75C28F )
001210 e765     +LDI R22 , BYTE3 ( 0x3D75C28F )
001211 e37d     +LDI R23 , BYTE4 ( 0x3D75C28F )
                 	__GETD1N 0x3D75C28F
001212 940e 14ea 	CALL __DIVF21
001214 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5A:
001215 940e 144c 	CALL __ADDF12
                +
001217 87ea     +STD Y + 10 , R30
001218 87fb     +STD Y + 10 + 1 , R31
001219 876c     +STD Y + 10 + 2 , R22
00121a 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00121b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5B:
                +
00121c 81ae     +LDD R26 , Y + 6
00121d 81bf     +LDD R27 , Y + 6 + 1
00121e 8588     +LDD R24 , Y + 6 + 2
00121f 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
001220 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5C:
                +
001221 85aa     +LDD R26 , Y + 10
001222 85bb     +LDD R27 , Y + 10 + 1
001223 858c     +LDD R24 , Y + 10 + 2
001224 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
001225 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x5D:
                +
001226 e0e0     +LDI R30 , LOW ( 0x455AC000 )
001227 ecf0     +LDI R31 , HIGH ( 0x455AC000 )
001228 e56a     +LDI R22 , BYTE3 ( 0x455AC000 )
001229 e475     +LDI R23 , BYTE4 ( 0x455AC000 )
                 	__GETD1N 0x455AC000
00122a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5E:
00122b dff5      	RCALL SUBOPT_0x5C
                +
00122c e0e0     +LDI R30 , LOW ( 0x44480000 )
00122d e0f0     +LDI R31 , HIGH ( 0x44480000 )
00122e e468     +LDI R22 , BYTE3 ( 0x44480000 )
00122f e474     +LDI R23 , BYTE4 ( 0x44480000 )
                 	__GETD1N 0x44480000
001230 940e 152f 	CALL __CMPF12
001232 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5F:
                +
001233 e0e0     +LDI R30 , LOW ( 0x44480000 )
001234 e0f0     +LDI R31 , HIGH ( 0x44480000 )
001235 e468     +LDI R22 , BYTE3 ( 0x44480000 )
001236 e474     +LDI R23 , BYTE4 ( 0x44480000 )
                 	__GETD1N 0x44480000
001237 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x60:
001238 89eb      	LDD  R30,Y+19
001239 eeae      	LDI  R26,LOW(_arrived)
00123a e0b6      	LDI  R27,HIGH(_arrived)
00123b e0f0      	LDI  R31,0
00123c 0fee      	LSL  R30
00123d 1fff      	ROL  R31
00123e 0fae      	ADD  R26,R30
00123f 1fbf      	ADC  R27,R31
001240 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x61:
001241 efef      	LDI  R30,LOW(65535)
001242 efff      	LDI  R31,HIGH(65535)
001243 93ed      	ST   X+,R30
001244 93fc      	ST   X,R31
001245 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x62:
                +
001246 85ea     +LDD R30 , Y + 10
001247 85fb     +LDD R31 , Y + 10 + 1
001248 856c     +LDD R22 , Y + 10 + 2
001249 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00124a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x63:
00124b 940e 13db 	CALL __CFD1
00124d 940e 1575 	CALL __ASRW8
00124f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x64:
001250 e0e1      	LDI  R30,LOW(1)
001251 e0f0      	LDI  R31,HIGH(1)
001252 93ed      	ST   X+,R30
001253 93fc      	ST   X,R31
001254 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x65:
001255 dff0      	RCALL SUBOPT_0x62
001256 cff4      	RJMP SUBOPT_0x63
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x66:
001257 e0e0      	LDI  R30,LOW(0)
001258 e0f0      	LDI  R31,HIGH(0)
001259 93ed      	ST   X+,R30
00125a 93fc      	ST   X,R31
00125b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x67:
00125c e1e3      	LDI  R30,LOW(19)
00125d bde9      	OUT  0x29,R30
00125e e5e6      	LDI  R30,LOW(86)
00125f bde8      	OUT  0x28,R30
001260 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x68:
001261 91e0 0501 	LDS  R30,_i
001263 0fee      	LSL  R30
001264 93ea      	ST   -Y,R30
001265 91e0 0501 	LDS  R30,_i
001267 93ea      	ST   -Y,R30
001268 940c 0402 	JMP  _disp
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x69:
00126a 931a      	ST   -Y,R17
00126b e0e1      	LDI  R30,LOW(1)
00126c cde8      	RJMP SUBOPT_0x19
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6A:
00126d 01f0      	MOVW R30,R0
00126e 52eb      	SUBI R30,LOW(-_flex_max)
00126f 4ff9      	SBCI R31,HIGH(-_flex_max)
001270 cf4d      	RJMP SUBOPT_0x51
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6B:
001271 01fb      	MOVW R30,R22
001272 52ef      	SUBI R30,LOW(-_flex_mean)
001273 4ff9      	SBCI R31,HIGH(-_flex_mean)
001274 cf36      	RJMP SUBOPT_0x4E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x6C:
001275 940e 15e5 	CALL __SWAPW12
001277 cf49      	RJMP SUBOPT_0x52
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6D:
001278 01fc      	MOVW R30,R24
001279 52eb      	SUBI R30,LOW(-_flex_max)
00127a 4ff9      	SBCI R31,HIGH(-_flex_max)
00127b cf42      	RJMP SUBOPT_0x51
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6E:
00127c 52e7      	SUBI R30,LOW(-_flex_min)
00127d 4ff9      	SBCI R31,HIGH(-_flex_min)
00127e cf2c      	RJMP SUBOPT_0x4E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6F:
00127f eeae      	LDI  R26,LOW(_arrived)
001280 e0b6      	LDI  R27,HIGH(_arrived)
001281 0fee      	LSL  R30
001282 1fff      	ROL  R31
001283 0fae      	ADD  R26,R30
001284 1fbf      	ADC  R27,R31
001285 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x70:
001286 e0e0      	LDI  R30,LOW(0)
001287 93e0 0087 	STS  135,R30
001289 93e0 0086 	STS  134,R30
00128b bde9      	OUT  0x29,R30
00128c bde8      	OUT  0x28,R30
00128d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x71:
00128e e0f0      	LDI  R31,0
00128f cfe5      	RJMP SUBOPT_0x6C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x72:
001290 81ec      	LDD  R30,Y+4
001291 940e 15cb 	CALL __GETD2S0
001293 27ff      	CLR  R31
001294 2766      	CLR  R22
001295 2777      	CLR  R23
001296 940e 1412 	CALL __CDF1
001298 940e 152f 	CALL __CMPF12
00129a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x73:
00129b 81ee      	LDD  R30,Y+6
00129c eeae      	LDI  R26,LOW(_arrived)
00129d e0b6      	LDI  R27,HIGH(_arrived)
00129e e0f0      	LDI  R31,0
00129f 0fee      	LSL  R30
0012a0 1fff      	ROL  R31
0012a1 0fae      	ADD  R26,R30
0012a2 1fbf      	ADC  R27,R31
0012a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x74:
0012a4 eee8      	LDI  R30,LOW(1000)
0012a5 e0f3      	LDI  R31,HIGH(1000)
0012a6 93fa      	ST   -Y,R31
0012a7 93ea      	ST   -Y,R30
0012a8 940c 13a0 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x75:
0012aa e0eb      	LDI  R30,LOW(11)
0012ab 93e0 0087 	STS  135,R30
0012ad ebe8      	LDI  R30,LOW(184)
0012ae 93e0 0086 	STS  134,R30
0012b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x76:
0012b1 e0e0      	LDI  R30,LOW(0)
0012b2 93ea      	ST   -Y,R30
0012b3 e0e1      	LDI  R30,LOW(1)
0012b4 93ea      	ST   -Y,R30
0012b5 e2e8      	LDI  R30,LOW(40)
0012b6 93ea      	ST   -Y,R30
0012b7 940c 07bd 	JMP  _rehab_move
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x77:
0012b9 e0ea      	LDI  R30,LOW(10)
0012ba 93ea      	ST   -Y,R30
0012bb 940c 07bd 	JMP  _rehab_move
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x78:
0012bd e0e1      	LDI  R30,LOW(1)
0012be 93ea      	ST   -Y,R30
0012bf 93ea      	ST   -Y,R30
0012c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x79:
0012c1 e3ec      	LDI  R30,LOW(60)
0012c2 93ea      	ST   -Y,R30
0012c3 940c 07bd 	JMP  _rehab_move
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7A:
0012c5 e0e1      	LDI  R30,LOW(1)
0012c6 93ea      	ST   -Y,R30
0012c7 e0e0      	LDI  R30,LOW(0)
0012c8 93ea      	ST   -Y,R30
0012c9 cfef      	RJMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7B:
0012ca e2e8      	LDI  R30,LOW(40)
0012cb 93ea      	ST   -Y,R30
0012cc 940c 07bd 	JMP  _rehab_move
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7C:
0012ce e0e3      	LDI  R30,LOW(3)
0012cf 93ea      	ST   -Y,R30
0012d0 e0e1      	LDI  R30,LOW(1)
0012d1 93ea      	ST   -Y,R30
0012d2 cfee      	RJMP SUBOPT_0x79
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7D:
0012d3 e0e3      	LDI  R30,LOW(3)
0012d4 93ea      	ST   -Y,R30
0012d5 e0e0      	LDI  R30,LOW(0)
0012d6 93ea      	ST   -Y,R30
0012d7 cfe1      	RJMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7E:
0012d8 e0e0      	LDI  R30,LOW(0)
0012d9 93ea      	ST   -Y,R30
0012da e0e1      	LDI  R30,LOW(1)
0012db 93ea      	ST   -Y,R30
0012dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x7F:
0012dd 2fe1      	MOV  R30,R17
0012de eeae      	LDI  R26,LOW(_arrived)
0012df e0b6      	LDI  R27,HIGH(_arrived)
0012e0 e0f0      	LDI  R31,0
0012e1 0fee      	LSL  R30
0012e2 1fff      	ROL  R31
0012e3 0fae      	ADD  R26,R30
0012e4 1fbf      	ADC  R27,R31
0012e5 cf6a      	RJMP SUBOPT_0x64
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x80:
0012e6 e1e3      	LDI  R30,LOW(19)
0012e7 bde7      	OUT  0x27,R30
0012e8 e8e7      	LDI  R30,LOW(135)
0012e9 bde6      	OUT  0x26,R30
0012ea e1e3      	LDI  R30,LOW(19)
0012eb 93e0 0081 	STS  129,R30
0012ed e8e7      	LDI  R30,LOW(135)
0012ee 93e0 0080 	STS  128,R30
0012f0 e0e0      	LDI  R30,LOW(0)
0012f1 ce78      	RJMP SUBOPT_0x43
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x81:
0012f2 e0e0      	LDI  R30,LOW(0)
0012f3 93e0 0087 	STS  135,R30
0012f5 93e0 0086 	STS  134,R30
0012f7 cda5      	RJMP SUBOPT_0x22
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x82:
0012f8 93e0 06e5 	STS  _E_flag,R30
0012fa e0e0      	LDI  R30,LOW(0)
0012fb 93e0 06e9 	STS  _F_flag,R30
0012fd ce57      	RJMP SUBOPT_0x3F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x83:
0012fe e010      	LDI  R17,0
0012ff e00f      	LDI  R16,15
                +
001300 ea2c     +LDI R18 , LOW ( 3500 )
001301 e03d     +LDI R19 , HIGH ( 3500 )
                 	__GETWRN 18,19,3500
001302 cd5b      	RJMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x84:
001303 01f9      	MOVW R30,R18
001304 940e 1575 	CALL __ASRW8
001306 bdeb      	OUT  0x2B,R30
001307 bd2a      	OUT  0x2A,R18
001308 940c 0ec6 	JMP  _lcd_clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x85:
00130a 2fa0      	MOV  R26,R16
00130b 27bb      	CLR  R27
                +
00130c 91e0 0724+LDS R30 , _ang_old + ( 2 )
                 	__GETB1MN _ang_old,2
00130e cf7f      	RJMP SUBOPT_0x71
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x86:
                +
00130f 91e0 071a+LDS R30 , _error_sum + ( 8 )
001311 91f0 071b+LDS R31 , _error_sum + ( 8 ) + 1
001313 9160 071c+LDS R22 , _error_sum + ( 8 ) + 2
001315 9170 071d+LDS R23 , _error_sum + ( 8 ) + 3
                 	__GETD1MN _error_sum,8
001317 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x87:
001318 940e 144c 	CALL __ADDF12
                +
00131a 93e0 071a+STS _error_sum + ( 8 ) , R30
00131c 93f0 071b+STS _error_sum + ( 8 ) + 1 , R31
00131e 9360 071c+STS _error_sum + ( 8 ) + 2 , R22
001320 9370 071d+STS _error_sum + ( 8 ) + 3 , R23
                 	__PUTD1MN _error_sum,8
001322 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x88:
                +
001323 91e0 070a+LDS R30 , _error_old + ( 8 )
001325 91f0 070b+LDS R31 , _error_old + ( 8 ) + 1
001327 9160 070c+LDS R22 , _error_old + ( 8 ) + 2
001329 9170 070d+LDS R23 , _error_old + ( 8 ) + 3
                 	__GETD1MN _error_old,8
00132b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x89:
                +
00132c 93e0 070a+STS _error_old + ( 8 ) , R30
00132e 93f0 070b+STS _error_old + ( 8 ) + 1 , R31
001330 9360 070c+STS _error_old + ( 8 ) + 2 , R22
001332 9370 070d+STS _error_old + ( 8 ) + 3 , R23
                 	__PUTD1MN _error_old,8
                +
001334 e2a4     +LDI R26 , LOW ( _ang_old + ( 2 ) )
001335 e0b7     +LDI R27 , HIGH ( _ang_old + ( 2 ) )
                 	__POINTW2MN _ang_old,2
001336 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8A:
001337 940e 0eb2 	CALL _lcd_gotoxy
001339 ce1f      	RJMP SUBOPT_0x40
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8B:
00133a 9632      	ADIW R30,2
                +
00133b 89ac     +LDD R26 , Y + 20
00133c 89bd     +LDD R27 , Y + 20 + 1
00133d 898e     +LDD R24 , Y + 20 + 2
00133e 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
00133f 940e 1580 	CALL __CWD1
001341 940e 1412 	CALL __CDF1
001343 940e 152f 	CALL __CMPF12
001345 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8C:
                +
001346 85e8     +LDD R30 , Y + 8
001347 85f9     +LDD R31 , Y + 8 + 1
001348 856a     +LDD R22 , Y + 8 + 2
001349 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00134a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8D:
00134b 9732      	SBIW R30,2
                +
00134c 89ac     +LDD R26 , Y + 20
00134d 89bd     +LDD R27 , Y + 20 + 1
00134e 898e     +LDD R24 , Y + 20 + 2
00134f 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
001350 940e 1580 	CALL __CWD1
001352 940e 1412 	CALL __CDF1
001354 940e 152f 	CALL __CMPF12
001356 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x8E:
001357 bfe7      	OUT  0x37,R30
001358 e0e0      	LDI  R30,LOW(0)
001359 93e0 007d 	STS  125,R30
00135b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x8F:
                +
00135c 89ae     +LDD R26 , Y + 22
00135d 89bf     +LDD R27 , Y + 22 + 1
00135e 8d88     +LDD R24 , Y + 22 + 2
00135f 8d99     +LDD R25 , Y + 22 + 3
                 	__GETD2S 22
001360 940e 1580 	CALL __CWD1
001362 940e 1412 	CALL __CDF1
001364 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x90:
001365 932a      	ST   -Y,R18
001366 85ed      	LDD  R30,Y+13
001367 85fe      	LDD  R31,Y+13+1
001368 93fa      	ST   -Y,R31
001369 93ea      	ST   -Y,R30
00136a 89e9      	LDD  R30,Y+17
00136b 89fa      	LDD  R31,Y+17+1
00136c 9509      	ICALL
00136d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x91:
00136e 89e8      	LDD  R30,Y+16
00136f 89f9      	LDD  R31,Y+16+1
001370 9734      	SBIW R30,4
001371 8be8      	STD  Y+16,R30
001372 8bf9      	STD  Y+16+1,R31
001373 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x92:
001374 85ed      	LDD  R30,Y+13
001375 85fe      	LDD  R31,Y+13+1
001376 93fa      	ST   -Y,R31
001377 93ea      	ST   -Y,R30
001378 89e9      	LDD  R30,Y+17
001379 89fa      	LDD  R31,Y+17+1
00137a 9509      	ICALL
00137b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x93:
00137c 89a8      	LDD  R26,Y+16
00137d 89b9      	LDD  R27,Y+16+1
00137e 9614      	ADIW R26,4
00137f 940e 15b8 	CALL __GETW1P
001381 83ee      	STD  Y+6,R30
001382 83ff      	STD  Y+6+1,R31
001383 93fa      	ST   -Y,R31
001384 93ea      	ST   -Y,R30
001385 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x94:
001386 89a8      	LDD  R26,Y+16
001387 89b9      	LDD  R27,Y+16+1
001388 9614      	ADIW R26,4
001389 940e 15b8 	CALL __GETW1P
00138b 87ea      	STD  Y+10,R30
00138c 87fb      	STD  Y+10+1,R31
00138d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x95:
00138e 01de      	MOVW R26,R28
00138f 961c      	ADIW R26,12
001390 940e 154f 	CALL __ADDW2R15
001392 940e 15b8 	CALL __GETW1P
001394 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x96:
001395 940e 0f23 	CALL __long_delay_G101
001397 e3e0      	LDI  R30,LOW(48)
001398 93ea      	ST   -Y,R30
001399 940c 0f28 	JMP  __lcd_init_write_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x97:
00139b 93ea      	ST   -Y,R30
00139c 940e 0e92 	CALL __lcd_write_data
00139e 940c 0f23 	JMP  __long_delay_G101
                 
                 
                 	.CSEG
                 _delay_ms:
0013a0 91e9      	ld   r30,y+
0013a1 91f9      	ld   r31,y+
0013a2 9630      	adiw r30,0
0013a3 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0013a4 ea80     +LDI R24 , LOW ( 0xFA0 )
0013a5 e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
0013a6 9701     +SBIW R24 , 1
0013a7 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
0013a8 95a8      	wdr
0013a9 9731      	sbiw r30,1
0013aa f7c9      	brne __delay_ms0
                 __delay_ms1:
0013ab 9508      	ret
                 
                 __ROUND_REPACK:
0013ac 2355      	TST  R21
0013ad f442      	BRPL __REPACK
0013ae 3850      	CPI  R21,0x80
0013af f411      	BRNE __ROUND_REPACK0
0013b0 ffe0      	SBRS R30,0
0013b1 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0013b2 9631      	ADIW R30,1
0013b3 1f69      	ADC  R22,R25
0013b4 1f79      	ADC  R23,R25
0013b5 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0013b6 e850      	LDI  R21,0x80
0013b7 2757      	EOR  R21,R23
0013b8 f411      	BRNE __REPACK0
0013b9 935f      	PUSH R21
0013ba c0cf      	RJMP __ZERORES
                 __REPACK0:
0013bb 3f5f      	CPI  R21,0xFF
0013bc f031      	BREQ __REPACK1
0013bd 0f66      	LSL  R22
0013be 0c00      	LSL  R0
0013bf 9557      	ROR  R21
0013c0 9567      	ROR  R22
0013c1 2f75      	MOV  R23,R21
0013c2 9508      	RET
                 __REPACK1:
0013c3 935f      	PUSH R21
0013c4 2000      	TST  R0
0013c5 f00a      	BRMI __REPACK2
0013c6 c0cf      	RJMP __MAXRES
                 __REPACK2:
0013c7 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0013c8 e850      	LDI  R21,0x80
0013c9 2e19      	MOV  R1,R25
0013ca 2215      	AND  R1,R21
0013cb 0f88      	LSL  R24
0013cc 1f99      	ROL  R25
0013cd 2795      	EOR  R25,R21
0013ce 0f55      	LSL  R21
0013cf 9587      	ROR  R24
                 
                 __UNPACK1:
0013d0 e850      	LDI  R21,0x80
0013d1 2e07      	MOV  R0,R23
0013d2 2205      	AND  R0,R21
0013d3 0f66      	LSL  R22
0013d4 1f77      	ROL  R23
0013d5 2775      	EOR  R23,R21
0013d6 0f55      	LSL  R21
0013d7 9567      	ROR  R22
0013d8 9508      	RET
                 
                 __CFD1U:
0013d9 9468      	SET
0013da c001      	RJMP __CFD1U0
                 __CFD1:
0013db 94e8      	CLT
                 __CFD1U0:
0013dc 935f      	PUSH R21
0013dd dff2      	RCALL __UNPACK1
0013de 3870      	CPI  R23,0x80
0013df f018      	BRLO __CFD10
0013e0 3f7f      	CPI  R23,0xFF
0013e1 f408      	BRCC __CFD10
0013e2 c0a7      	RJMP __ZERORES
                 __CFD10:
0013e3 e156      	LDI  R21,22
0013e4 1b57      	SUB  R21,R23
0013e5 f4aa      	BRPL __CFD11
0013e6 9551      	NEG  R21
0013e7 3058      	CPI  R21,8
0013e8 f40e      	BRTC __CFD19
0013e9 3059      	CPI  R21,9
                 __CFD19:
0013ea f030      	BRLO __CFD17
0013eb efef      	SER  R30
0013ec efff      	SER  R31
0013ed ef6f      	SER  R22
0013ee e77f      	LDI  R23,0x7F
0013ef f977      	BLD  R23,7
0013f0 c01a      	RJMP __CFD15
                 __CFD17:
0013f1 2777      	CLR  R23
0013f2 2355      	TST  R21
0013f3 f0b9      	BREQ __CFD15
                 __CFD18:
0013f4 0fee      	LSL  R30
0013f5 1fff      	ROL  R31
0013f6 1f66      	ROL  R22
0013f7 1f77      	ROL  R23
0013f8 955a      	DEC  R21
0013f9 f7d1      	BRNE __CFD18
0013fa c010      	RJMP __CFD15
                 __CFD11:
0013fb 2777      	CLR  R23
                 __CFD12:
0013fc 3058      	CPI  R21,8
0013fd f028      	BRLO __CFD13
0013fe 2fef      	MOV  R30,R31
0013ff 2ff6      	MOV  R31,R22
001400 2f67      	MOV  R22,R23
001401 5058      	SUBI R21,8
001402 cff9      	RJMP __CFD12
                 __CFD13:
001403 2355      	TST  R21
001404 f031      	BREQ __CFD15
                 __CFD14:
001405 9576      	LSR  R23
001406 9567      	ROR  R22
001407 95f7      	ROR  R31
001408 95e7      	ROR  R30
001409 955a      	DEC  R21
00140a f7d1      	BRNE __CFD14
                 __CFD15:
00140b 2000      	TST  R0
00140c f40a      	BRPL __CFD16
00140d d149      	RCALL __ANEGD1
                 __CFD16:
00140e 915f      	POP  R21
00140f 9508      	RET
                 
                 __CDF1U:
001410 9468      	SET
001411 c001      	RJMP __CDF1U0
                 __CDF1:
001412 94e8      	CLT
                 __CDF1U0:
001413 9730      	SBIW R30,0
001414 4060      	SBCI R22,0
001415 4070      	SBCI R23,0
001416 f0b1      	BREQ __CDF10
001417 2400      	CLR  R0
001418 f026      	BRTS __CDF11
001419 2377      	TST  R23
00141a f412      	BRPL __CDF11
00141b 9400      	COM  R0
00141c d13a      	RCALL __ANEGD1
                 __CDF11:
00141d 2e17      	MOV  R1,R23
00141e e17e      	LDI  R23,30
00141f 2011      	TST  R1
                 __CDF12:
001420 f032      	BRMI __CDF13
001421 957a      	DEC  R23
001422 0fee      	LSL  R30
001423 1fff      	ROL  R31
001424 1f66      	ROL  R22
001425 1c11      	ROL  R1
001426 cff9      	RJMP __CDF12
                 __CDF13:
001427 2fef      	MOV  R30,R31
001428 2ff6      	MOV  R31,R22
001429 2d61      	MOV  R22,R1
00142a 935f      	PUSH R21
00142b df8a      	RCALL __REPACK
00142c 915f      	POP  R21
                 __CDF10:
00142d 9508      	RET
                 
                 __SWAPACC:
00142e 934f      	PUSH R20
00142f 01af      	MOVW R20,R30
001430 01fd      	MOVW R30,R26
001431 01da      	MOVW R26,R20
001432 01ab      	MOVW R20,R22
001433 01bc      	MOVW R22,R24
001434 01ca      	MOVW R24,R20
001435 2d40      	MOV  R20,R0
001436 2c01      	MOV  R0,R1
001437 2e14      	MOV  R1,R20
001438 914f      	POP  R20
001439 9508      	RET
                 
                 __UADD12:
00143a 0fea      	ADD  R30,R26
00143b 1ffb      	ADC  R31,R27
00143c 1f68      	ADC  R22,R24
00143d 9508      	RET
                 
                 __NEGMAN1:
00143e 95e0      	COM  R30
00143f 95f0      	COM  R31
001440 9560      	COM  R22
001441 5fef      	SUBI R30,-1
001442 4fff      	SBCI R31,-1
001443 4f6f      	SBCI R22,-1
001444 9508      	RET
                 
                 __SUBF12:
001445 935f      	PUSH R21
001446 df81      	RCALL __UNPACK
001447 3890      	CPI  R25,0x80
001448 f171      	BREQ __ADDF129
001449 e850      	LDI  R21,0x80
00144a 2615      	EOR  R1,R21
                 
00144b c004      	RJMP __ADDF120
                 
                 __ADDF12:
00144c 935f      	PUSH R21
00144d df7a      	RCALL __UNPACK
00144e 3890      	CPI  R25,0x80
00144f f139      	BREQ __ADDF129
                 
                 __ADDF120:
001450 3870      	CPI  R23,0x80
001451 f121      	BREQ __ADDF128
                 __ADDF121:
001452 2f57      	MOV  R21,R23
001453 1b59      	SUB  R21,R25
001454 f12b      	BRVS __ADDF1211
001455 f412      	BRPL __ADDF122
001456 dfd7      	RCALL __SWAPACC
001457 cffa      	RJMP __ADDF121
                 __ADDF122:
001458 3158      	CPI  R21,24
001459 f018      	BRLO __ADDF123
00145a 27aa      	CLR  R26
00145b 27bb      	CLR  R27
00145c 2788      	CLR  R24
                 __ADDF123:
00145d 3058      	CPI  R21,8
00145e f028      	BRLO __ADDF124
00145f 2fab      	MOV  R26,R27
001460 2fb8      	MOV  R27,R24
001461 2788      	CLR  R24
001462 5058      	SUBI R21,8
001463 cff9      	RJMP __ADDF123
                 __ADDF124:
001464 2355      	TST  R21
001465 f029      	BREQ __ADDF126
                 __ADDF125:
001466 9586      	LSR  R24
001467 95b7      	ROR  R27
001468 95a7      	ROR  R26
001469 955a      	DEC  R21
00146a f7d9      	BRNE __ADDF125
                 __ADDF126:
00146b 2d50      	MOV  R21,R0
00146c 2551      	EOR  R21,R1
00146d f072      	BRMI __ADDF127
00146e dfcb      	RCALL __UADD12
00146f f438      	BRCC __ADDF129
001470 9567      	ROR  R22
001471 95f7      	ROR  R31
001472 95e7      	ROR  R30
001473 9573      	INC  R23
001474 f413      	BRVC __ADDF129
001475 c020      	RJMP __MAXRES
                 __ADDF128:
001476 dfb7      	RCALL __SWAPACC
                 __ADDF129:
001477 df3e      	RCALL __REPACK
001478 915f      	POP  R21
001479 9508      	RET
                 __ADDF1211:
00147a f7d8      	BRCC __ADDF128
00147b cffb      	RJMP __ADDF129
                 __ADDF127:
00147c 1bea      	SUB  R30,R26
00147d 0bfb      	SBC  R31,R27
00147e 0b68      	SBC  R22,R24
00147f f051      	BREQ __ZERORES
001480 f410      	BRCC __ADDF1210
001481 9400      	COM  R0
001482 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
001483 2366      	TST  R22
001484 f392      	BRMI __ADDF129
001485 0fee      	LSL  R30
001486 1fff      	ROL  R31
001487 1f66      	ROL  R22
001488 957a      	DEC  R23
001489 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00148a 27ee      	CLR  R30
00148b 27ff      	CLR  R31
00148c 2766      	CLR  R22
00148d 2777      	CLR  R23
00148e 915f      	POP  R21
00148f 9508      	RET
                 
                 __MINRES:
001490 efef      	SER  R30
001491 efff      	SER  R31
001492 e76f      	LDI  R22,0x7F
001493 ef7f      	SER  R23
001494 915f      	POP  R21
001495 9508      	RET
                 
                 __MAXRES:
001496 efef      	SER  R30
001497 efff      	SER  R31
001498 e76f      	LDI  R22,0x7F
001499 e77f      	LDI  R23,0x7F
00149a 915f      	POP  R21
00149b 9508      	RET
                 
                 __MULF12:
00149c 935f      	PUSH R21
00149d df2a      	RCALL __UNPACK
00149e 3870      	CPI  R23,0x80
00149f f351      	BREQ __ZERORES
0014a0 3890      	CPI  R25,0x80
0014a1 f341      	BREQ __ZERORES
0014a2 2401      	EOR  R0,R1
0014a3 9408      	SEC
0014a4 1f79      	ADC  R23,R25
0014a5 f423      	BRVC __MULF124
0014a6 f31c      	BRLT __ZERORES
                 __MULF125:
0014a7 2000      	TST  R0
0014a8 f33a      	BRMI __MINRES
0014a9 cfec      	RJMP __MAXRES
                 __MULF124:
0014aa 920f      	PUSH R0
0014ab 931f      	PUSH R17
0014ac 932f      	PUSH R18
0014ad 933f      	PUSH R19
0014ae 934f      	PUSH R20
0014af 2711      	CLR  R17
0014b0 2722      	CLR  R18
0014b1 2799      	CLR  R25
0014b2 9f68      	MUL  R22,R24
0014b3 01a0      	MOVW R20,R0
0014b4 9f8f      	MUL  R24,R31
0014b5 2d30      	MOV  R19,R0
0014b6 0d41      	ADD  R20,R1
0014b7 1f59      	ADC  R21,R25
0014b8 9f6b      	MUL  R22,R27
0014b9 0d30      	ADD  R19,R0
0014ba 1d41      	ADC  R20,R1
0014bb 1f59      	ADC  R21,R25
0014bc 9f8e      	MUL  R24,R30
0014bd d027      	RCALL __MULF126
0014be 9fbf      	MUL  R27,R31
0014bf d025      	RCALL __MULF126
0014c0 9f6a      	MUL  R22,R26
0014c1 d023      	RCALL __MULF126
0014c2 9fbe      	MUL  R27,R30
0014c3 d01d      	RCALL __MULF127
0014c4 9faf      	MUL  R26,R31
0014c5 d01b      	RCALL __MULF127
0014c6 9fae      	MUL  R26,R30
0014c7 0d11      	ADD  R17,R1
0014c8 1f29      	ADC  R18,R25
0014c9 1f39      	ADC  R19,R25
0014ca 1f49      	ADC  R20,R25
0014cb 1f59      	ADC  R21,R25
0014cc 2fe3      	MOV  R30,R19
0014cd 2ff4      	MOV  R31,R20
0014ce 2f65      	MOV  R22,R21
0014cf 2f52      	MOV  R21,R18
0014d0 914f      	POP  R20
0014d1 913f      	POP  R19
0014d2 912f      	POP  R18
0014d3 911f      	POP  R17
0014d4 900f      	POP  R0
0014d5 2366      	TST  R22
0014d6 f02a      	BRMI __MULF122
0014d7 0f55      	LSL  R21
0014d8 1fee      	ROL  R30
0014d9 1fff      	ROL  R31
0014da 1f66      	ROL  R22
0014db c002      	RJMP __MULF123
                 __MULF122:
0014dc 9573      	INC  R23
0014dd f24b      	BRVS __MULF125
                 __MULF123:
0014de decd      	RCALL __ROUND_REPACK
0014df 915f      	POP  R21
0014e0 9508      	RET
                 
                 __MULF127:
0014e1 0d10      	ADD  R17,R0
0014e2 1d21      	ADC  R18,R1
0014e3 1f39      	ADC  R19,R25
0014e4 c002      	RJMP __MULF128
                 __MULF126:
0014e5 0d20      	ADD  R18,R0
0014e6 1d31      	ADC  R19,R1
                 __MULF128:
0014e7 1f49      	ADC  R20,R25
0014e8 1f59      	ADC  R21,R25
0014e9 9508      	RET
                 
                 __DIVF21:
0014ea 935f      	PUSH R21
0014eb dedc      	RCALL __UNPACK
0014ec 3870      	CPI  R23,0x80
0014ed f421      	BRNE __DIVF210
0014ee 2011      	TST  R1
                 __DIVF211:
0014ef f40a      	BRPL __DIVF219
0014f0 cf9f      	RJMP __MINRES
                 __DIVF219:
0014f1 cfa4      	RJMP __MAXRES
                 __DIVF210:
0014f2 3890      	CPI  R25,0x80
0014f3 f409      	BRNE __DIVF218
                 __DIVF217:
0014f4 cf95      	RJMP __ZERORES
                 __DIVF218:
0014f5 2401      	EOR  R0,R1
0014f6 9408      	SEC
0014f7 0b97      	SBC  R25,R23
0014f8 f41b      	BRVC __DIVF216
0014f9 f3d4      	BRLT __DIVF217
0014fa 2000      	TST  R0
0014fb cff3      	RJMP __DIVF211
                 __DIVF216:
0014fc 2f79      	MOV  R23,R25
0014fd 931f      	PUSH R17
0014fe 932f      	PUSH R18
0014ff 933f      	PUSH R19
001500 934f      	PUSH R20
001501 2411      	CLR  R1
001502 2711      	CLR  R17
001503 2722      	CLR  R18
001504 2733      	CLR  R19
001505 2744      	CLR  R20
001506 2755      	CLR  R21
001507 e290      	LDI  R25,32
                 __DIVF212:
001508 17ae      	CP   R26,R30
001509 07bf      	CPC  R27,R31
00150a 0786      	CPC  R24,R22
00150b 0741      	CPC  R20,R17
00150c f030      	BRLO __DIVF213
00150d 1bae      	SUB  R26,R30
00150e 0bbf      	SBC  R27,R31
00150f 0b86      	SBC  R24,R22
001510 0b41      	SBC  R20,R17
001511 9408      	SEC
001512 c001      	RJMP __DIVF214
                 __DIVF213:
001513 9488      	CLC
                 __DIVF214:
001514 1f55      	ROL  R21
001515 1f22      	ROL  R18
001516 1f33      	ROL  R19
001517 1c11      	ROL  R1
001518 1faa      	ROL  R26
001519 1fbb      	ROL  R27
00151a 1f88      	ROL  R24
00151b 1f44      	ROL  R20
00151c 959a      	DEC  R25
00151d f751      	BRNE __DIVF212
00151e 01f9      	MOVW R30,R18
00151f 2d61      	MOV  R22,R1
001520 914f      	POP  R20
001521 913f      	POP  R19
001522 912f      	POP  R18
001523 911f      	POP  R17
001524 2366      	TST  R22
001525 f032      	BRMI __DIVF215
001526 0f55      	LSL  R21
001527 1fee      	ROL  R30
001528 1fff      	ROL  R31
001529 1f66      	ROL  R22
00152a 957a      	DEC  R23
00152b f243      	BRVS __DIVF217
                 __DIVF215:
00152c de7f      	RCALL __ROUND_REPACK
00152d 915f      	POP  R21
00152e 9508      	RET
                 
                 __CMPF12:
00152f 2399      	TST  R25
001530 f09a      	BRMI __CMPF120
001531 2377      	TST  R23
001532 f042      	BRMI __CMPF121
001533 1797      	CP   R25,R23
001534 f048      	BRLO __CMPF122
001535 f429      	BRNE __CMPF121
001536 17ae      	CP   R26,R30
001537 07bf      	CPC  R27,R31
001538 0786      	CPC  R24,R22
001539 f020      	BRLO __CMPF122
00153a f031      	BREQ __CMPF123
                 __CMPF121:
00153b 9498      	CLZ
00153c 9488      	CLC
00153d 9508      	RET
                 __CMPF122:
00153e 9498      	CLZ
00153f 9408      	SEC
001540 9508      	RET
                 __CMPF123:
001541 9418      	SEZ
001542 9488      	CLC
001543 9508      	RET
                 __CMPF120:
001544 2377      	TST  R23
001545 f7c2      	BRPL __CMPF122
001546 1797      	CP   R25,R23
001547 f398      	BRLO __CMPF121
001548 f7a9      	BRNE __CMPF122
001549 17ea      	CP   R30,R26
00154a 07fb      	CPC  R31,R27
00154b 0768      	CPC  R22,R24
00154c f388      	BRLO __CMPF122
00154d f399      	BREQ __CMPF123
00154e cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00154f 2400      	CLR  R0
001550 0daf      	ADD  R26,R15
001551 1db0      	ADC  R27,R0
001552 9508      	RET
                 
                 __ANEGW1:
001553 95f1      	NEG  R31
001554 95e1      	NEG  R30
001555 40f0      	SBCI R31,0
001556 9508      	RET
                 
                 __ANEGD1:
001557 95f0      	COM  R31
001558 9560      	COM  R22
001559 9570      	COM  R23
00155a 95e1      	NEG  R30
00155b 4fff      	SBCI R31,-1
00155c 4f6f      	SBCI R22,-1
00155d 4f7f      	SBCI R23,-1
00155e 9508      	RET
                 
                 __LSLB12:
00155f 23ee      	TST  R30
001560 2e0e      	MOV  R0,R30
001561 2fea      	MOV  R30,R26
001562 f019      	BREQ __LSLB12R
                 __LSLB12L:
001563 0fee      	LSL  R30
001564 940a      	DEC  R0
001565 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
001566 9508      	RET
                 
                 __LSLW12:
001567 23ee      	TST  R30
001568 2e0e      	MOV  R0,R30
001569 01fd      	MOVW R30,R26
00156a f021      	BREQ __LSLW12R
                 __LSLW12L:
00156b 0fee      	LSL  R30
00156c 1fff      	ROL  R31
00156d 940a      	DEC  R0
00156e f7e1      	BRNE __LSLW12L
                 __LSLW12R:
00156f 9508      	RET
                 
                 __LSLW2:
001570 0fee      	LSL  R30
001571 1fff      	ROL  R31
001572 0fee      	LSL  R30
001573 1fff      	ROL  R31
001574 9508      	RET
                 
                 __ASRW8:
001575 2fef      	MOV  R30,R31
001576 27ff      	CLR  R31
001577 fde7      	SBRC R30,7
001578 efff      	SER  R31
001579 9508      	RET
                 
                 __CBD1:
00157a 2ffe      	MOV  R31,R30
00157b 0fff      	ADD  R31,R31
00157c 0bff      	SBC  R31,R31
00157d 2f6f      	MOV  R22,R31
00157e 2f7f      	MOV  R23,R31
00157f 9508      	RET
                 
                 __CWD1:
001580 2f6f      	MOV  R22,R31
001581 0f66      	ADD  R22,R22
001582 0b66      	SBC  R22,R22
001583 2f76      	MOV  R23,R22
001584 9508      	RET
                 
                 __MULW12U:
001585 9ffa      	MUL  R31,R26
001586 2df0      	MOV  R31,R0
001587 9feb      	MUL  R30,R27
001588 0df0      	ADD  R31,R0
001589 9fea      	MUL  R30,R26
00158a 2de0      	MOV  R30,R0
00158b 0df1      	ADD  R31,R1
00158c 9508      	RET
                 
                 __MULW12:
00158d d01c      	RCALL __CHKSIGNW
00158e dff6      	RCALL __MULW12U
00158f f40e      	BRTC __MULW121
001590 dfc2      	RCALL __ANEGW1
                 __MULW121:
001591 9508      	RET
                 
                 __DIVW21U:
001592 2400      	CLR  R0
001593 2411      	CLR  R1
001594 e190      	LDI  R25,16
                 __DIVW21U1:
001595 0faa      	LSL  R26
001596 1fbb      	ROL  R27
001597 1c00      	ROL  R0
001598 1c11      	ROL  R1
001599 1a0e      	SUB  R0,R30
00159a 0a1f      	SBC  R1,R31
00159b f418      	BRCC __DIVW21U2
00159c 0e0e      	ADD  R0,R30
00159d 1e1f      	ADC  R1,R31
00159e c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00159f 60a1      	SBR  R26,1
                 __DIVW21U3:
0015a0 959a      	DEC  R25
0015a1 f799      	BRNE __DIVW21U1
0015a2 01fd      	MOVW R30,R26
0015a3 01d0      	MOVW R26,R0
0015a4 9508      	RET
                 
                 __DIVW21:
0015a5 d004      	RCALL __CHKSIGNW
0015a6 dfeb      	RCALL __DIVW21U
0015a7 f40e      	BRTC __DIVW211
0015a8 dfaa      	RCALL __ANEGW1
                 __DIVW211:
0015a9 9508      	RET
                 
                 __CHKSIGNW:
0015aa 94e8      	CLT
0015ab fff7      	SBRS R31,7
0015ac c002      	RJMP __CHKSW1
0015ad dfa5      	RCALL __ANEGW1
0015ae 9468      	SET
                 __CHKSW1:
0015af ffb7      	SBRS R27,7
0015b0 c006      	RJMP __CHKSW2
0015b1 95a0      	COM  R26
0015b2 95b0      	COM  R27
0015b3 9611      	ADIW R26,1
0015b4 f800      	BLD  R0,0
0015b5 9403      	INC  R0
0015b6 fa00      	BST  R0,0
                 __CHKSW2:
0015b7 9508      	RET
                 
                 __GETW1P:
0015b8 91ed      	LD   R30,X+
0015b9 91fc      	LD   R31,X
0015ba 9711      	SBIW R26,1
0015bb 9508      	RET
                 
                 __GETD1P:
0015bc 91ed      	LD   R30,X+
0015bd 91fd      	LD   R31,X+
0015be 916d      	LD   R22,X+
0015bf 917c      	LD   R23,X
0015c0 9713      	SBIW R26,3
0015c1 9508      	RET
                 
                 __PUTDP1:
0015c2 93ed      	ST   X+,R30
0015c3 93fd      	ST   X+,R31
0015c4 936d      	ST   X+,R22
0015c5 937c      	ST   X,R23
0015c6 9508      	RET
                 
                 __GETW1PF:
0015c7 9005      	LPM  R0,Z+
0015c8 91f4      	LPM  R31,Z
0015c9 2de0      	MOV  R30,R0
0015ca 9508      	RET
                 
                 __GETD2S0:
0015cb 81a8      	LD   R26,Y
0015cc 81b9      	LDD  R27,Y+1
0015cd 818a      	LDD  R24,Y+2
0015ce 819b      	LDD  R25,Y+3
0015cf 9508      	RET
                 
                 __PUTD1S0:
0015d0 83e8      	ST   Y,R30
0015d1 83f9      	STD  Y+1,R31
0015d2 836a      	STD  Y+2,R22
0015d3 837b      	STD  Y+3,R23
0015d4 9508      	RET
                 
                 __PUTDZ20:
0015d5 83a0      	ST   Z,R26
0015d6 83b1      	STD  Z+1,R27
0015d7 8382      	STD  Z+2,R24
0015d8 8393      	STD  Z+3,R25
0015d9 9508      	RET
                 
                 __PUTPARD1:
0015da 937a      	ST   -Y,R23
0015db 936a      	ST   -Y,R22
0015dc 93fa      	ST   -Y,R31
0015dd 93ea      	ST   -Y,R30
0015de 9508      	RET
                 
                 __SWAPD12:
0015df 2e18      	MOV  R1,R24
0015e0 2f86      	MOV  R24,R22
0015e1 2d61      	MOV  R22,R1
0015e2 2e19      	MOV  R1,R25
0015e3 2f97      	MOV  R25,R23
0015e4 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0015e5 2e1b      	MOV  R1,R27
0015e6 2fbf      	MOV  R27,R31
0015e7 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0015e8 2e1a      	MOV  R1,R26
0015e9 2fae      	MOV  R26,R30
0015ea 2de1      	MOV  R30,R1
0015eb 9508      	RET
                 
                 __SAVELOCR6:
0015ec 935a      	ST   -Y,R21
                 __SAVELOCR5:
0015ed 934a      	ST   -Y,R20
                 __SAVELOCR4:
0015ee 933a      	ST   -Y,R19
                 __SAVELOCR3:
0015ef 932a      	ST   -Y,R18
                 __SAVELOCR2:
0015f0 931a      	ST   -Y,R17
0015f1 930a      	ST   -Y,R16
0015f2 9508      	RET
                 
                 __LOADLOCR6:
0015f3 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0015f4 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0015f5 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0015f6 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0015f7 8119      	LDD  R17,Y+1
0015f8 8108      	LD   R16,Y
0015f9 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
0015fa 0fac      	ADD  R26,R28
0015fb 1fbd      	ADC  R27,R29
                 __INITLOC0:
0015fc 9005      	LPM  R0,Z+
0015fd 920d      	ST   X+,R0
0015fe 958a      	DEC  R24
0015ff f7e1      	BRNE __INITLOC0
001600 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  84 r1 :  43 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16: 105 r17: 154 r18:  59 r19:  30 r20:  38 r21:  83 r22: 108 r23:  91 
r24:  76 r25:  65 r26: 331 r27: 156 r28:  37 r29:   2 r30:1155 r31: 442 
x  :  62 y  : 532 z  :  70 
Registers used: 22 out of 35 (62.9%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  39 add   :  34 
adiw  :  48 and   :   6 andi  :  17 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :  12 brcs  :   3 break :   0 breq  :  66 
brge  :   8 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  34 
brlt  :   5 brmi  :  10 brne  :  73 brpl  :   9 brsh  :  21 brtc  :   3 
brts  :   2 brvc  :   4 brvs  :   4 bset  :   0 bst   :   1 call  : 757 
cbi   :  10 cbr   :   0 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  43 cls   :   0 clt   :   4 clv   :   0 clz   :   2 com   :  10 
cp    :  21 cpc   :  32 cpi   : 103 cpse  :   0 dec   :  13 des   :   0 
elpm  :   0 eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :  29 inc   :   3 jmp   :  77 ld    :  91 ldd   : 196 
ldi   : 615 lds   :  59 lpm   :  17 lsl   :  27 lsr   :   2 mov   :  81 
movw  :  96 mul   :  17 muls  :   2 mulsu :   0 neg   :   4 nop   :   0 
or    :   5 ori   :  17 out   :  92 pop   :  82 push  :  82 rcall :  79 
ret   : 168 reti  :   2 rjmp  : 254 rol   :  40 ror   :  12 sbc   :  12 
sbci  :  79 sbi   :  10 sbic  :  23 sbis  :  53 sbiw  :  42 sbr   :   1 
sbrc  :   4 sbrs  :  13 sec   :   4 seh   :   0 sei   :   1 sen   :   0 
ser   :   9 ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 276 std   :  87 sts   :  88 sub   :   8 subi  : 116 
swap  :   2 tst   :  24 wdr   :   1 
Instructions used: 83 out of 117 (70.9%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002c02  10788    478  11266  131072   8.6%
[.dseg] 0x000100 0x00072d      0    557    557    4351  12.8%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 0 warnings
